<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>Niels Berglund</title>
 <link href="http://nielsberglund.com/atom.xml" rel="self"/>
 <link href="http://nielsberglund.com/"/>
 <updated>2018-03-04T19:35:34+02:00</updated>
 <id>http://nielsberglund.com</id>
 <author>
   <name>Niels Berglund</name>
   <email></email>
 </author>

 
 <entry>
   <title>Interesting Stuff - Week 9</title>
   <link href="http://nielsberglund.com/2018/03/04/interesting-stuff-week-9/"/>
   <updated>2018-03-04T19:29:44+02:00</updated>
   <id>http://nielsberglund.com/2018/03/04/interesting-stuff---week-9</id>
   <content type="html">&lt;p&gt;Throughout the week, I read a lot of blog-posts, articles, and so forth, that has to do with things that interest me:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;data science&lt;/li&gt;
&lt;li&gt;data in general&lt;/li&gt;
&lt;li&gt;distributed computing&lt;/li&gt;
&lt;li&gt;SQL Server&lt;/li&gt;
&lt;li&gt;transactions (both db as well as non db)&lt;/li&gt;
&lt;li&gt;and other &quot;stuff&quot;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This blog-post is the &quot;roundup&quot; of the things that have been most interesting to me, for the week just ending.&lt;/p&gt;

&lt;!--more--&gt;


&lt;h2&gt;.NET&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://mattwarren.org/2018/03/02/How-generics-were-added-to-.NET/&quot;&gt;How generics were added to .NET&lt;/a&gt;. A very, very interesting post by &lt;a href=&quot;https://twitter.com/matthewwarren&quot;&gt;Matthew&lt;/a&gt; about the &quot;history&quot; of generics in .NET. I have said it before, and I say it again - if you are interested in the &quot;plumbing&quot; of .NET, Matthew's blog is a must-read!&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Databases&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.infoq.com/news/2018/02/axondb-event-store-cqrs&quot;&gt;AxonDB, a New Implementation of an Event Store&lt;/a&gt;. An article from &lt;a href=&quot;https://www.infoq.com/&quot;&gt;InfoQ&lt;/a&gt; presenting AxonDB, which is a new data storage purpose-built for event sourcing with support for transactions and pushed-based event publishing. AxonDB is something I want to look closer into, and also see how it plays with Kafka.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Streaming&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.infoq.com/presentations/facebook-stream-processing&quot;&gt;Data Decisions with Real-time Stream Processing&lt;/a&gt;. A presentation from &lt;a href=&quot;https://www.infoq.com/&quot;&gt;InfoQ&lt;/a&gt; and its QCon conference. The presentation is about how Facebook is using stream processing at scale to deliver insights with data stream processing, and it also covers difficulties they have encountered and the solutions they have created to date.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Data Science&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://101.datascience.community/2018/02/26/learn-data-science-youtube-channel/&quot;&gt;LEARN DATA SCIENCE YOUTUBE CHANNEL&lt;/a&gt;. &lt;a href=&quot;https://twitter.com/ryanswanstrom&quot;&gt;Ryan Swanstrom&lt;/a&gt; from &lt;a href=&quot;http://101.datascience.community/&quot;&gt;Data Science 101&lt;/a&gt; launches a new YouTube channel to help to learn about data science. I have subscribed!&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://101.datascience.community/2018/03/01/conversations-with-future-data-scientists-youtube-playlist/&quot;&gt;CONVERSATIONS WITH FUTURE DATA SCIENTISTS (YOUTUBE PLAYLIST)&lt;/a&gt;. A video from &lt;a href=&quot;https://twitter.com/ryanswanstrom&quot;&gt;Ryan&lt;/a&gt; and the YouTube channel mentioned above. In this video, Ryan chats to some future data scientists about various topics. Exciting questions and answers!&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://livebook.datascienceheroes.com&quot;&gt;Data Science Live Book&lt;/a&gt;. An online data science book by &lt;a href=&quot;https://twitter.com/pabloc_ds&quot;&gt;Pablo Casas&lt;/a&gt;. The book is about data preparation, data analysis and machine learning.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blogs.msdn.microsoft.com/buckwoody/2018/02/27/azure-machine-learning-and-the-team-data-science-process-part-1/&quot;&gt;Azure Machine Learning and the Team Data Science Process – Part 1&lt;/a&gt;. The first post in a series by &lt;a href=&quot;https://twitter.com/BuckWoodyMSFT&quot;&gt;Buck Woody&lt;/a&gt; how the Microsoft Team Data Science Process fits in with Azure Machine Learning, AI programming and Deep Learning.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blogs.technet.microsoft.com/machinelearning/2018/02/27/introducing-the-microsoft-machine-learning-server-9-3-release/&quot;&gt;Introducing the Microsoft Machine Learning Server 9.3 Release&lt;/a&gt;. A blog post to announce the release of Microsoft Machine Learning Server 9.3. There are quite a few new features and lots of improvements, so go ahead and read the post and upgrade to the new version. I will!&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;SQL Server R Services&lt;/h2&gt;

&lt;p&gt;Good news, I have come quite a bit on the way with my post about  &lt;code&gt;sp_execute_external_script&lt;/code&gt;. I had hoped to be able to publish it today, but unfortunately, that seems out of the question. Expect it in a couple of days!&lt;/p&gt;

&lt;h2&gt;~ Finally&lt;/h2&gt;

&lt;p&gt;That's all for this week. I hope you enjoy what I did put together. If you have ideas for what to cover, please comment on this post or &lt;a href=&quot;mailto:niels.it.berglund@gmail.com&quot;&gt;ping&lt;/a&gt; me.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Interesting Stuff - Week 8</title>
   <link href="http://nielsberglund.com/2018/02/25/interesting-stuff-week-8/"/>
   <updated>2018-02-25T11:06:52+02:00</updated>
   <id>http://nielsberglund.com/2018/02/25/interesting-stuff---week-8</id>
   <content type="html">&lt;p&gt;Throughout the week, I read a lot of blog-posts, articles, and so forth, that has to do with things that interest me:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;data science&lt;/li&gt;
&lt;li&gt;AI&lt;/li&gt;
&lt;li&gt;data in general&lt;/li&gt;
&lt;li&gt;distributed computing&lt;/li&gt;
&lt;li&gt;SQL Server&lt;/li&gt;
&lt;li&gt;transactions (both db as well as non db)&lt;/li&gt;
&lt;li&gt;and other &quot;stuff&quot;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This blog-post is the &quot;roundup&quot; of the things that have been most interesting to me, for the week just ending.&lt;/p&gt;

&lt;!--more--&gt;


&lt;h2&gt;.NET&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.infoq.com/presentations/steeltoe-net-microservices&quot;&gt;Steeltoe and the Open Source .NET Renaissance&lt;/a&gt;. A discussion about the .NET platform renaissance, the &lt;a href=&quot;https://steeltoe.io/&quot;&gt;Steeltoe&lt;/a&gt; framework, and a demonstration how to build resilient microservices with ASP.NET Core.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Streaming&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.infoq.com/presentations/beam-model-stream-table=theory&quot;&gt;Streaming SQL Foundations: Why I ❤Streams+Tables&lt;/a&gt;. An &lt;a href=&quot;https://www.infoq.com/&quot;&gt;InfoQ&lt;/a&gt; presentation about what is required to provide robust stream processing support in SQL. It also and discusses concrete efforts that have been made in the stream processing area by the Apache Beam, Calcite, and Flink communities.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.infoq.com/presentations/distributed-stream-processing-flink&quot;&gt;The Power of Distributed Snapshots in Apache Flink&lt;/a&gt;. Another &lt;a href=&quot;https://www.infoq.com/&quot;&gt;InfoQ&lt;/a&gt; presentation. This time about how Apache Flink handles stateful stream processing and how to manage distributed stream processing and data-driven applications efficiently with Flink's checkpoints and savepoints.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.confluent.io/blog/securing-ksql/&quot;&gt;Securing KSQL&lt;/a&gt;. A blog post looking at stream processing examples using KSQL, as well as how to secure KSQL and the entire Confluent Platform with encryption, authentication, and authorisation.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Data Science &amp;amp; AI&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blogs.msdn.microsoft.com/buckwoody/2018/02/22/the-microsoft-artificial-intelligence-landscape-and-what-to-use-when/&quot;&gt;The Microsoft Artificial Intelligence Landscape – And What to use When&lt;/a&gt;. A blog post by &lt;a href=&quot;https://twitter.com/BuckWoodyMSFT&quot;&gt;Buck Woody&lt;/a&gt;, where he talks about what Microsoft offers in terms of AI.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.revolutionanalytics.com/2018/02/r-with-tensorflow.html&quot;&gt;Machine Learning in R with TensorFlow&lt;/a&gt;. This post is from &lt;a href=&quot;https://twitter.com/revodavid&quot;&gt;David&lt;/a&gt; at &lt;a href=&quot;http://blog.revolutionanalytics.com&quot;&gt;Revolution Analytics&lt;/a&gt;, and he talks about how to use &lt;a href=&quot;https://www.tensorflow.org/&quot;&gt;TensorFlow&lt;/a&gt; in R.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://towardsdatascience.com/architecture-overview-of-a-conversational-ai-chat-bot-4ef3dfefd52e&quot;&gt;Conversational AI chat-bot — Architecture overview&lt;/a&gt;. Lately, I have become interested in AI chat-bots, so this article which gives an overview of a typical architecture to build a conversational AI chat-bot is right &quot;down my ally&quot;.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;SQL Server R Services&lt;/h2&gt;

&lt;p&gt;I am starting to feel bad about not being able to publish the promised post about &lt;code&gt;sp_execute_external_script&lt;/code&gt;. The reason for this is that a lot going on at work at the moment. In the meantime, &lt;a href=&quot;/2017/03/04/microsoft-sql-server-2016-r-services-installation/&quot;&gt;here&lt;/a&gt; is the link to the first post in the &lt;strong&gt;SQL Server R Services&lt;/strong&gt; series.&lt;/p&gt;

&lt;h2&gt;~ Finally&lt;/h2&gt;

&lt;p&gt;That's all for this week. I hope you enjoy what I did put together. If you have ideas for what to cover, please comment on this post or &lt;a href=&quot;mailto:niels.it.berglund@gmail.com&quot;&gt;ping&lt;/a&gt; me.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Interesting Stuff - Week 7</title>
   <link href="http://nielsberglund.com/2018/02/18/interesting-stuff-week-7/"/>
   <updated>2018-02-18T13:33:05+02:00</updated>
   <id>http://nielsberglund.com/2018/02/18/interesting-stuff---week-7</id>
   <content type="html">&lt;p&gt;Throughout the week, I read a lot of blog-posts, articles, and so forth, that has to do with things that interest me:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;data science&lt;/li&gt;
&lt;li&gt;data in general&lt;/li&gt;
&lt;li&gt;distributed computing&lt;/li&gt;
&lt;li&gt;SQL Server&lt;/li&gt;
&lt;li&gt;transactions (both db as well as non db)&lt;/li&gt;
&lt;li&gt;and other &quot;stuff&quot;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This blog-post is the &quot;roundup&quot; of the things that have been most interesting to me, for the week just ending.&lt;/p&gt;

&lt;!--more--&gt;


&lt;p&gt;Very little to report this week. Partly due to me been away at a conference in Cape Town: &lt;a href=&quot;https://www.microsoft.com/en-za/techsummit/cape-town&quot;&gt;&lt;strong&gt;Microsoft Tech Summit&lt;/strong&gt;&lt;/a&gt;. It was very interesting, and I  met up with some old friends while manning the &lt;em&gt;Expert&lt;/em&gt; booth. Hmm, me an expert - that must be a contradiction in terms. Be as it may with that, here is what I have.&lt;/p&gt;

&lt;h2&gt;Streaming&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.microsoft.com/en-za/techsummit/cape-town&quot;&gt;KSQL in Action: Real-Time Streaming ETL from Oracle Transactional Data&lt;/a&gt;. If you follow blog posts about Kafka, you cannot help but notice how they quite often discuss using streaming in place of ETL. This particular post shows hot to use Kafka to stream data from Oracle. I find this post particularly interesting as - once upon a time - I wrote a framework to stream data from SQL Server to RabbitMQ.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://data-artisans.com/blog/end-to-end-exactly-once-processing-apache-flink-apache-kafka&quot;&gt;An Overview of End-to-End Exactly-Once Processing in Apache Flink® (with Apache Kafka, too!)&lt;/a&gt;. This post talks in detail how exactly-once delivery is implemented in Flink. Must read!&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Data Science&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.revolutionanalytics.com/2018/02/what-does-microsoft-do-with-r.html&quot;&gt;What does Microsoft do with R?&lt;/a&gt;. A blog post from the boys at &lt;a href=&quot;http://blog.revolutionanalytics.com&quot;&gt;Revolution Analytics&lt;/a&gt; about what software and solutions Microsoft has developed around R. It covers both open source - which don't require any particular version of R - as well as proprietary solutions.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;SQL Server R Services&lt;/h2&gt;

&lt;p&gt;I am still working on the post about &lt;code&gt;sp_execute_external_script&lt;/code&gt; in the &lt;strong&gt;SQL Server R Services&lt;/strong&gt;. Watch this space.&lt;/p&gt;

&lt;h2&gt;~ Finally&lt;/h2&gt;

&lt;p&gt;That's all for this week. I hope you enjoy what I did put together. If you have ideas for what to cover, please comment on this post or &lt;a href=&quot;mailto:niels.it.berglund@gmail.com&quot;&gt;ping&lt;/a&gt; me.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Interesting Stuff - Week 6</title>
   <link href="http://nielsberglund.com/2018/02/11/interesting-stuff-week-6/"/>
   <updated>2018-02-11T06:57:25+02:00</updated>
   <id>http://nielsberglund.com/2018/02/11/interesting-stuff---week-6</id>
   <content type="html">&lt;p&gt;Throughout the week, I read a lot of blog-posts, articles, and so forth, that has to do with things that interest me:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;data science&lt;/li&gt;
&lt;li&gt;data in general&lt;/li&gt;
&lt;li&gt;distributed computing&lt;/li&gt;
&lt;li&gt;SQL Server&lt;/li&gt;
&lt;li&gt;transactions (both db as well as non db)&lt;/li&gt;
&lt;li&gt;and other &quot;stuff&quot;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This blog-post is the &quot;roundup&quot; of the things that have been most interesting to me, for the week just ending.&lt;/p&gt;

&lt;!--more--&gt;


&lt;h2&gt;Distributed Computing&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.infoq.com/articles/kubernetes-effect&quot;&gt;The Kubernetes Effect&lt;/a&gt;. The first of two links this week from &lt;a href=&quot;https://www.infoq.com/&quot;&gt;InfoQ&lt;/a&gt; that have to do with &lt;a href=&quot;https://kubernetes.io/&quot;&gt;Kubernetes&lt;/a&gt;. This article discusses the evolution of Kubernetes and what Kubernetes can do for us.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Misc.&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://muratbuffalo.blogspot.co.za/2018/02/think-before-you-code.html&quot;&gt;Think before you code&lt;/a&gt;. In this post &lt;a href=&quot;https://twitter.com/muratdemirbas&quot;&gt;Murat&lt;/a&gt; talks about different coding styles, and how important it is to think before you code. To think about the design and code, does not necessarily mean that you think, think, think, and strive for the perfect design (In my mind there is no such thing as a perfect design). A fascinating article and I thoroughly enjoyed it!&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Streaming&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.infoq.com/news/2018/02/kubecon-kafka-clusters-kubernete&quot;&gt;Managing and Operating Kafka Clusters in Kubernetes&lt;/a&gt;. The second article this week about Kubernetes and this article discusses how Kubernetes can make running Kafka clusters much easier.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.infoq.com/articles/netflix-migrating-stream-processing&quot;&gt;Migrating Batch ETL to Stream Processing: A Netflix Case Study with Kafka and Flink&lt;/a&gt;. This article is about Netflix journey from an ETL based approach to moving data, to a real-time process using Kafka and Flink. A must read!!&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://data-artisans.com/blog/apache-flink-master-branch-monthly-whats-new-flink-january-2018&quot;&gt;Apache Flink Master Branch Monthly: New in Flink in January 2018&lt;/a&gt;. This post is highlighting a selection of features that have been merged into Flink’s master branch during January.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;SQL Server R Services&lt;/h2&gt;

&lt;p&gt;The &lt;strong&gt;Microsoft SQL Server R Services&lt;/strong&gt; series is coming to an end. Last week I posted the last post of the &lt;a href=&quot;/2018/02/02/microsoft-sql-server-r-services-internals-xx/&quot;&gt;&lt;strong&gt;Internals&lt;/strong&gt;&lt;/a&gt; part, and I am now working on a post about &lt;code&gt;sp_execute_external_script&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;~ Finally&lt;/h2&gt;

&lt;p&gt;That's all for this week. I hope you enjoy what I did put together. If you have ideas for what to cover, please comment on this post or &lt;a href=&quot;mailto:niels.it.berglund@gmail.com&quot;&gt;ping&lt;/a&gt; me.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Interesting Stuff - Week 5</title>
   <link href="http://nielsberglund.com/2018/02/04/interesting-stuff-week-5/"/>
   <updated>2018-02-04T19:55:11+02:00</updated>
   <id>http://nielsberglund.com/2018/02/04/interesting-stuff---week-5</id>
   <content type="html">&lt;p&gt;Throughout the week, I read a lot of blog-posts, articles, and so forth, that has to do with things that interest me:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;data science&lt;/li&gt;
&lt;li&gt;data in general&lt;/li&gt;
&lt;li&gt;distributed computing&lt;/li&gt;
&lt;li&gt;SQL Server&lt;/li&gt;
&lt;li&gt;transactions (both db as well as non db)&lt;/li&gt;
&lt;li&gt;and other &quot;stuff&quot;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This blog-post is the &quot;roundup&quot; of the things that have been most interesting to me, for the week just ending.&lt;/p&gt;

&lt;!--more--&gt;


&lt;h2&gt;SQL Server&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blogs.msdn.microsoft.com/sqlserverstorageengine/2018/01/31/json-in-sql-server-use-cases/&quot;&gt;JSON in SQL Server – Use cases&lt;/a&gt;. I had a link to a post by &lt;a href=&quot;https://twitter.com/JovanPop_MSFT&quot;&gt;Jovan&lt;/a&gt; in last week's &lt;a href=&quot;/2018/01/28/interesting-stuff-week-4/&quot;&gt;roundup&lt;/a&gt;, where he wrote about using JSON for de-normalised data models. In this post, Jovan discusses various use cases for JSON in SQL Server. Interesting!&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blogs.msdn.microsoft.com/bobsql/2018/01/28/how-it-works-sql-server-dtc-msdtc-and-xa-transactions/&quot;&gt;How It Works: SQL Server DTC (MSDTC and XA Transactions)&lt;/a&gt;. An in-depth post about how MS DTC and the XA protocol works in SQL Server.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blogs.msdn.microsoft.com/sqlserverstorageengine/2018/01/29/simplify-rest-api-development-modern-single-page-apps-sql-server/&quot;&gt;Simplify REST API development for modern Single-page apps with SQL Server&lt;/a&gt;. More from &lt;a href=&quot;https://twitter.com/JovanPop_MSFT&quot;&gt;&quot;Mr JSON in SQL Server&quot;&lt;/a&gt; (Jovan). In this post, he writes about how the use of JSON in SQL Server can simplify REST API development.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Databases Misc.&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.infoq.com/articles/deployment-pipeline-database-changes&quot;&gt;Why and How Database Changes Should Be Included in the Deployment Pipeline&lt;/a&gt;. What the title says. An article from &lt;a href=&quot;https://www.infoq.com/&quot;&gt;InfoQ&lt;/a&gt; about including database code in the build pipeline.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;.NET&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blogs.msdn.microsoft.com/dotnet/2018/02/02/net-core-2-1-roadmap/&quot;&gt;.NET Core 2.1 Roadmap&lt;/a&gt;. This post lays out the roadmap for the upcoming .NET Core 2.1, and it focuses on CoreCLR, CoreFX and CLI improvements.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/magazine/mt814808.aspx&quot;&gt;C# - All About Span: Exploring a New .NET Mainstay&lt;/a&gt;. The above link led me to this article by &lt;a href=&quot;https://blogs.msdn.microsoft.com/pfxteam/&quot;&gt;Stephen Toub&lt;/a&gt; where he discusses a new value type in .NET: &lt;code&gt;System.Span&amp;lt;T&amp;gt;&lt;/code&gt;. The article is a &lt;strong&gt;must read&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Streaming&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.confluent.io/blog/ksql-january-release-streaming-sql-apache-kafka/&quot;&gt;KSQL January release: Streaming SQL for Apache Kafka&lt;/a&gt;. This post announces the release of KSQL 0.4, aka the January 2018 release of KSQL, and it takes a look at what is new in this release.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Data Science&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/@jrodthoughts/randomness-in-deep-learning-systems-monte-carlo-and-las-vegas-methods-fc03108fa80c&quot;&gt;Randomness in Deep Learning Systems: Monte Carlo and Las Vegas Methods&lt;/a&gt;. A short and sweet comparison between Las Vegas and Monte Carlo methods by &lt;a href=&quot;https://twitter.com/jrdothoughts&quot;&gt;Jesus&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://tomaztsql.wordpress.com/2018/01/28/r-or-python-python-or-r-the-ongoing-debate/&quot;&gt;R or Python? Python or R? The ongoing debate.&lt;/a&gt;. Some thoughts by &lt;a href=&quot;https://twitter.com/tomaz_tsql&quot;&gt;Tomaz&lt;/a&gt; about R vs. Python for data scientists.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;SQL Server R Services&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/2018/02/02/microsoft-sql-server-r-services-internals-xx/&quot;&gt;Microsoft SQL Server R Services - Internals XX&lt;/a&gt;. This post is the last post of the &lt;strong&gt;Internals&lt;/strong&gt; posts in the &lt;strong&gt;Microsoft SQL Server R Services&lt;/strong&gt; series. In the post, I cover how SQL Server, and the launchpad service, handle errors from the external engine.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;~ Finally&lt;/h2&gt;

&lt;p&gt;That's all for this week. I hope you enjoy what I did put together. If you have ideas for what to cover, please comment on this post or &lt;a href=&quot;mailto:niels.it.berglund@gmail.com&quot;&gt;ping&lt;/a&gt; me.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Microsoft SQL Server R Services - Internals XX</title>
   <link href="http://nielsberglund.com/2018/02/02/microsoft-sql-server-r-services-internals-xx/"/>
   <updated>2018-02-02T19:48:22+02:00</updated>
   <id>http://nielsberglund.com/2018/02/02/microsoft-sql-server-r-services---internals-xx</id>
   <content type="html">&lt;p&gt;This post is part of a series of blog-posts about Microsoft SQL Server R Services:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;/2017/03/04/microsoft-sql-server-2016-r-services-installation/&quot;&gt;Microsoft SQL Server 2016 R Services Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2017/03/18/microsoft-sql-server-r-services-internals-i/&quot;&gt;Microsoft SQL Server R Services - Internals I&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2017/04/02/microsoft-sql-server-r-services-internals-ii/&quot;&gt;Microsoft SQL Server R Services - Internals II&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2017/04/13/microsoft-sql-server-r-services-internals-iii/&quot;&gt;Microsoft SQL Server R Services - Internals III&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2017/04/23/microsoft-sql-server-r-services-internals-iv/&quot;&gt;Microsoft SQL Server R Services - Internals IV&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2017/05/01/microsoft-sql-server-r-services-internals-v/&quot;&gt;Microsoft SQL Server R Services - Internals V&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2017/05/16/microsoft-sql-server-r-services-internals-vi/&quot;&gt;Microsoft SQL Server R Services - Internals VI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2017/07/11/microsoft-sql-server-r-services-internals-vii/&quot;&gt;Microsoft SQL Server R Services - Internals VII&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2017/07/22/microsoft-sql-server-r-services-internals-viii/&quot;&gt;Microsoft SQL Server R Services - Internals VIII&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2017/08/18/microsoft-sql-server-r-services-internals-ix/&quot;&gt;Microsoft SQL Server R Services - Internals IX&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2017/08/29/microsoft-sql-server-r-services-internals-x/&quot;&gt;Microsoft SQL Server R Services - Internals X&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2017/10/20/microsoft-sql-server-r-services-internals-xi/&quot;&gt;Microsoft SQL Server R Services - Internals XI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2017/10/31/microsoft-sql-server-r-services-internals-xii/&quot;&gt;Microsoft SQL Server R Services - Internals XII&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2017/11/11/microsoft-sql-server-r-services-internals-xiii/&quot;&gt;Microsoft SQL Server R Services - Internals XIII&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2017/11/25/microsoft-sql-server-r-services-internals-xiv/&quot;&gt;Microsoft SQL Server R Services - Internals XIV&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2017/12/02/microsoft-sql-server-r-services-internals-xv/&quot;&gt;Microsoft SQL Server R Services - Internals XV&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2017/12/24/microsoft-sql-server-r-services-internals-xvi/&quot;&gt;Microsoft SQL Server R Services - Internals XVI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2018/01/03/microsoft-sql-server-r-services-internals-xvii/&quot;&gt;Microsoft SQL Server R Services - Internals XVII&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2018/01/10/microsoft-sql-server-r-services-internals-xviii/&quot;&gt;Microsoft SQL Server R Services - Internals XVIII&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2018/01/20/microsoft-sql-server-r-services-internals-xix/&quot;&gt;Microsoft SQL Server R Services - Internals XIX&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Microsoft SQL Server R Services - Internals XX (this post)&lt;/li&gt;
&lt;li&gt;More to come (hopefully)&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;This post is the 21:th post about Microsoft SQL Server R Services (it is now called &lt;strong&gt;Microsoft SQL Server Machine Learning Services&lt;/strong&gt;), and the 20:th post that drills down into the internals of how it works. Wow, 20 posts about internals - when I started this &lt;strong&gt;Microsoft SQL Server R Services&lt;/strong&gt; series, I thought I might achieve five or six posts. I would never have - in my wildest fantasies - thought I would reach twenty!&lt;/p&gt;

&lt;p&gt;We are however now coming closer to the end of this whole series, and this post is the last for &lt;strong&gt;Internals&lt;/strong&gt;. After this post, I foresee one, possibly two, more posts about other things related to &lt;strong&gt;Microsoft SQL Server R Services&lt;/strong&gt;  - and then we are done!&lt;/p&gt;

&lt;!--more--&gt;


&lt;p&gt;In the last post: &lt;a href=&quot;/2018/01/20/microsoft-sql-server-r-services-internals-xix/&quot;&gt;Internals - XIX&lt;/a&gt; we discussed how &quot;print&quot; statements and acks came back to SQL Server from the external engine. When I started writing that post, I intended to cover error messages as well, but as I was investigating what happens, I realised it was more to error messages than what I initially thought. So in this post, we talk about how SQL Server and the launchpad service handle errors.&lt;/p&gt;

&lt;h2&gt;Recap&lt;/h2&gt;

&lt;p&gt;Before we go into the details about errors, let us do a recap of the &lt;a href=&quot;/2018/01/20/microsoft-sql-server-r-services-internals-xix/&quot;&gt;Internals - XIX&lt;/a&gt; post, as there are many similarities between the handling of error messages and &quot;print&quot;/ack messages are.&lt;/p&gt;

&lt;p&gt;The easiest way to recap is to use the two figures we had in &lt;a href=&quot;/2018/01/20/microsoft-sql-server-r-services-internals-xix/&quot;&gt;Internals - XIX&lt;/a&gt; which illustrated the flow of the launchpad service as well as SQL Server.&lt;/p&gt;

&lt;h4&gt;Launchpad Service&lt;/h4&gt;

&lt;p&gt;This is the flow (on a high level) in the launchpad service:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sql_r_services_19_launchpad_flow.png&quot; width=&quot;800&quot; height=&quot;431&quot;  &gt;
&lt;strong&gt;Figure 1:&lt;/strong&gt; &lt;em&gt;Launchpad Flow&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In &lt;em&gt;Figure 1&lt;/em&gt; we see the main calls of leading up to and including when messages come back from the external engine. The numbered arrows show some of the calls and the communication in the launchpad service:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;During startup, an IOCP &quot;listener&quot; is set up.&lt;/li&gt;
&lt;li&gt;Creates supporting directories and process, and initiates the connection to the external engine.&lt;/li&gt;
&lt;li&gt;A call comes back from the external engine when work finishes.&lt;/li&gt;
&lt;li&gt;The call causes the &quot;listener&quot; to call &lt;code&gt;Read...&lt;/code&gt; routines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;LaunchServTask&lt;/code&gt; is signalled.&lt;/li&gt;
&lt;li&gt;Execution in &lt;code&gt;LaunchServTask&lt;/code&gt; continues into launchpad!CLaunchContext::Cleanup.&lt;/li&gt;
&lt;li&gt;A call to  &lt;code&gt;launchpad!CSatelliteCargoContext::SendLogMessage&lt;/code&gt; happens if a &quot;print&quot; message has been passed back from the external engine, eventually &lt;code&gt;launchpad!CSatelliteCargoContext::SendLogMessage&lt;/code&gt; is called.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;launchpad!CSatelliteCargoContext::SendLogMessage&lt;/code&gt; sends the message to SQL Server.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;LaunchServTask&lt;/code&gt; continues into &lt;code&gt;launchpad!CSQLSatelliteCommunication::SendAckMessage&lt;/code&gt;, which sends an ack that the &quot;job is done&quot; to SQL Server.&lt;/li&gt;
&lt;/ol&gt;


&lt;h4&gt;SQL Server&lt;/h4&gt;

&lt;p&gt;This is the high level flow in SQL Server:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sql_r_services_19_sql_flow.png&quot; width=&quot;800&quot; height=&quot;584&quot;  &gt;
&lt;strong&gt;Figure 2:&lt;/strong&gt; &lt;em&gt;SQL Server Flow&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The numbered arrows in &lt;em&gt;Figure 2&lt;/em&gt; illustrates:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;During the launch of the launchpad service, an IOCP &quot;listener&quot; is set up.&lt;/li&gt;
&lt;li&gt;Message sent to the launchpad service.&lt;/li&gt;
&lt;li&gt;After the call above, the SqlSatellite opens a TCP/IP connection to SQL Server.&lt;/li&gt;
&lt;li&gt;SQL Server sends authentication packets and script packet to the SqlSatellite.&lt;/li&gt;
&lt;li&gt;If there is data for &lt;code&gt;@input_data_1&lt;/code&gt;, it is sent, together with two end packets.&lt;/li&gt;
&lt;li&gt;Packets are coming back to SQL Server containing meta-data and the actual data.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;PullRow&lt;/code&gt; is being signalled, and processing of meta-data as well as result rows continues.&lt;/li&gt;
&lt;li&gt;The launchpad service sends &quot;print&quot;/ack messages to SQL Server. In the figure, they appear as one packet, but there is one message for &quot;print&quot; and one for ack.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ErsqExecuteQuery&lt;/code&gt; is signalled.&lt;/li&gt;
&lt;li&gt;Execution continues by calling into &lt;code&gt;sqllang!CXStmtQuery::ShutdownNormal&lt;/code&gt;, which calls into &lt;code&gt;FinalCleanup,&lt;/code&gt;ShutdownService, and a call to &lt;code&gt;sqllang!CSQLSatelliteCommunication::WaitForAckMessage&lt;/code&gt; is made followed by &lt;code&gt;sqllang!CSQLSatelliteConnection::GetNextMessage&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;If a &quot;print&quot; message has is sent to SQL Server, &lt;code&gt;ReadPayload&lt;/code&gt; is called and then &lt;code&gt;sqllang!CUDXR_ExternalScript::HandleLogMessage&lt;/code&gt;.  The code loops on &lt;code&gt;sqllang!CSQLSatelliteCommunication::WaitForAckMessage&lt;/code&gt; if there is no &quot;print&quot; message.&lt;/li&gt;
&lt;li&gt;SQL Server loops on &lt;code&gt;sqllang!CSQLSatelliteCommunication::WaitForAckMessage&lt;/code&gt; and waits for the ack message,&lt;/li&gt;
&lt;li&gt;After receiving the ack message, SQL Server sends relevant messages to the calling code.&lt;/li&gt;
&lt;/ol&gt;


&lt;h2&gt;Housekeeping&lt;/h2&gt;

&lt;p&gt;Before we &quot;dive&quot; into today's topics let us look at the code and the tools we use today. This section is here for those of who want to follow along in what we are doing in the posts.&lt;/p&gt;

&lt;h4&gt;Helper Tools&lt;/h4&gt;

&lt;p&gt;To help us figure out the things we want, we use &lt;em&gt;Process Monitor&lt;/em&gt;, &lt;em&gt;WinDbg&lt;/em&gt; and &lt;em&gt;WireShark&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Process Monitor&lt;/em&gt;, is used it to filter TCP traffic. If you want to refresh your memory about how to do it, we covered that in &lt;a href=&quot;/2017/08/29/microsoft-sql-server-r-services-internals-x/&quot;&gt;Internals - X&lt;/a&gt; as well as in &lt;a href=&quot;/2017/11/25/microsoft-sql-server-r-services-internals-xiv/&quot;&gt;Internals - XIV&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;In the last few posts I have used &lt;em&gt;WinDbg preview&lt;/em&gt; as my debugger, but in this post, I am reverting to &lt;em&gt;WinDbg&lt;/em&gt; &quot;classic&quot;. If you need help with setting it up, I covered that in &lt;a href=&quot;/2017/03/18/microsoft-sql-server-r-services-internals-i/&quot;&gt;Internals - I&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;I use &lt;em&gt;WireShark&lt;/em&gt; for network packet sniffing. If you want a refresher about &lt;em&gt;WireShark&lt;/em&gt;, we covered the setup and so forth in &lt;a href=&quot;/2017/08/29/microsoft-sql-server-r-services-internals-x/&quot;&gt;Internals - X&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;


&lt;h4&gt;Code&lt;/h4&gt;

&lt;p&gt;In this post we won't need a specific database, we'll just some basic code:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Base Code&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;EXEC&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sp_execute_external_script&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                 &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;language&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'R'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                 &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Sys.sleep(10)
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                             d &amp;lt;- 42'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 1:&lt;/strong&gt; &lt;em&gt;Base Code to Execute&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The code in &lt;em&gt;Code Snippet 1&lt;/em&gt; is the code we use for &quot;base-lining&quot;, e.g. what it looks like when everything works. The &lt;code&gt;Sys.sleep&lt;/code&gt; is in the script to make it easier for us to see what happens, and in what order.&lt;/p&gt;

&lt;p&gt;We also use variants of that code to create errors:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Script Error&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;EXEC&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sp_execute_external_script&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                 &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;language&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'R'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                 &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Sys.sleep(10)
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                             d &amp;lt;- 42
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                             #the function below does not exist
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='6' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                             nonExistFunc(d)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 2:&lt;/strong&gt; &lt;em&gt;Script with Missing Function&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;SQL Error&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;EXEC&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sp_execute_external_script&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                 &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;language&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'R'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                 &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Sys.sleep(1)
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                             d &amp;lt;- 42'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                 &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;input_data_1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'SELECT 1/ 0'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 3:&lt;/strong&gt; &lt;em&gt;Error When Selecting Data&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;We talk more about the two code snippets below.&lt;/p&gt;

&lt;h2&gt;Error&lt;/h2&gt;

&lt;p&gt;When we discuss error messages, there are two main types of errors, and the code above exemplifies that:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Errors generated from the external engine script - &lt;em&gt;Code Snippet 2&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Errors raised when generating the input data-set (&lt;code&gt;@input_data_1&lt;/code&gt;) - &lt;em&gt;Code Snippet 3&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;So, let us look at what happens when we execute the code in &lt;em&gt;Code Snippet 2&lt;/em&gt; and &lt;em&gt;Code Snippet 3&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;This is the output from &lt;em&gt;Code Snippet 2&lt;/em&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sql_r_services_19_error1.png&quot; width=&quot;560&quot; height=&quot;235&quot;  &gt;
&lt;strong&gt;Figure 3:&lt;/strong&gt; &lt;em&gt;R Script Error&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The output from executing the code in &lt;em&gt;Code Snippet 3&lt;/em&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sql_r_services_20_error2.png&quot; width=&quot;520&quot; height=&quot;185&quot;  &gt;
&lt;strong&gt;Figure 4:&lt;/strong&gt; &lt;em&gt;SQL Execution Error&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;When looking at both &lt;em&gt;Figure 3&lt;/em&gt; and &lt;em&gt;Figure 4&lt;/em&gt;, we see that there are SQL Server error numbers assigned to the errors. However, compare the errors in &lt;em&gt;Figure 3&lt;/em&gt;, and &lt;em&gt;Figure 4&lt;/em&gt;. In &lt;em&gt;Figure 3&lt;/em&gt; there are two errors; &lt;code&gt;39004&lt;/code&gt; and &lt;code&gt;39019&lt;/code&gt; - and in the error message they both refer to the external script. In &lt;em&gt;Figure 4&lt;/em&gt; however, the error message is the usual message about division by zero, and no referral to external script whatsoever. There is though some text about SqlSatellite.&lt;/p&gt;

&lt;p&gt;So it seems that for specific external script errors, SQL Server knows about them, but others not.&lt;/p&gt;

&lt;h2&gt;Known SQL Errors&lt;/h2&gt;

&lt;p&gt;We start by looking at, what I call, known SQL errors - like we see in &lt;em&gt;Figure 3&lt;/em&gt;. Just for fun, let us execute following code:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Errors&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;message_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;messages&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;message_id&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BETWEEN&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;39000&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;39999&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;language_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1033&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 4:&lt;/strong&gt; &lt;em&gt;Selecting Error Messages&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;On my SQL Server 2016 box the statement in &lt;em&gt;Code Snippet 4&lt;/em&gt; returns 27 rows, and when browsing through the result I realise that most of them are related to the external script or the external engine:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sql_r_services_20_error_msgs.png&quot; width=&quot;800&quot; height=&quot;245&quot;  &gt;
&lt;strong&gt;Figure 5:&lt;/strong&gt; &lt;em&gt;SQL Server Error Messages&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In &lt;em&gt;Figure 5&lt;/em&gt; wee see some of the error codes related to the external script/engine - so the question is how SQL Server knows that, what originates from the external engine, is an error?&lt;/p&gt;

&lt;p&gt;We know that error(s) are raised in SQL Server when something goes wrong in the external engine (see &lt;em&gt;Figure 3&lt;/em&gt;), but what happens in the launchpad service? So, let us do this:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Start up two instances of &lt;em&gt;WinDbg&lt;/em&gt; as admin.&lt;/li&gt;
&lt;li&gt;Attach &lt;em&gt;WinDbg&lt;/em&gt; to the SQL Server process (&lt;code&gt;sqlservr.exe&lt;/code&gt;), and the launchpad process (&lt;code&gt;launchpad.exe&lt;/code&gt;) - &lt;strong&gt;DO NOT DO THIS ON A PRODUCTION SERVER&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;In both instances of &lt;em&gt;WinDbg&lt;/em&gt; enable an &lt;em&gt;Event Filter&lt;/em&gt; for &lt;code&gt;C++ EH Exception&lt;/code&gt;. If you need to refresh you memory about how to do it, &lt;a href=&quot;/2017/04/02/microsoft-sql-server-r-services-internals-ii/&quot;&gt;Internals - II&lt;/a&gt; goes into the details.&lt;/li&gt;
&lt;li&gt;Execute the code in &lt;em&gt;Code Snippet 2&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;When you execute, you see how you just continue through in the launchpad service, but you break with an exception in SQL Server. It looks like exceptions in the external engine does not affect the launchpad service at all. So let us start looking more in detail what happens in SQL Server.&lt;/p&gt;

&lt;h4&gt;SQL Server I&lt;/h4&gt;

&lt;p&gt;The exception in SQL server we received above looks like this:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Exception&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;17&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d0&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;.3744&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EH&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;exception&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;code&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e06d7363&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;first&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;chance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;First&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;chance&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;exceptions&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;are&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reported&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;before&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;any&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;exception&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;handling&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;This&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;exception&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;may&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;be&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;expected&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;handled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;KERNELBASE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RaiseException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x68&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;mo&quot;&gt;00007&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ffe&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dbba2918&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;488&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b8c24c0000000&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mov&lt;/span&gt;   &lt;br/&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='6' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;rcx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;qword&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ptr&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rsp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;C0h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ss&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;000000e1&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;817&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fb9c0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;00001&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f7285a2fbf6&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 5:&lt;/strong&gt; &lt;em&gt;External Engine Exception in SQL&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;As in &lt;em&gt;Code Snippet 5&lt;/em&gt;, there is an error in SQL Server, and when you continue a second error is raised which you continue through as well. Now execute the code in &lt;em&gt;Code Snippet 2&lt;/em&gt; again, and check the call-stack (&lt;code&gt;k&lt;/code&gt;) when SQL Server breaks at the first error :&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Call Stack&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;KERNELBASE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RaiseException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x68&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;MSVCR120&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_CxxThrowException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xb3&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;         &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dd&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vctools&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;crt&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;crtw32&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;eh&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cpp&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;@&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;154&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;sqldk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ExceptionBackout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetCurrentException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x385&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;sqldk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ex_raise2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x52f&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='6' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;sqldk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ex_raise&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xc4&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='7' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;sqlmin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CQScanUdx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetRow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x172&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='8' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;sqlmin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CQueryScan&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetRow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x81&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='9' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CXStmtQuery&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ErsqExecuteQuery&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x4dc&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='10' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='11' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SpExecuteExternalScript&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x140e&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='12' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='13' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;ntdll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RtlUserThreadStart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x21&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 6:&lt;/strong&gt; &lt;em&gt;Call Stack at Exception&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Interesting, in &lt;em&gt;Code Snippet 6&lt;/em&gt; we see the call to &lt;code&gt;sqlmin!CQScanUdx::GetRow&lt;/code&gt; raise an error - even though we are not retrieving any data from the engine! What happens here?&lt;/p&gt;

&lt;p&gt;Remember back to the last posts, where we spoke about how the SqlSatellite returns packets to SQL Server after execution. We saw an example of what it looks like if we execute the code in &lt;em&gt;Code Snippet 1&lt;/em&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sql_r_services_19_procmon1.png&quot; width=&quot;500&quot; height=&quot;285&quot;  &gt;
&lt;strong&gt;Figure 6:&lt;/strong&gt; &lt;em&gt;Return Packets&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;We saw &lt;em&gt;Figure 6&lt;/em&gt; in &lt;a href=&quot;/2018/01/20/microsoft-sql-server-r-services-internals-xix/&quot;&gt;Internals - XIX&lt;/a&gt;, and we discussed in that post, how the SqlSatellite returns the three packets outlined in red above to SQL Server. The first packet contains metadata information about potential result-sets returned, and if there is no result-set, we still get the packet. The second packet is a packet indicating the end of the result-set, and the third packet can potentially contain values of output parameters. Rows returned for a result-set, appear in packets, between the first and second packet in the figure above.&lt;/p&gt;

&lt;p&gt;So, in the case of an error, like in &lt;em&gt;Figure 3&lt;/em&gt; above, are there any changes in what the SqlSatellite returns? By now, you probably realise that if I ask a question like that - there is a difference, but let us find out regardless:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Run &lt;em&gt;Process Monitor&lt;/em&gt; as admin and load the filter we used in &lt;a href=&quot;/2017/12/24/microsoft-sql-server-r-services-internals-xvi/&quot;&gt;Internals - XVI&lt;/a&gt; where we filtered for &lt;code&gt;TCP Send&lt;/code&gt; and &lt;code&gt;TCP Receive&lt;/code&gt; for &lt;code&gt;BxlServer.exe&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Execute the code in &lt;em&gt;Code Snippet 2&lt;/em&gt; (without the &lt;code&gt;Sys.sleep&lt;/code&gt; if you want) and look at the output from &lt;em&gt;Process Monitor&lt;/em&gt;:&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sql_r_services_20_procmon1.png&quot; width=&quot;680&quot; height=&quot;255&quot;  &gt;
&lt;strong&gt;Figure 7:&lt;/strong&gt; &lt;em&gt;Process Monitor Output Error&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;It is interesting, that when an error happens, we do not get the packets referred to above. In &lt;em&gt;Figure 7&lt;/em&gt; we only see one packet sent back from the SqlSatellite (outlined in red) after the SqlSatellite has received the various packets from SQL Server. While you look at the output from &lt;em&gt;Process Monitor&lt;/em&gt;, also make a note of the &lt;code&gt;Path&lt;/code&gt; column and the last value (in the figure it is 55538). That value is the port SQL Server receives packets. We use this now in &lt;em&gt;WireShark&lt;/em&gt; to try and see if we can get any more information about what is happening.&lt;/p&gt;

&lt;p&gt;So, let us switch over to &lt;em&gt;WireShark&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Run &lt;em&gt;WireShark&lt;/em&gt; as admin.&lt;/li&gt;
&lt;li&gt;Choose the network adapter to &quot;sniff&quot; on. See &lt;a href=&quot;/2017/08/29/microsoft-sql-server-r-services-internals-x/&quot;&gt;Internals - X&lt;/a&gt; for discussion around loop-back adapters etc.&lt;/li&gt;
&lt;li&gt;Set a display filter on the port SQL Server listens on (what you saw in the &lt;code&gt;Path&lt;/code&gt; column). In this case we want to sniff incoming packets, and if we did it based on what we saw in &lt;em&gt;Figure 7&lt;/em&gt; the filter should be: &lt;code&gt;tcp.dstport==55538&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Apply the filter.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;To start with, we try to see what the packets look like when everything works - and the packets we are interested in, are the two packets with a length of 28. When we execute the code in &lt;em&gt;Code Snippet 1&lt;/em&gt; and showing the two data packets as hex, it looks like so:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Packets&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;c1&quot;&gt;//first 28 bytes packet&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;mo&quot;&gt;01&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;06&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;80&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;00&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;b8&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;27&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;86&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b9&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;95&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;47&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;a3&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fc&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;06&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;17&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f1&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;92&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ca&lt;/span&gt;  &lt;span class=&quot;mo&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;00&lt;/span&gt;          &lt;br/&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;c1&quot;&gt;//2:nd 28 bytes packet&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='6' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;mo&quot;&gt;01&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;80&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;00&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;b8&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;27&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;86&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b9&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;95&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;47&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='7' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;a3&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fc&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;06&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;17&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f1&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;92&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ca&lt;/span&gt;  &lt;span class=&quot;mo&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;00&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 7:&lt;/strong&gt; &lt;em&gt;Packets When No Error&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;When looking at the packets in &lt;em&gt;Code Snippet 7&lt;/em&gt;, it looks like the first 4 bytes determines some packet type. Why I say that is when you execute the code multiple times, the first four bytes for packet 1 always look the same, and the same goes for the second packet. The second 4 bytes in both first and second packet, indicates the packet size (&lt;code&gt;1c&lt;/code&gt; = 28). I have no &quot;clue&quot; what the following 16 bytes identify, but it is interesting to notice that the values are the same between packet 1 and 2. The values differ though in between executions. The last four bytes are always 0 in packet 1, in packet two the first byte indicates how many output parameters are returned (if there are any). Remember it is the second packet that contains the output parameters. The last byte in packet 2 is an &quot;end&quot; byte if parameters are returned, otherwise 0.&lt;/p&gt;

&lt;p&gt;So the above is when there are no errors. What when it is? Clear the display in &lt;em&gt;WireShark&lt;/em&gt; (easiest way is to stop capturing packets, and start again) and execute the code in &lt;em&gt;Code Snippet 2&lt;/em&gt;. As we know from the discussion around &lt;em&gt;Figure 7&lt;/em&gt;, we only get one packet back - and when we look at the data as hex it looks like this:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Error Packet&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;mo&quot;&gt;01&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;04&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;80&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;00&lt;/span&gt;  &lt;span class=&quot;mi&quot;&gt;31&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fe&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b0&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;43&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;a4&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;75&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;79&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;70&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e1&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;05&lt;/span&gt;  &lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;00&lt;/span&gt;            &lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 8:&lt;/strong&gt; &lt;em&gt;Packet When Error&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The packet in &lt;em&gt;Code Snippet 8&lt;/em&gt; is somewhat similar to what we see in &lt;em&gt;Code Snippet 7&lt;/em&gt;, in that the first four bytes are always the same, irrespective of the error packet and the second four bytes part indicating the size. What is different and potentially points out that this is an error packet, is the last four bytes. The four last bytes are always the same for any error packet, and as we see - they are not 0.&lt;/p&gt;

&lt;p&gt;To summarize what we know so far when an error happens in the external engine:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;SQL Server receives one 28 bytes data packet back from the SqlSatellite.&lt;/li&gt;
&lt;li&gt;The four last bytes always are &lt;code&gt;12 00 2a 00&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Let's go back to the call-stack we see in &lt;em&gt;Code Snippet 6&lt;/em&gt; and try to figure out what happens in the code. We have already said the error happens in &lt;code&gt;sqlmin!CQScanUdx::GetRow&lt;/code&gt;. We have not spoken much about &lt;code&gt;GetRow&lt;/code&gt; at all, but if you remember in &lt;a href=&quot;/2018/01/03/microsoft-sql-server-r-services-internals-xvii/&quot;&gt;Internals- XVII&lt;/a&gt; we discussed about how &lt;code&gt;sqllang!CXStmtQuery::ErsqExecuteQuery&lt;/code&gt; called &lt;code&gt;sqllang!CUDXR_ExternalScript::PullRow&lt;/code&gt;. In fact &lt;code&gt;sqllang!CXStmtQuery::ErsqExecuteQuery&lt;/code&gt; calls &lt;code&gt;sqlmin!CQueryScan::GetRow&lt;/code&gt; which in turn calls &lt;code&gt;sqlmin!CQScanUdx::GetRow&lt;/code&gt; and it calls &lt;code&gt;PullRow&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;In &lt;a href=&quot;/2018/01/03/microsoft-sql-server-r-services-internals-xvii/&quot;&gt;Internals - XVII&lt;/a&gt; we traced the &lt;code&gt;PullRow&lt;/code&gt; call and saw how SQL Server handled returning data. To see what happens during an error, let us do the trace one step up - in &lt;code&gt;sqlmin!CQScanUdx::GetRow&lt;/code&gt;. We start with the code that works (&lt;em&gt;Code Snippet 1&lt;/em&gt;):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Change the &lt;code&gt;Sys.sleep&lt;/code&gt; in the script in *Code Snippet 1` to 30 seconds.&lt;/li&gt;
&lt;li&gt;Set a break-point in the SQL Server process at &lt;code&gt;sqlmin!CQScanUdx::GetRow&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Execute the code in &lt;em&gt;Code Snippet 1&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;When &lt;code&gt;sqlmin!CQScanUdx::GetRow&lt;/code&gt; hits the breakpoint, do a &lt;code&gt;wt -l8&lt;/code&gt; (trace and watch the execution 8 levels deep).&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Look at the &lt;em&gt;WinDbg&lt;/em&gt; output when the `Sys.sleep(30) is hit in the script, and notice the last few lines look like so:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;GetRow&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EventInternal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SuspendQueueSLock&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Wait&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;span class=&quot;n&quot;&gt;KERNEL32&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TlsGetValueStub&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;span class=&quot;n&quot;&gt;KERNEL32&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TlsGetValue&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EventInternal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SuspendQueueSLock&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Wait&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;span class=&quot;n&quot;&gt;sqldk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SystemThread&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetCurrentId&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='6' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EventInternal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SuspendQueueSLock&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Wait&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='7' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;span class=&quot;n&quot;&gt;sqldk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SOS_Task&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PreWait&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='8' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EventInternal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SuspendQueueSLock&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Wait&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='9' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;span class=&quot;n&quot;&gt;sqldk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SOS_Scheduler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Suspend&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 9:&lt;/strong&gt; &lt;em&gt;wt Output at Sys.sleep&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The code in &lt;em&gt;Code Snippet 9&lt;/em&gt; is what precedes the code we saw in &lt;a href=&quot;/2018/01/03/microsoft-sql-server-r-services-internals-xvii/&quot;&gt;Internals - XVII&lt;/a&gt; where the execution waited for a signal. After the trace has finished, copy it to a text file to make it easier to investigate what happens. Then execute the code in &lt;em&gt;Code Snippet 2&lt;/em&gt; and do a new trace, and copy that result into a new file as well. When you then compare the two files you see how the first part is identical:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;GetRow 2&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;sqlmin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CQScanUdx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetRow&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CUDXR_ExternalScript&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PullRow&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CUDXR_ExternalScript&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ProcessOutputSchema&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;      &lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CUDXR_ExternalScript&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetOutputSchema&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;        &lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CServerCargoContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ReadSchemaInternal&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='6' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;          &lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CSQLSatelliteCommunication&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CSQLSatelliteCommunication&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='7' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;          &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='8' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;          &lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CServerCargoContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ReadAllPackets&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='9' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;            &lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CSQLSatelliteConnection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetNextMessage&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='10' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;              &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='11' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;              &lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EventInternal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SuspendQueueSLock&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Wait&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='12' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                &lt;span class=&quot;n&quot;&gt;sqldk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SOS_Scheduler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Suspend&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='13' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;              &lt;span class=&quot;c1&quot;&gt;//here is Sys.sleep&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='14' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line='15' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;              &lt;span class=&quot;c1&quot;&gt;//here we continue&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='16' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                &lt;span class=&quot;n&quot;&gt;sqldk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SOS_Scheduler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SuspendNonPreemptive&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='17' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;              &lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EventInternal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SuspendQueueSLock&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Wait&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='18' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;               &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='19' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;            &lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CSQLSatelliteConnection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetNextMessage&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='20' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;              &lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CSQLSatelliteConnection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RetrieveMessage&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='21' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='22' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;          &lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CServerCargoContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ReadAllPackets&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='23' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;            &lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CSQLSatelliteCommunication&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BindReadSNIPacket&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='24' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;              &lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CSQLSatelliteCommunication&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetSQLSatelliteMessage&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='25' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;              &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='26' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;            &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='27' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;          &lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CServerCargoContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ReadAllPackets&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='28' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;          &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 10:&lt;/strong&gt; &lt;em&gt;Common Code Path&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In &lt;em&gt;Code Snippet 10&lt;/em&gt; we recognise from &lt;a href=&quot;/2018/01/03/microsoft-sql-server-r-services-internals-xvii/&quot;&gt;Internals - XVII&lt;/a&gt; the calls to retrieve rows, and they are the same in both trace files up until around line 50, after the &lt;code&gt;ReadAllPackets&lt;/code&gt; in the next to last line above. Continuing,  what we see in the files change. In the no error trace file nothing out of the ordinary happens, and eventually, the trace ends with the call to &lt;code&gt;sqllang!CUDXR_ExternalScript::ProcessOutputArguments&lt;/code&gt;, which we discussed in &lt;a href=&quot;/2018/01/10/microsoft-sql-server-r-services-internals-xviii/&quot;&gt;Internals - XVIII&lt;/a&gt;. The error trace file looks completely different though from after the last &lt;code&gt;ReadAllPackets&lt;/code&gt; above:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;GetRow Exception&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;sqlmin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CQScanUdx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetRow&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CUDXR_ExternalScript&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PullRow&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CUDXR_ExternalScript&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ProcessOutputSchema&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;      &lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CUDXR_ExternalScript&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetOutputSchema&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;        &lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CServerCargoContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ReadSchemaInternal&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='6' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;        &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='7' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line='8' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;          &lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CServerCargoContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ReadAllPackets&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='9' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;            &lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CSQLSatelliteCommunication&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BindReadSNIPacket&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='10' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;              &lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CSQLSatelliteCommunication&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetSQLSatelliteMessage&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='11' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;              &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='12' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;          &lt;span class=&quot;c1&quot;&gt;//this is the last ReadAllPackets above&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='13' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;           &lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CServerCargoContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ReadAllPackets&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='14' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;            &lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CServerCargoContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HandleSpecialMessage&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='15' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;              &lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CServerCargoContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HandleAbortMessage&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='16' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;              &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='17' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;            &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='18' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CUDXR_ExternalScript&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ProcessOutputSchema&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='19' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CUDXR_ExternalScript&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PullRow&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='20' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;sqlmin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CQScanUdx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetRow&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='21' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CUDXC_ExternalScript&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EUdxTypeGet&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='22' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;sqlmin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CQScanUdx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetRow&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='23' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='24' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='25' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;n&quot;&gt;sqldk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ex_raise&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='26' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;n&quot;&gt;sqldk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ex_raise2&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='27' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='28' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;           &lt;span class=&quot;n&quot;&gt;ntdll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RtlRaiseException&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='29' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;           &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 11:&lt;/strong&gt; &lt;em&gt;Code Path for Exception&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Included in &lt;em&gt;Code Snippet 11&lt;/em&gt; is the start of the routine, the same as in &lt;em&gt;Code Snippet 10&lt;/em&gt;, but we see how after the last &lt;code&gt;ReadAllPackets&lt;/code&gt; the call goes into &lt;code&gt;sqllang!CServerCargoContext::HandleSpecialMessage&lt;/code&gt; and &lt;code&gt;sqllang!CServerCargoContext::HandleAbortMessage&lt;/code&gt;. These two calls are still inside the &lt;code&gt;PullRow&lt;/code&gt; and &lt;code&gt;ProcessOutputSchema&lt;/code&gt; calls, e.g. while SQL Server processes the packet from the SqlSatellite. The &lt;code&gt;HandleSpecialMessage&lt;/code&gt; and &lt;code&gt;HandleAbortMessage&lt;/code&gt; explains the packet in &lt;em&gt;Code Snippet 8&lt;/em&gt;: it is an abort packet.&lt;/p&gt;

&lt;p&gt;Further down in the code in &lt;em&gt;Code Snippet 11&lt;/em&gt; is a call to &lt;code&gt;sqllang!CUDXC_ExternalScript::EUdxTypeGet&lt;/code&gt;, where - I believe - SQL Server retrieves the type of error and then raises the error in the &lt;code&gt;sqldk!ex_raise&lt;/code&gt; call-chain. The question now is how SQL Server knows the error message? What I mean is: when we look at the &lt;code&gt;text&lt;/code&gt; column in the result from &lt;em&gt;Code Snippet 4&lt;/em&gt; we see for error number the text being: &lt;code&gt;An external script error occurred: %.*ls%.*ls&lt;/code&gt;. The &lt;code&gt;%.*ls%.*ls&lt;/code&gt; characters are substitution parameters and when we look at the actual error message in &lt;em&gt;Figure 3&lt;/em&gt;, the replacement for the substitution parameters is what we see outlined in red below:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sql_r_services_20_error3.png&quot; width=&quot;560&quot; height=&quot;235&quot;  &gt;
&lt;strong&gt;Figure 8:&lt;/strong&gt; &lt;em&gt;Substitution Text&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;So, where do the substitution outlined in &lt;em&gt;Figure 8&lt;/em&gt; come from, and what is the text outlined in blue in the same figure? We know that the actual error-text is not part of the 28 bytes packet from the SqlSatellite, as no matter how long the error message is, the length of the packet is always the same. So where have we seen messages being passed back to SQL Server, without being in any data packets from the SqlSatellite? Well, we saw it in &lt;a href=&quot;/2018/01/20/microsoft-sql-server-r-services-internals-xix/&quot;&gt;Internals - XIX&lt;/a&gt; where the launchpad service did send &quot;print&quot; messages as well as ack messages from the external engine to SQL Server. So, let us go to the launchpad service and &lt;a href=&quot;http://queue.acm.org/detail.cfm?id=945136&quot;&gt;&quot;spelunk&quot;&lt;/a&gt; around a bit:&lt;/p&gt;

&lt;h4&gt;Launchpad&lt;/h4&gt;

&lt;p&gt;We know, from &lt;a href=&quot;/2018/01/20/microsoft-sql-server-r-services-internals-xix/&quot;&gt;Internals - XIX&lt;/a&gt;, that the two routines used when sending messages are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;launchpad!CSatelliteCargoContext::SendLogMessage&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;launchpad!CSQLSatelliteCommunication::SendAckMessage&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;First, we try to find any routines handling error messages specifically: &lt;code&gt;x *!*Send*Error*&lt;/code&gt;. That returns one routine: &lt;code&gt;launchpad!HostErrorReportingManager:: SendErrorToUserWithTracing&lt;/code&gt;. I did however not get a hit at a break-point set at the routine, when I executed the code in &lt;em&gt;Code Snippet 2&lt;/em&gt;. So it looks like our best bet is one of the previously mentioned routines, and we try &lt;code&gt;launchpad!CSatelliteCargoContext::SendLogMessage&lt;/code&gt; first:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Set a break-point &lt;code&gt;launchpad!CSatelliteCargoContext::SendLogMessage&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Execute the code in &lt;em&gt;Code Snippet 1&lt;/em&gt; (no error code).&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;You see how the code executes all the way through, and the breakpoint is not hit. However, the execution breaks at the break-point when you run  &lt;em&gt;Code Snippet 2&lt;/em&gt; (error)! The only difference between the two code snippets is the error in &lt;em&gt;Code Snippet 2&lt;/em&gt;, so it looks like the launchpad service sends a message to SQL Server with the error text from the external engine.&lt;/p&gt;

&lt;h4&gt;SQL Server II&lt;/h4&gt;

&lt;p&gt;We know from &lt;a href=&quot;/2018/01/20/microsoft-sql-server-r-services-internals-xix/&quot;&gt;Internals - XIX&lt;/a&gt; that &lt;code&gt;sqllang!CUDXR_ExternalScript::HandleLogMessage&lt;/code&gt; handles messages that are sent through &lt;code&gt;launchpad!CSatelliteCargoContext::SendLogMessage&lt;/code&gt;. I wonder if that is the case when there is an exception as well:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Disable the break-points in the launchpad &lt;em&gt;WinDbg&lt;/em&gt; instance.&lt;/li&gt;
&lt;li&gt;Disable any break-points in the SQL Server &lt;em&gt;WinDbg&lt;/em&gt; instance.&lt;/li&gt;
&lt;li&gt;Set a break-point at &lt;code&gt;sqllang!CUDXR_ExternalScript::HandleLogMessage&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Run the &lt;em&gt;Code Snippet 2&lt;/em&gt; code.&lt;/li&gt;
&lt;li&gt;Continue through the exceptions.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Cool, we hit the &lt;code&gt;HandleLogMessage&lt;/code&gt; break-point, so let us look at the call-stack (&lt;code&gt;k&lt;/code&gt;):&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Call Stack&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CUDXR_ExternalScript&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HandleLogMessage&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CSQLSatelliteCommunication&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;WaitForAckMessage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x164&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CUDXR_ExternalScript&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ShutdownService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x250&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;sqlmin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CUDXR_ExternalScriptCleanup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Close&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xe&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;sqlmin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CQueryExecContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FinalCleanupNoX&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x116&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='6' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;sqlmin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CQueryScan&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DestroyQueryOnException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x129&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='7' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CXStmtQuery&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ShutdownOnException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xc8&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='8' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CXStmtQuery&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FinishOnExceptionImp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x67&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='9' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;&lt;em&gt;isa_available_init&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xe8cf3&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='10' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;MSVCR120&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;&lt;/em&gt;CallSettingFrame&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x20&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='11' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;               &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dd&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vctools&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;crt&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;crtw32&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;eh&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;amd64&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;handlers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;asm&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;@&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;51&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='12' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;MSVCR120&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__CxxCallCatchBlock&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xf5&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='13' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;               &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dd&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vctools&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;crt&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;crtw32&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;eh&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cpp&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;@&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1281&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='14' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;ntdll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RcConsolidateFrames&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x3&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='15' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CMsqlExecContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FExecute&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xa9e&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='16' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CSQLSource&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Execute&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x983&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='17' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SpExecuteExternalScript&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x140e&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='18' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='19' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;ntdll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RtlUserThreadStart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x21&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 12:&lt;/strong&gt; &lt;em&gt;HandleLogMessage Call Stack&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The call-stack we see in &lt;em&gt;Code Snippet 12&lt;/em&gt; indicates a similar code path for &lt;code&gt;HandleLogMessage&lt;/code&gt; as we saw in &lt;em&gt;Code Snippet 12&lt;/em&gt; in the &lt;a href=&quot;/2018/01/20/microsoft-sql-server-r-services-internals-xix/&quot;&gt;Internals - XIX&lt;/a&gt; post . They are similar, but there are some differences which becomes clear when we compare the code paths between the two call-stacks. In a no error scenario we have a code path like this:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;No Error&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CMsqlExecContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FExecute&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CMsqlExecContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ExecuteStmts&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CXStmtSelect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;XretExecute&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;      &lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CXStmtQuery&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ErsqExecuteQuery&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;        &lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CXStmtQuery&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ShutdownNormal&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='6' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;          &lt;span class=&quot;n&quot;&gt;sqlmin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CQueryScan&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DestroyQuery&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='7' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;            &lt;span class=&quot;n&quot;&gt;sqlmin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CQueryExecContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FinalCleanup&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='8' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;              &lt;span class=&quot;n&quot;&gt;sqlmin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CUDXR_ExternalScriptCleanup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Close&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='9' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;              &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='10' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;              &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='11' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                &lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CUDXR_ExternalScript&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HandleLogMessage&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='12' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 13:&lt;/strong&gt; &lt;em&gt;Code Path HandleLogMessage No Error&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Whereas the code path for an exception looks like so:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Error Path&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CMsqlExecContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FExecute&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CXStmtQuery&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FinishOnExceptionImp&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CXStmtQuery&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ShutdownOnException&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='6' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;      &lt;span class=&quot;n&quot;&gt;sqlmin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CQueryScan&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DestroyQueryOnException&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='7' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;        &lt;span class=&quot;n&quot;&gt;sqlmin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CQueryExecContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FinalCleanupNoX&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='8' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;          &lt;span class=&quot;n&quot;&gt;sqlmin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CUDXR_ExternalScriptCleanup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Close&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='9' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;            &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='10' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;            &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='11' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;              &lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CUDXR_ExternalScript&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HandleLogMessage&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 14:&lt;/strong&gt; &lt;em&gt;Code Path HandleLogMessage with Error&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;When we compare &lt;em&gt;Code Snippet 13&lt;/em&gt; and &lt;em&gt;Code Snippet 14&lt;/em&gt; we see how - in both cases - the code goes into shutdown and cleanup routines, but in the error case these routines are &quot;exception&quot; routines:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sqllang!CXStmtQuery::FinishOnExceptionImp&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sqllang!CXStmtQuery::ShutdownOnException&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sqlmin!CQueryScan::DestroyQueryOnException&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The question now is how the message received from the external engine via the launchpad service is &quot;hooked&quot; up to the actual exception. The assumption is that the answer to that has something to do with &lt;code&gt;HandleLogMessage&lt;/code&gt;. So, let us compare what happens in &lt;code&gt;HandleLogMessage&lt;/code&gt; when we run code that logs a message (as we did in &lt;a href=&quot;/2018/01/20/microsoft-sql-server-r-services-internals-xix/&quot;&gt;Internals - XIX&lt;/a&gt;), with running code that causes an exception.&lt;/p&gt;

&lt;p&gt;This is the code with no exception:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Code 2&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;EXEC&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sp_execute_external_script&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                 &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;language&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'R'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                 &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Sys.sleep(10)
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                             cat(&quot;Hello World&quot;)
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                             d &amp;lt;- 42'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 15:&lt;/strong&gt; &lt;em&gt;Code with Print&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The code in &lt;em&gt;Code Snippet 15&lt;/em&gt; is the same code we used in &lt;a href=&quot;/2018/01/20/microsoft-sql-server-r-services-internals-xix/&quot;&gt;Internals - XIX&lt;/a&gt;, and this is what we do:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Set a breakpoint at &lt;code&gt;sqllang!CUDXR_ExternalScript::HandleLogMessage&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Run the code in &lt;em&gt;Code Snippet 15&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Do a trace, (&lt;code&gt;wt -l6&lt;/code&gt;), of the &lt;code&gt;HandleLogMessage&lt;/code&gt; call when you hit the breakpoint.&lt;/li&gt;
&lt;li&gt;Copy the output of the trace into a new text file.&lt;/li&gt;
&lt;li&gt;Make sure the &lt;code&gt;C++ EH Exception&lt;/code&gt; event filter is still enabled.&lt;/li&gt;
&lt;li&gt;Run the code in &lt;em&gt;Code Snippet 2&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Continue through the exceptions.&lt;/li&gt;
&lt;li&gt;Do a trace, (&lt;code&gt;wt -l6&lt;/code&gt;), of the &lt;code&gt;HandleLogMessage&lt;/code&gt; call when you hit the breakpoint.&lt;/li&gt;
&lt;li&gt;Copy the output of the trace into a new text file.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;When you compare the two files you see they are similar, but at around line 190, or so, there is a difference. In the &quot;no-error&quot; file you see something like so:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;HandleLogMessage 1&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CErrorReportingManager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CwchFormatAndPrint&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CAutoInterceptErrorForTsqlCatch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Initialize&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;n&quot;&gt;KERNEL32&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TlsGetValueStub&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;n&quot;&gt;KERNEL32&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TlsGetValue&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CAutoInterceptErrorForTsqlCatch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Initialize&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='6' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CErrorReportingManager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CwchFormatAndPrint&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='7' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CErrorReportingManager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SetError&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='8' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;n&quot;&gt;KERNEL32&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TlsGetValueStub&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='9' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;n&quot;&gt;KERNEL32&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TlsGetValue&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='10' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CErrorReportingManager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SetError&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='11' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getret&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='12' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;n&quot;&gt;KERNEL32&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TlsGetValueStub&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='13' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;n&quot;&gt;KERNEL32&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TlsGetValue&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='14' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getret&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='15' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;n&quot;&gt;KERNEL32&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TlsGetValueStub&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='16' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;n&quot;&gt;KERNEL32&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TlsGetValue&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='17' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getret&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='18' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CErrorReportingManager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CwchFormatAndPrint&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='19' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CErrorReportingManager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SendErrorToUser&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='20' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='21' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ErrorReportedAutoPublish&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Publish&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 16:&lt;/strong&gt; &quot;HandleLogMessage No Error&quot;&lt;/p&gt;

&lt;p&gt;However in the &quot;error&quot; file you see:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;HandleLogMessage 2&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CErrorReportingManager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CwchFormatAndPrint&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CAutoInterceptErrorForTsqlCatch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Initialize&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;n&quot;&gt;KERNEL32&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TlsGetValueStub&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;n&quot;&gt;KERNEL32&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TlsGetValue&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CAutoInterceptErrorForTsqlCatch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Initialize&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='6' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;n&quot;&gt;KERNEL32&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TlsGetValueStub&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='7' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;n&quot;&gt;KERNEL32&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TlsGetValue&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='8' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CAutoInterceptErrorForTsqlCatch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Initialize&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='9' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;n&quot;&gt;KERNEL32&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TlsGetValueStub&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='10' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;n&quot;&gt;KERNEL32&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TlsGetValue&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='11' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CAutoInterceptErrorForTsqlCatch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Initialize&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='12' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PCXCtxtGetIfExistsEXPENSIVE&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='13' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;      &lt;span class=&quot;n&quot;&gt;KERNEL32&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TlsGetValueStub&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='14' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;      &lt;span class=&quot;n&quot;&gt;KERNEL32&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TlsGetValue&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='15' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PCXCtxtGetIfExistsEXPENSIVE&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='16' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CAutoInterceptErrorForTsqlCatch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Initialize&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='17' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PCXCtxtGetIfExistsEXPENSIVE&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='18' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;      &lt;span class=&quot;n&quot;&gt;KERNEL32&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TlsGetValueStub&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='19' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;      &lt;span class=&quot;n&quot;&gt;KERNEL32&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TlsGetValue&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='20' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PCXCtxtGetIfExistsEXPENSIVE&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='21' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CAutoInterceptErrorForTsqlCatch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Initialize&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='22' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CExecLvlRepresentation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FErrorModeJumpToCatch&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='23' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CAutoInterceptErrorForTsqlCatch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Initialize&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='24' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CErrorReportingManager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CwchFormatAndPrint&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='25' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CErrorReportingManager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SetError&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='26' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;n&quot;&gt;KERNEL32&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TlsGetValueStub&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='27' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;n&quot;&gt;KERNEL32&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TlsGetValue&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='28' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CErrorReportingManager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SetError&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='29' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getret&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='30' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;n&quot;&gt;KERNEL32&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TlsGetValueStub&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='31' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;n&quot;&gt;KERNEL32&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TlsGetValue&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='32' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getret&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='33' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;n&quot;&gt;KERNEL32&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TlsGetValueStub&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='34' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;n&quot;&gt;KERNEL32&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TlsGetValue&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='35' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getret&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='36' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CErrorReportingManager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CwchFormatAndPrint&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='37' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CErrorReportingManager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SendErrorToUser&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='38' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='39' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ErrorReportedAutoPublish&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Publish&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 17:&lt;/strong&gt; &quot;HandleLogMessage Exception&quot;&lt;/p&gt;

&lt;p&gt;You can see how, in the &quot;error&quot; file (&lt;em&gt;Code Snippet 17&lt;/em&gt;), the code loops on &lt;code&gt;sqllang!CAutoInterceptErrorForTsqlCatch::Initialize&lt;/code&gt;, before it calls into &lt;code&gt;sqllang!CExecLvlRepresentation::FErrorModeJumpToCatch&lt;/code&gt;. This loop does not happen in the &quot;non-error&quot; case. Oh, and it is interesting to see how in the case of &quot;normal&quot; log messages, the message is still considered being an error:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sqllang!CErrorReportingManager::SetError&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sqllang!CErrorReportingManager::SendErrorToUser&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sqllang!ErrorReportedAutoPublish::Publish&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Errors Unknown to SQL Server&lt;/h2&gt;

&lt;p&gt;This post has become long, but let us talk a little bit about the type of error we saw in &lt;em&gt;Figure 4&lt;/em&gt; before we finish. I refer to where SQL Server does not know about the error in the external engine (you see no specific external engine SQL Server error message).&lt;/p&gt;

&lt;p&gt;If we look at how the error in &lt;em&gt;Code Snippet 2&lt;/em&gt; is handled and compare it with the error in &lt;em&gt;Code Snippet 3&lt;/em&gt;, we may think they are handled the same way (an error is an error, right?), and it may look like that. For example, if we look at &lt;em&gt;Process Monitor&lt;/em&gt; we see the same 28 bytes packet sent to SQL Server as we saw in &lt;em&gt;Figure 7&lt;/em&gt;. The packet itself looks the same as in &lt;em&gt;Code Snippet 8&lt;/em&gt; (first 4 bytes - &lt;code&gt;01 00 04 80&lt;/code&gt; second 4 bytes - &lt;code&gt;1c 00 00 00&lt;/code&gt;, and the final 4 bytes - &lt;code&gt;12 00 2a 00&lt;/code&gt;). These similarities led me to believe we would see the same flow as in &lt;em&gt;Code Snippet 11&lt;/em&gt;, where the code goes into &lt;code&gt;sqllang!CServerCargoContext::HandleSpecialMessage&lt;/code&gt; and further down into &lt;code&gt;sqllang!CServerCargoContext::HandleAbortMessage&lt;/code&gt;. I was wrong!&lt;/p&gt;

&lt;p&gt;I realised the errors of my ways when I set a breakpoint at &lt;code&gt;sqllang!CServerCargoContext::HandleSpecialMessage&lt;/code&gt;, ran the code in &lt;em&gt;Code Snippet 3&lt;/em&gt;, and the code never hit the breakpoint! So what happened here? Well, the actual exception happened way before sending the &lt;code&gt;@input_data_1&lt;/code&gt; data to the SqlSatellite, and that is the cause of what we see. So let us:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Disable all breakpoints.&lt;/li&gt;
&lt;li&gt;Keep the &lt;code&gt;C++ EH Exception&lt;/code&gt; event filter enabled.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;When we run the &lt;em&gt;Code Snippet 3&lt;/em&gt; code, we see how the execution breaks at exception three times in quick succession. When inspecting the call-stack of each of those three occurrences we see how all three exceptions are related to the &lt;code&gt;sqlTsEs!ESArithErrorHandler&lt;/code&gt; routine which handles, among other things, division by zero.&lt;/p&gt;

&lt;p&gt;There is a slight pause when continuing after the third exception, and then we break once again with a new exception. The call-stack now looks like so:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;&quot;&quot;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;KERNELBASE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RaiseException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x68&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;MSVCR120&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_CxxThrowException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xb3&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;          &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dd&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vctools&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;crt&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;crtw32&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;eh&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cpp&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;@&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;154&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;sqldk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ExceptionBackout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetCurrentException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x385&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;sqldk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ex_raise2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x52f&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='6' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;sqldk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ex_raise&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xc4&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='7' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;sqlTsEs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ESArithErrorHandler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x159&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='8' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;sqlTsEs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CTEsArith&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;56&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;56&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RsltArithArgArg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x94&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='9' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;sqlTsEs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CEsExec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GeneralEval4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xe7&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='10' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CUDXR_ExternalScript&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PushRow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x78&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='11' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;sqlmin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CQScanUdx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PushNextChildRow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x13b&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='12' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;sqlmin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CQScanUdx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetRow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x79&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='13' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;sqlmin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CQueryScan&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetRow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x81&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='14' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CXStmtQuery&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ErsqExecuteQuery&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x4dc&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='15' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='16' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SpExecuteExternalScript&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x140e&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='17' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='18' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;ntdll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RtlUserThreadStart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x21&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 18:&lt;/strong&gt; &quot;Exception after Division by Zero&quot;&lt;/p&gt;

&lt;p&gt;The call-stack we see in &lt;em&gt;Code Snippet 18&lt;/em&gt; shows how an exception happens when we try to push data rows to a packet to send to SqlSatellite. So, even though there is a division by zero exception initially, SQL Server still tries to push data to the satellite. The question is if some data goes to the satellite? Remember from previous posts how we covered data sent to the SqlSatellite and how the satellite received end-packet(s) after the data. I wonder what happens in this case:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Disable the &lt;code&gt;C++ EH Exception&lt;/code&gt; event filter.&lt;/li&gt;
&lt;li&gt;Run &lt;em&gt;Process Monitor&lt;/em&gt; as admin, and use the event filter we used above.&lt;/li&gt;
&lt;li&gt;Execute the code in &lt;em&gt;Code Snippet 3&lt;/em&gt; and look at the output from &lt;em&gt;Process Monitor&lt;/em&gt;:&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sql_r_services_20_procmon2.png&quot; width=&quot;550&quot; height=&quot;230&quot;  &gt;
&lt;strong&gt;Figure 9:&lt;/strong&gt; &lt;em&gt;Process Monitor Output 2&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;When we compare &lt;em&gt;Figure 9&lt;/em&gt; with what we see in &lt;em&gt;Figure 7&lt;/em&gt;, there is not much of a difference. In both figures we see SQL Server sending a 28 bytes end-packet to the SqlSatellite. In &lt;em&gt;Figure 9&lt;/em&gt; it is outlined in red, and in &lt;em&gt;Figure 7&lt;/em&gt; it is just above the highlighted packet. Even though the two figures look the same, the difference lies in the end-packet. I used &lt;em&gt;WireShark&lt;/em&gt; to capture packets from &lt;em&gt;Code Snippet 1&lt;/em&gt; (no error), &lt;em&gt;Code Snippet 2&lt;/em&gt; (external engine error) and &lt;em&gt;Code Snippet 3&lt;/em&gt; (SQL error):&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;End Packets&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;c1&quot;&gt;//OK&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;mo&quot;&gt;01&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;06&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;80&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;00&lt;/span&gt;  &lt;span class=&quot;mi&quot;&gt;76&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;01&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;35&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fa&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;75&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;64&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;48&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;mi&quot;&gt;81&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;34&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e2&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ec&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ec&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c6&lt;/span&gt;  &lt;span class=&quot;mo&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;00&lt;/span&gt; &lt;br/&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;c1&quot;&gt;//engine exception&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='6' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;mo&quot;&gt;01&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;06&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;80&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;00&lt;/span&gt;  &lt;span class=&quot;mi&quot;&gt;90&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;60&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d5&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;49&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='7' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;a0&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f0&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c4&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c0&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bf&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c0&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cb&lt;/span&gt;  &lt;span class=&quot;mo&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;00&lt;/span&gt;          &lt;br/&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='8' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line='9' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;c1&quot;&gt;//exception SQL&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='10' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;mo&quot;&gt;01&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;04&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;80&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;00&lt;/span&gt;  &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;82&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bc&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e0&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;29&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;48&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='11' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;mi&quot;&gt;83&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d7&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;46&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ad&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;79&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;04&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;21&lt;/span&gt;  &lt;span class=&quot;mo&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;00&lt;/span&gt;  &lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 19:&lt;/strong&gt; &lt;em&gt;Different End Packet Types&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;When we look at the packets in &lt;em&gt;Code Snippet 19&lt;/em&gt; we see how the two first packets look like the success packets SQL Server receives from the SqlSatellite. Why I say that, is because the four first bytes are the same: &lt;code&gt;01 00 06 80&lt;/code&gt;. The third packet, however, looks like the &quot;error&quot; packet SqlSatellite sends to SQL Server, with a header of &lt;code&gt;01 00 04 80&lt;/code&gt;. The difference between the packet that SQL Server sends to the satellite, and the packet SQL Server receives are the last four bytes. Sending to the satellite the bytes are &lt;code&gt;00 00 00 00&lt;/code&gt;, whereas when an error packet comes back from the satellite, it is - as we discussed when we saw &lt;em&gt;Code Snippet 8&lt;/em&gt;  - &lt;code&gt;12 00 2a 00&lt;/code&gt;. I do believe that this packet is what causes the SqlSatellite to raise the error we see &lt;code&gt;SqlSatellite cannot read data chunk ...&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;So this is what happens:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The exception happens in the SQL Server engine, before the process has been handed over to the SqlSatellite.&lt;/li&gt;
&lt;li&gt;An error packet is sent to the satellite.&lt;/li&gt;
&lt;li&gt;The satellite cannot process the packet.&lt;/li&gt;
&lt;li&gt;The SqlSatellite sends back the error message we see.&lt;/li&gt;
&lt;li&gt;This is handled by the &lt;code&gt;HandleLogMessage&lt;/code&gt; routine in SqlServer.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;In the bullet points above I say that the &lt;code&gt;HandleLogMessage&lt;/code&gt; routine handles the message, and you can see this by setting a breakpoint on this routine.&lt;/p&gt;

&lt;h2&gt;Summary&lt;/h2&gt;

&lt;p&gt;We have in this post seen how there are two types of errors related to the external engine:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Error raised in the extern engine itself.&lt;/li&gt;
&lt;li&gt;Error happening before the external engine has taken over.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;When an error happens in the external engine:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;the SqlSatellite sends an error packet to SQL Server.&lt;/li&gt;
&lt;li&gt;SQL Server receives the packet and handles it in &lt;code&gt;sqllang!CServerCargoContext::HandleSpecialMessage&lt;/code&gt; and &lt;code&gt;sqllang!CServerCargoContext::HandleAbortMessage&lt;/code&gt;. This raises a SQL Server exception related to the external engine.&lt;/li&gt;
&lt;li&gt;The error message from the external engine is sent to the launchpad service.&lt;/li&gt;
&lt;li&gt;The launchpad service sends the message to SQL Server via &lt;code&gt;launchpad!CSatelliteCargoContext::SendLogMessage&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;SQL Server handles the message in &lt;code&gt;sqllang!CUDXR_ExternalScript::HandleLogMessage&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;When the error happens in SQL Server before the external engine:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;An error packet is sent to the satellite.&lt;/li&gt;
&lt;li&gt;The satellite cannot process the packet.&lt;/li&gt;
&lt;li&gt;The SqlSatellite sends back the error message via &lt;code&gt;launchpad!CSatelliteCargoContext::SendLogMessage&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;SQL Server handles the message in &lt;code&gt;sqllang!CUDXR_ExternalScript::HandleLogMessage&lt;/code&gt; and related routines.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;~ Finally&lt;/h2&gt;

&lt;p&gt;If you have comments, questions etc., please comment on this post or &lt;a href=&quot;mailto:niels.it.berglund@gmail.com&quot;&gt;ping&lt;/a&gt; me.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Interesting Stuff - Week 4</title>
   <link href="http://nielsberglund.com/2018/01/28/interesting-stuff-week-4/"/>
   <updated>2018-01-28T14:05:43+02:00</updated>
   <id>http://nielsberglund.com/2018/01/28/interesting-stuff---week-4</id>
   <content type="html">&lt;p&gt;Throughout the week, I read a lot of blog-posts, articles, and so forth, that has to do with things that interest me:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;data science&lt;/li&gt;
&lt;li&gt;data in general&lt;/li&gt;
&lt;li&gt;distributed computing&lt;/li&gt;
&lt;li&gt;SQL Server&lt;/li&gt;
&lt;li&gt;transactions (both db as well as non db)&lt;/li&gt;
&lt;li&gt;and other &quot;stuff&quot;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This blog-post is the &quot;roundup&quot; of the things that have been most interesting to me, for the week just ending.&lt;/p&gt;

&lt;!--more--&gt;


&lt;h2&gt;SQL Server&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blogs.technet.microsoft.com/dataplatforminsider/2018/01/22/sql-server-2017-on-linux-webcast-series/&quot;&gt;SQL Server 2017 on Linux webcast series&lt;/a&gt;. I guess that anyone interested in SQL Server knows about SQL Server on Linux. This blog-post announces a series of webcasts covering SQL Server on Linux.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blogs.msdn.microsoft.com/sqlserverstorageengine/2018/01/24/simplify-data-access-using-de-normalized-models/&quot;&gt;Simplify data access using de-normalized models&lt;/a&gt;. A very interesting post by &lt;a href=&quot;https://twitter.com/JovanPop_MSFT&quot;&gt;Jovan&lt;/a&gt; how to use JSON to de-normalise database models.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;.NET&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://mattwarren.org/2018/01/22/Resources-for-Learning-about-.NET-Internals/&quot;&gt;Resources for Learning about .NET Internals&lt;/a&gt;. &lt;a href=&quot;https://twitter.com/matthewwarren&quot;&gt;Matthew&lt;/a&gt; posts some very awesome links if you want to learn about .NET internals!&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Misc.&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.acolyer.org/2018/01/26/a-practitioners-guide-to-reading-programming-languages-papers/&quot;&gt;A practitioner’s guide to reading programming languages papers&lt;/a&gt;. A &quot;cheat-sheet&quot; from &lt;a href=&quot;https://twitter.com/adriancolyer&quot;&gt;Adrian&lt;/a&gt; about how to read programming language white-papers.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Data Science&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://channel9.msdn.com/Shows/AI-Show/Data-Science-Virtual-Machine&quot;&gt;Data Science Virtual Machine&lt;/a&gt;. This is the first episode of the AI Show from &lt;a href=&quot;https://channel9.msdn.com/&quot;&gt;Channel9&lt;/a&gt; talking about the Data Science Virtual Machine (DSVM).&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/applied-data-science/how-to-build-your-own-alphazero-ai-using-python-and-keras-7f664945c188&quot;&gt;How to build your own AlphaZero AI using Python and Keras&lt;/a&gt;. In the &lt;a href=&quot;/2018/01/14/interesting-stuff-week-2/&quot;&gt;week 2 roundup&lt;/a&gt; I linked to a post about AlphaZero, the AI application from &lt;a href=&quot;https://en.wikipedia.org/wiki/DeepMind&quot;&gt;DeepMind&lt;/a&gt;, who teaches itself to play multiple board-games, like GO, chess, etc. In this post, David Foster - from Applied Data Science - shows how you can build something similar with Python and Keras. Very cool!!&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Streaming&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://data-artisans.com/blog/streaming-data-in-the-enterprise-hits-a-tipping-point&quot;&gt;Streaming Data in the Enterprise Hits a Tipping Point: Our 2018 Predictions&lt;/a&gt;. Prediction from dataArtisans about the streaming and streaming technologies in 2018.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://data-artisans.com/blog/managing-large-state-apache-flink-incremental-checkpointing-overview&quot;&gt;Managing Large State in Apache Flink: An Intro to Incremental Checkpointing&lt;/a&gt;. An introduction to check-pointing, which is the mechanism Apache Flink uses to make application state fault tolerant. Extremely interesting!&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;SQL Server R Services&lt;/h2&gt;

&lt;p&gt;I am busy finishing off the last post about SQL Server R Services internals: &lt;strong&gt;Internals - XX&lt;/strong&gt;, and I hope to be able to publish it this coming week sometime. After the &lt;em&gt;Internals - XX&lt;/em&gt;, there will be one or two more posts in the series, but then I am done.&lt;/p&gt;

&lt;h2&gt;~ Finally&lt;/h2&gt;

&lt;p&gt;That's all for this week. I hope you enjoy what I did put together. If you have ideas for what to cover, please comment on this post or &lt;a href=&quot;mailto:niels.it.berglund@gmail.com&quot;&gt;ping&lt;/a&gt; me.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Interesting Stuff - Week 3</title>
   <link href="http://nielsberglund.com/2018/01/21/interesting-stuff-week-3/"/>
   <updated>2018-01-21T07:35:50+02:00</updated>
   <id>http://nielsberglund.com/2018/01/21/interesting-stuff---week-3</id>
   <content type="html">&lt;p&gt;Throughout the week, I read a lot of blog-posts, articles, etc., that has to do with things that interest me&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;data science&lt;/li&gt;
&lt;li&gt;data in general&lt;/li&gt;
&lt;li&gt;distributed computing&lt;/li&gt;
&lt;li&gt;SQL Server&lt;/li&gt;
&lt;li&gt;transactions (both db as well as non db)&lt;/li&gt;
&lt;li&gt;and other &quot;stuff&quot;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This is the &quot;roundup&quot; of the posts that has been most interesting to me, for the week just gone by.&lt;/p&gt;

&lt;!--more--&gt;


&lt;h2&gt;Streaming&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.confluent.io/blog/put-several-event-types-kafka-topic/&quot;&gt;Should You Put Several Event Types in the Same Kafka Topic?&lt;/a&gt;. A very informative blog-post about how to choose what number of topics you should have in your Kafka broker and how many event types per topic.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Distributed Computing&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://muratbuffalo.blogspot.co.za/2018/01/the-lambda-and-kappa-architectures.html&quot;&gt;The Lambda and the Kappa Architectures&lt;/a&gt;. &lt;a href=&quot;https://twitter.com/muratdemirbas&quot;&gt;Murat&lt;/a&gt; dissects an article / paper by &lt;a href=&quot;https://cs.uwaterloo.ca/~jimmylin/&quot;&gt;Jimmy Lin&lt;/a&gt; (no not the actor, but Jimmy Lin of Twitter fame), comparing Lambda and Kappa architectures. It is an interesting read, I would so have wanted to read the actual article, but it sits behind a pay-wall.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Computing&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.microsoft.com/en-us/research/blog/future-is-quantum-with-dr-krysta-svore/&quot;&gt;The Future is Quantum with Dr. Krysta Svore&lt;/a&gt;. I have in a couple of blog-posts covered a bit about Microsoft's quantum computing efforts (&lt;a href=&quot;/2017/10/01/interesting-stuff-week-39/&quot;&gt;here&lt;/a&gt; and &lt;a href=&quot;/2017/12/17/interesting-stuff-week-50-year-end/&quot;&gt;here&lt;/a&gt;). This is the transcript of a pod-cast with Dr. Krysta Svore, who is Principal Research Manager of the Microsoft Quantum group. Very, very interesting!!&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Data Science&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.infoq.com/presentations/quora-ml&quot;&gt;ML for Question and Answer Understanding @Quora&lt;/a&gt;. A presentation from &lt;a href=&quot;https://www.infoq.com/&quot;&gt;InfoQ&lt;/a&gt;, where Nikhil Dandekar discusses how Quora extracts intelligence from questions using machine learning, etc. Really cool!&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.revolutionanalytics.com/2018/01/microsoft-r-open-343-now-available.html&quot;&gt;Microsoft R Open 3.4.3 now available&lt;/a&gt;. The guys at &lt;a href=&quot;http://blog.revolutionanalytics.com&quot;&gt;Revolution Analytics&lt;/a&gt; points out that version 3.4.3 of &lt;strong&gt;Microsoft R Open&lt;/strong&gt; (MRO) is now available. If you use MRO, go forth and download and install!&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;SQL Server R Services&lt;/h2&gt;

&lt;p&gt;A couple of more posts in the Microsoft SQL Server R Services series have been published:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/2018/01/10/microsoft-sql-server-r-services-internals-xviii/&quot;&gt;Microsoft SQL Server R Services - Internals XVIII&lt;/a&gt;. In this post I have a look at how output parameters are handled in SQL Server R Services.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2018/01/20/microsoft-sql-server-r-services-internals-xix/&quot;&gt;Microsoft SQL Server R Services - Internals XIX&lt;/a&gt;. This post does a drill down, using WinDbg, into how print statements in the external engine together with ack messages comes back to SQL Server.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;~ Finally&lt;/h2&gt;

&lt;p&gt;That's all for this week. I hope you enjoy what I did put together. If you have ideas for what to cover, please comment on this post or &lt;a href=&quot;mailto:niels.it.berglund@gmail.com&quot;&gt;ping&lt;/a&gt; me.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Microsoft SQL Server R Services - Internals XIX</title>
   <link href="http://nielsberglund.com/2018/01/20/microsoft-sql-server-r-services-internals-xix/"/>
   <updated>2018-01-20T19:42:49+02:00</updated>
   <id>http://nielsberglund.com/2018/01/20/microsoft-sql-server-r-services---internals-xix</id>
   <content type="html">&lt;p&gt;This post is part of a series of blog-posts about Microsoft SQL Server R Services:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;/2017/03/04/microsoft-sql-server-2016-r-services-installation/&quot;&gt;Microsoft SQL Server 2016 R Services Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2017/03/18/microsoft-sql-server-r-services-internals-i/&quot;&gt;Microsoft SQL Server R Services - Internals I&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2017/04/02/microsoft-sql-server-r-services-internals-ii/&quot;&gt;Microsoft SQL Server R Services - Internals II&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2017/04/13/microsoft-sql-server-r-services-internals-iii/&quot;&gt;Microsoft SQL Server R Services - Internals III&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2017/04/23/microsoft-sql-server-r-services-internals-iv/&quot;&gt;Microsoft SQL Server R Services - Internals IV&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2017/05/01/microsoft-sql-server-r-services-internals-v/&quot;&gt;Microsoft SQL Server R Services - Internals V&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2017/05/16/microsoft-sql-server-r-services-internals-vi/&quot;&gt;Microsoft SQL Server R Services - Internals VI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2017/07/11/microsoft-sql-server-r-services-internals-vii/&quot;&gt;Microsoft SQL Server R Services - Internals VII&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2017/07/22/microsoft-sql-server-r-services-internals-viii/&quot;&gt;Microsoft SQL Server R Services - Internals VIII&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2017/08/18/microsoft-sql-server-r-services-internals-ix/&quot;&gt;Microsoft SQL Server R Services - Internals IX&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2017/08/29/microsoft-sql-server-r-services-internals-x/&quot;&gt;Microsoft SQL Server R Services - Internals X&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2017/10/20/microsoft-sql-server-r-services-internals-xi/&quot;&gt;Microsoft SQL Server R Services - Internals XI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2017/10/31/microsoft-sql-server-r-services-internals-xii/&quot;&gt;Microsoft SQL Server R Services - Internals XII&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2017/11/11/microsoft-sql-server-r-services-internals-xiii/&quot;&gt;Microsoft SQL Server R Services - Internals XIII&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2017/11/25/microsoft-sql-server-r-services-internals-xiv/&quot;&gt;Microsoft SQL Server R Services - Internals XIV&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2017/12/02/microsoft-sql-server-r-services-internals-xv/&quot;&gt;Microsoft SQL Server R Services - Internals XV&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2017/12/24/microsoft-sql-server-r-services-internals-xvi/&quot;&gt;Microsoft SQL Server R Services - Internals XVI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2018/01/03/microsoft-sql-server-r-services-internals-xvii/&quot;&gt;Microsoft SQL Server R Services - Internals XVII&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2018/01/10/microsoft-sql-server-r-services-internals-xviii/&quot;&gt;Microsoft SQL Server R Services - Internals XVIII&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Microsoft SQL Server R Services - Internals XIX (this post)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2018/02/02/microsoft-sql-server-r-services-internals-xx/&quot;&gt;Microsoft SQL Server R Services - Internals XX&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;More to come (hopefully)&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;This post is the 20:th post about Microsoft SQL Server R Services, and the 19:th post that drills down into the internal of how it works.&lt;/p&gt;

&lt;!--more--&gt;


&lt;p&gt;We are nearing the end of the &lt;strong&gt;Internals&lt;/strong&gt; series, and if we look at what we have covered, we have almost come full circle.&lt;/p&gt;

&lt;h2&gt;Recap&lt;/h2&gt;

&lt;p&gt;In this &lt;em&gt;Recap&lt;/em&gt;, let's look back at some of the posts that has &quot;bearing&quot; on this particular post.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;/2017/03/18/microsoft-sql-server-r-services-internals-i/&quot;&gt;Internals - I&lt;/a&gt; post discussed how SQL Server opened a named pipe connection into, and called the, launchpad service when the proc &lt;code&gt;sp_execute_external_script&lt;/code&gt; is executed. In &lt;a href=&quot;/2017/07/22/microsoft-sql-server-r-services-internals-viii/&quot;&gt;Internals - VIII&lt;/a&gt; we looked at what different components are involved when the procedure executes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;SQL Server calls into the launchpad service.&lt;/li&gt;
&lt;li&gt;The launchpad service calls into the &lt;code&gt;Rlauncher.dll&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;Rlauncher.dll&lt;/code&gt; creates Rterm processes.&lt;/li&gt;
&lt;li&gt;Through Rterm, the &lt;code&gt;R.dll&lt;/code&gt; is loaded together with &lt;code&gt;RxLink.dll&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;RxLink.dll&lt;/code&gt; creates the &lt;code&gt;BxlServer.exe&lt;/code&gt; process.&lt;/li&gt;
&lt;li&gt;To coordinate with SQL Server, &lt;code&gt;BxlServer.exe&lt;/code&gt; loads &lt;code&gt;BxServerLink.dll&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The above can be illustrated as in &lt;em&gt;Figure 1&lt;/em&gt; below&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sql_r_services_8_arch_overview.png&quot; width=&quot;650&quot; height=&quot;194&quot;  &gt;
&lt;strong&gt;Figure 1:&lt;/strong&gt; &lt;em&gt;Components In Play&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Based on the above, the question we then tried to answer in &lt;a href=&quot;/2017/08/18/microsoft-sql-server-r-services-internals-ix/&quot;&gt;Internals - IX&lt;/a&gt; was how the components are communicating and what sort of communication mechanisms there are. We determined that there were different communication mechanisms, and used a figure to illustrate those various mechanisms:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sql_r_services_9_comms2.png&quot; width=&quot;650&quot; height=&quot;228&quot;  &gt;
&lt;strong&gt;Figure 2:&lt;/strong&gt; &lt;em&gt;How Communication Happens&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The numbers indicate:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;1 - named pipe.&lt;/li&gt;
&lt;li&gt;2 - IOCP.&lt;/li&gt;
&lt;li&gt;3 - named pipe.&lt;/li&gt;
&lt;li&gt;4 - TCP/IP&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;In Internals - &lt;a href=&quot;/2017/12/24/microsoft-sql-server-r-services-internals-xvi/&quot;&gt;XVI&lt;/a&gt; and &lt;a href=&quot;/2018/01/03/microsoft-sql-server-r-services-internals-xvii/&quot;&gt;XVII&lt;/a&gt; we looked at how result sets were returned from the SqlSatellite to SQL Server, and we realized the data were delivered via data packets over the TCP connection between the SqlSatellite and SQL Server. In &lt;a href=&quot;/2018/01/03/microsoft-sql-server-r-services-internals-xvii/&quot;&gt;Internals - XVII&lt;/a&gt;, we also tried to understand what happened, code wise, in SQL Server when data packets were returned, and the following figure were used to illustrate the flow:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sql_r_services_17_flow.png&quot; width=&quot;800&quot; height=&quot;527&quot;  &gt;
&lt;strong&gt;Figure 3:&lt;/strong&gt; &lt;em&gt;Code Flow Receiving Data from SqlSatellite&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Finally, in &lt;a href=&quot;/2018/01/10/microsoft-sql-server-r-services-internals-xviii/&quot;&gt;Internals - XVIII&lt;/a&gt; we talked about how output parameters are handled between the SqlSatellite and SQL Server and we saw how the output parameters come back in a data packet over the TCP connection between the SqlSatellite and SQL Server. They are handled in SQL Server as per this figure:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sql_r_services_18_flow.png&quot; width=&quot;800&quot; height=&quot;537&quot;  &gt;
&lt;strong&gt;Figure 4:&lt;/strong&gt; &lt;em&gt;Code Flow Receiving Output Arguments from SqlSatellite&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The numbered arrows in both &lt;em&gt;Figure 3&lt;/em&gt; and &lt;em&gt;Figure 4&lt;/em&gt; show the communication out to and in from SQL Server, and in what order it happens:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;SQL Server opens named pipe connection to the launchpad service.&lt;/li&gt;
&lt;li&gt;Message sent to the launchpad service.&lt;/li&gt;
&lt;li&gt;After the call above, the SqlSatellite opens a TCP/IP connection to SQL Server.&lt;/li&gt;
&lt;li&gt;SQL Server sends the first packet to the SQL Satellite for authentication purposes.&lt;/li&gt;
&lt;li&gt;A second authentication packet is sent to SqlSatellite.&lt;/li&gt;
&lt;li&gt;The script is sent from inside &lt;code&gt;sqllang!CSatelliteProxy::PostSetupMessage&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;The data for &lt;code&gt;@input_data_1&lt;/code&gt; is sent together with two end packets.&lt;/li&gt;
&lt;li&gt;Packet are coming back to SQL Server containing meta-data and the actual data.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;PullRow&lt;/code&gt; is being signaled.&lt;/li&gt;
&lt;li&gt;Execution continues to process meta-data as well as result rows.&lt;/li&gt;
&lt;li&gt;After processing result rows, output arguments are processed.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;So, we have seen in various posts how meta-data, result-sets and output parameters, etc. are send to SQL server from the SqlSatellite using the TCP connection. In this post we'll look at other types of data going back to SQL server.&lt;/p&gt;

&lt;h2&gt;Housekeeping&lt;/h2&gt;

&lt;p&gt;Before we &quot;dive&quot; into todays topics let's look at the code and the tools we'll use. This section is here here for those of who want to follow along in what we're doing in the posts.&lt;/p&gt;

&lt;h4&gt;Helper Tools&lt;/h4&gt;

&lt;p&gt;To help us figure out the things we want, we will use &lt;em&gt;Process Monitor&lt;/em&gt;, and &lt;em&gt;WinDbg&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Process Monitor&lt;/em&gt;, will be used it to filter TCP traffic. If you want to refresh your memory about how to do it, we covered that in &lt;a href=&quot;/2017/08/29/microsoft-sql-server-r-services-internals-x/&quot;&gt;Internals - X&lt;/a&gt; as well as in &lt;a href=&quot;/2017/11/25/microsoft-sql-server-r-services-internals-xiv/&quot;&gt;Internals - XIV&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;In the last few posts I have used &lt;em&gt;WinDbg preview&lt;/em&gt; a my debugger, but in this post I am reverting back to &lt;em&gt;WinDbg&lt;/em&gt; &quot;classic&quot;. If you need help with setting it up, that is covered in &lt;a href=&quot;/2017/03/18/microsoft-sql-server-r-services-internals-i/&quot;&gt;Internals - I&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;


&lt;h4&gt;Code&lt;/h4&gt;

&lt;p&gt;In this post we won't need a specific database, we'll just execute variants of some very, very basic code:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Base Code&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;EXEC&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sp_execute_external_script&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                 &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;language&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'R'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                 &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Sys.sleep(10)
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                             d &amp;lt;- 42'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 1:&lt;/strong&gt; &lt;em&gt;Base Code to Execute&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;Sys.sleep&lt;/code&gt; is in the script to make it easier for us to see what happens, and in what order.&lt;/p&gt;

&lt;h2&gt;Messages&lt;/h2&gt;

&lt;p&gt;What is this &lt;em&gt;Messages&lt;/em&gt; in the header of this section? I am using that name for data that is not result-set data or output parameter values. E.g &quot;stuff&quot; that appears in the &lt;em&gt;Messages&lt;/em&gt; tab in &lt;em&gt;SSMS&lt;/em&gt;. Execute the code in &lt;em&gt;Code Snippet 2&lt;/em&gt; and you see something like so (you can comment out the &lt;code&gt;Sys.sleep&lt;/code&gt; if you wish):&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sql_r_services_19_msgs1.png&quot; width=&quot;230&quot; height=&quot;50&quot;  &gt;
&lt;strong&gt;Figure 5:&lt;/strong&gt; &lt;em&gt;Message in SSMS&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The question is that, were does the message in &lt;em&gt;Figure 5&lt;/em&gt; originate from? What you see in &lt;em&gt;Figure 5&lt;/em&gt; may not be the best example, so let's look at the following code:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Code 2&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;EXEC&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sp_execute_external_script&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                 &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;language&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'R'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                 &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Sys.sleep(10)
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                             cat(&quot;Hello World&quot;)
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                             d &amp;lt;- 42'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 2:&lt;/strong&gt; &lt;em&gt;Code with Print&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;When the code in &lt;em&gt;Code Snippet 2&lt;/em&gt; is executed (once again, you can comment out the &lt;code&gt;Sys.sleep&lt;/code&gt;), the output looks like so:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sql_r_services_19_msgs2.png&quot; width=&quot;275&quot; height=&quot;55&quot;  &gt;
&lt;strong&gt;Figure 6:&lt;/strong&gt; &lt;em&gt;Message From cat Statement&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In &lt;em&gt;Figure 6&lt;/em&gt; it is clear that the &quot;message&quot; comes from the R engine, and the question is how does it get to SQL Server? As mentioned above, we have seen in previous posts how the data has been sent in data packets over the TCP connection. Is that perhaps the same thing here, and how do we find out? We'll start with what we saw in &lt;em&gt;Figure 5&lt;/em&gt; - the output from &lt;em&gt;Code Snippet 1&lt;/em&gt;.&lt;/p&gt;

&lt;h4&gt;Acknowledgments&lt;/h4&gt;

&lt;p&gt;When writing this post I realized that what we see in &lt;em&gt;Figure 5&lt;/em&gt; is the result of an acknowledgment from the R &quot;environment&quot;, that the &quot;job&quot; is finished, and below we'll see how I came to that conclusion.&lt;/p&gt;

&lt;p&gt;We'll use &lt;em&gt;Process Monitor&lt;/em&gt; to begin with:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Run &lt;em&gt;Process Monitor&lt;/em&gt; as admin and load the filter we used in &lt;a href=&quot;/2017/12/24/microsoft-sql-server-r-services-internals-xvi/&quot;&gt;Internals - XVI&lt;/a&gt; where we filtered for &lt;code&gt;TCP Send&lt;/code&gt; and &lt;code&gt;TCP Receive&lt;/code&gt; for &lt;code&gt;BxlServer.exe&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Execute the code in &lt;em&gt;Code Snippet 1&lt;/em&gt; (without the &lt;code&gt;Sys.sleep&lt;/code&gt; if you want) and look at the output from &lt;em&gt;Process Monitor&lt;/em&gt;:&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sql_r_services_19_procmon1.png&quot; width=&quot;500&quot; height=&quot;285&quot;  &gt;
&lt;strong&gt;Figure 7:&lt;/strong&gt; &lt;em&gt;Return Packets&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;As you see in &lt;em&gt;Figure 7&lt;/em&gt; three packets are returned to SQL Server after execution (outlined in red), and we have discussed in previous posts what they are. Potentially the &quot;Commands completed successfully.&quot; message could have been part of one of those three packets, but from what we know it is unlikely. We should be able to determine if a message is part of any of those three packets by executing the code in &lt;em&gt;Code Snippet 2&lt;/em&gt;, but with a &lt;code&gt;cat&lt;/code&gt; statement like this: &lt;code&gt;cat(&quot;A very, very, very long string to see if the packet sizes differ&quot;)&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The idea is that having a long message string, we should see an impact on either of the data packets being sent back to SQL Server. However after we execute, the packets sent back to SQL Server look no different, so it seems that the message is sent back by other means, or generated in some other way.&lt;/p&gt;

&lt;p&gt;Ok, so if the data is not sent back on the TCP connection between the SqlSatellite and SQL Server, then the data has to go back over the launchpad connection. Can we somehow see if that is what's happening? If we believe that some data is passed from the R engine to SQL Server via the launchpad service, then the data has to be passed over the IOCP as well as the named pipes. So if we can &quot;trap&quot; the message when it arrives in the launchpad service, also see if/when it is sent back to SQL Server, and then finally &quot;catch&quot; it in SQL Server. That should &quot;prove&quot; out theory.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; As we only have symbol files for SQL Server and the launchpad service, we need to do it the way it is outlined above.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Right:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Start up two instances of &lt;em&gt;WinDbg&lt;/em&gt; as admin.&lt;/li&gt;
&lt;li&gt;Attach &lt;em&gt;WinDbg&lt;/em&gt; to the SQL Server process (&lt;code&gt;sqlservr.exe&lt;/code&gt;), and the launchpad process (&lt;code&gt;launchpad.exe&lt;/code&gt;) - &lt;strong&gt;DO NOT DO THIS ON A PRODUCTION SERVER&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Let's start with the launchpad service and search for routines that might be involved in reading data coming into the launchpad service as well as sending data out to SQL Server. So let's start with looking for routines in the &lt;code&gt;launchpad&lt;/code&gt; module: &lt;code&gt;x launchpad!*Read*&lt;/code&gt;. When you execute that, you see there are quite a few. However when browsing through the output, there are some that looks interesting in the &lt;code&gt;CSQLSatelliteConnection&lt;/code&gt; class:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;launchpad!CSQLSatelliteConnection::ReadCallBack&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;launchpad!CSQLSatelliteConnection::ReadCallBackInternal&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;launchpad!CSQLSatelliteConnection::ReadOneFullMessage&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Let's set a breakpoint at &lt;code&gt;launchpad!CSQLSatelliteConnection::ReadOneFullMessage&lt;/code&gt; and execute the code in &lt;em&gt;Code Snippet 1&lt;/em&gt;, this time ensure that the &lt;code&gt;Sys.sleep&lt;/code&gt; statement is in the code, so that if the breakpoint is hit, we'll know that it is after execution. Sure enough the breakpoint is hit almost immediately, and after letting the code continue, there is a pause and the breakpoint is hit a second time. At the second &quot;hit&quot; have a look at the call-stack: &lt;code&gt;k&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Call Stack 1&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;launchpad&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CSQLSatelliteConnection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ReadOneFullMessage&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;launchpad&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CSQLSatelliteConnection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ReadCallBackInternal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x37&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;launchpad&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CSQLSatelliteConnection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ReadCallBack&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x39&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;launchpad&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SNIReadDone&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x151&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;sqldk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SOS_Node&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ListenOnIOCompletionPort&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x384&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='6' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;sqldk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SOS_Task&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Param&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Execute&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x231&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='7' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;sqldk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SOS_Scheduler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RunTask&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xaa&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='8' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 3:&lt;/strong&gt; &lt;em&gt;Call Stack at ReadOneFullMessage&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The call-stack we see in &lt;em&gt;Code Snippet 3&lt;/em&gt; clearly shows that our &quot;hunch&quot; about IOCP seems correct (&lt;code&gt;sqldk!SOS_Node::ListenOnIOCompletionPort&lt;/code&gt;), and we see that the call flow includes all three &lt;code&gt;Read...&lt;/code&gt; routines that we found above. If we wanted to see what happens inside the routines, we can disable the break-point at &lt;code&gt;ReadOneFullMessage&lt;/code&gt; and set a break-point at &lt;code&gt;ReadCallBackInternal&lt;/code&gt;instead, and then execute the code in &lt;em&gt;Code Snippet 1&lt;/em&gt; again. When the &lt;code&gt;ReadCallBackInternal&lt;/code&gt; break-point is hit the second time (after the pause), do a &quot;trace and watch&quot; &lt;code&gt;wt&lt;/code&gt; and let the code run to completion.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; The reason why you set the break-point on &lt;code&gt;ReadCallBackInternal&lt;/code&gt;, and not &lt;code&gt;ReadOneFullMessage&lt;/code&gt; is that a &lt;code&gt;wt&lt;/code&gt; on &lt;code&gt;ReadOneFullMessage&lt;/code&gt; won't give you much information at all, whereas &lt;code&gt;ReadCallBackInternal&lt;/code&gt; shows you quite a lot of interesting &quot;stuff&quot;.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;When the code has run to completion, copy the trace to a separate file, to make it easier to investigate:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;ReadCallBackInternal&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;launchpad&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CSQLSatelliteConnection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ReadCallBackInternal&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;n&quot;&gt;launchpad&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CSQLSatelliteConnection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ReadOneFullMessage&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;n&quot;&gt;launchpad&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CSQLSatelliteConnection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DeliverMessage&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='6' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;n&quot;&gt;launchpad&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EventInternal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SuspendQueueSLock&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SignalAll&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='7' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='8' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='9' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;      &lt;span class=&quot;n&quot;&gt;sqldk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SOS_Scheduler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PrepareWorkerForResume&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='10' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;      &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='11' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;      &lt;span class=&quot;n&quot;&gt;sqldk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SOS_Scheduler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RunnableQueueInsert&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='12' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;        &lt;span class=&quot;n&quot;&gt;sqldk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GroupWorkerQueue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Enqueue&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='13' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;        &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='14' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;      &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;&lt;br/&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='15' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;n&quot;&gt;sqldk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SOS_Scheduler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;WakeUpScheduler&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='16' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='17' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;      &lt;span class=&quot;n&quot;&gt;launchpad&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ReadAsync&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='18' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;      &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='19' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;&lt;br/&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='20' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;n&quot;&gt;sqldk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SOS_RWLock&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ReleaseLock&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='21' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;    &lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 4:&lt;/strong&gt; &lt;em&gt;Routines During ReadCallBackInternal&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;When I looked at the trace, I found some interesting routines, which are shown in &lt;em&gt;Code Snippet 4&lt;/em&gt;. When I see the code above, I can't help but to think about what we saw in &lt;a href=&quot;/2018/01/03/microsoft-sql-server-r-services-internals-xvii/&quot;&gt;Internals - XVII&lt;/a&gt;, where &lt;code&gt;sqllang!CUDXR_ExternalScript::PullRow&lt;/code&gt; was signaled by &lt;code&gt;sqllang!EventInternal&amp;lt;SuspendQueueSLock&amp;gt;::SignalAll&lt;/code&gt;. Here the signal happens through &lt;code&gt;launchpad!EventInternal&amp;lt;SuspendQueueSLock&amp;gt;::SignalAll&lt;/code&gt;, and after the signal, &quot;stuff&quot; is enqueued and locks are released. If this is the case, what is being signaled then?&lt;/p&gt;

&lt;p&gt;Hmm, let us think back one of the posts in the beginning of the &lt;strong&gt;Internals&lt;/strong&gt; &quot;journey&quot;, and specifically &lt;a href=&quot;/2017/04/02/microsoft-sql-server-r-services-internals-ii/&quot;&gt;Internals - II&lt;/a&gt;. In that post we looked at the code-flow, when SQL Server called into the launchpad service, and we saw a figure like so:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sql-launchpad-r-post.png&quot; width=&quot;650&quot; height=&quot;325&quot;  &gt;
&lt;strong&gt;Figure 8:&lt;/strong&gt; &lt;em&gt;Launchpad Service Call Flow&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;From &lt;em&gt;Figure 8&lt;/em&gt; we see how the routine &lt;code&gt;launchpad!CLaunchContext::LaunchServTask&lt;/code&gt; seems to be the &quot;main&quot; method. Maybe that's what's being signaled, let's see if we can figure it out:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Disable the existing break-points in the launchpad process.&lt;/li&gt;
&lt;li&gt;Set a break-point at &lt;code&gt;launchpad!CLaunchContext::LaunchServTask&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Change the &lt;code&gt;Sys.sleep&lt;/code&gt; in &lt;em&gt;Code Snippet 1&lt;/em&gt; to &lt;code&gt;Sys.sleep(120)&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Execute the code and when you hit the &lt;code&gt;LaunchServTask&lt;/code&gt; break-point, do a &lt;code&gt;wt -l4&lt;/code&gt; (trace four levels deep). The execution will continue, until the control has been passed over to the R engine, and its various components. At this stage &lt;code&gt;LaunchServTask&lt;/code&gt; has not finished execution, and you'll see something like so at the end of the trace:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Wait&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;n&quot;&gt;launchpad&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CSQLSatelliteConnection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetNextMessage&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;n&quot;&gt;launchpad&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EventInternal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SuspendQueueSLock&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Wait&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;      &lt;span class=&quot;n&quot;&gt;sqldk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SOS_Scheduler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Suspend&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='6' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;      &lt;span class=&quot;n&quot;&gt;sqldk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SOS_Scheduler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SuspendNonPreemptive&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 5:&lt;/strong&gt; &lt;em&gt;Wait for Continuation&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;So, in &lt;em&gt;Code Snippet 5&lt;/em&gt;, we see where &lt;code&gt;LaunchServTask&lt;/code&gt; &quot;waits&quot; for something to complete. When the script code has finished executing (after the &lt;code&gt;Sys.sleep&lt;/code&gt;), you'll see the trace continue - and it will continue with:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Continuation&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;        &lt;span class=&quot;n&quot;&gt;sqldk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SOS_Scheduler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SwitchContext&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;        &lt;span class=&quot;n&quot;&gt;sqldk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SOS_Scheduler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Switch&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;      &lt;span class=&quot;n&quot;&gt;sqldk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SOS_Scheduler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SuspendNonPreemptive&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;n&quot;&gt;launchpad&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EventInternal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SuspendQueueSLock&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Wait&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;      &lt;span class=&quot;n&quot;&gt;sqldk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SOS_Task&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PostWait&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='6' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 6:&lt;/strong&gt; &lt;em&gt;Code Continues&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;What we see in &lt;em&gt;Code Snippet 6&lt;/em&gt; is the continuation of the code, based on the &quot;signal&quot; in &lt;em&gt;Code Snippet 4&lt;/em&gt;. If we then investigate the latter part of the trace further we'll see:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Send&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;launchpad&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CLaunchContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LaunchServTask&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;n&quot;&gt;launchpad&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CSQLSatelliteCommunication&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetSQLSatelliteMessage&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;n&quot;&gt;launchpad&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ConnectionStore&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RemoveConnection&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='6' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;      &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='7' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;n&quot;&gt;launchpad&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TListElem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SatelliteSessionList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SatelliteSession&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TListSLock&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RemoveAndDestroy&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='8' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;      &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='9' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;n&quot;&gt;launchpad&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CSQLSatelliteCommunication&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SendAckMessage&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='10' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='11' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;      &lt;span class=&quot;n&quot;&gt;launchpad&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CSQLSatelliteConnection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;WriteMessage&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='12' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='13' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='14' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 7:&lt;/strong&gt; &lt;em&gt;Tear Down Connection and Send Ack&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In &lt;em&gt;Code Snippet 7&lt;/em&gt; we see how after continuing the execution and being signaled in &lt;em&gt;Code Snippet 6&lt;/em&gt;, we:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Retrieve the message&lt;/li&gt;
&lt;li&gt;Tear down the connection&lt;/li&gt;
&lt;li&gt;Removes the session&lt;/li&gt;
&lt;li&gt;Sending an ack message, through &lt;code&gt;WriteMessage&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; Seeing the &lt;code&gt;launchpad!CSQLSatelliteCommunication::SendAckMessage&lt;/code&gt; was what made me realize that we were looking at acknowledgments.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Seeing that the connection to the SqlSatellite is torn down, we can with some certainty say that the ack will be sent to SQL Server. So now, let's include SQL Server in our debug session as well:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Disable the &lt;code&gt;LaunchServTask&lt;/code&gt; break-point in the launchpad process.&lt;/li&gt;
&lt;li&gt;Set a break-point in the launchpad process at &lt;code&gt;launchpad!CSQLSatelliteCommunication::SendAckMessage&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;In the SQL Server process set a break-point at &lt;code&gt;sqllang!NP::ReadAsync&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The theory with the above is that after we break at the &lt;code&gt;SendAckMessage&lt;/code&gt;; when we continue we should immediately break at the SQL Server &lt;code&gt;ReadAsync&lt;/code&gt; break-point. Change the &lt;code&gt;Sys.sleep&lt;/code&gt; back to &lt;code&gt;Sys.sleep(10)&lt;/code&gt; and execute the code in &lt;em&gt;Code Snippet 1&lt;/em&gt;. You'll now break in the SQL Server process at &lt;code&gt;ReadAsync&lt;/code&gt;, this is when the connections etc., are set up between SQL Server and the launchpad. Just continue on from there, and there will be a couple of more breaks before &lt;code&gt;SendAckMessage&lt;/code&gt; - three more on my box, so four in total. Now wait until the break-point is hit at &lt;code&gt;SendAckMessage&lt;/code&gt;, continue on from there and watch how you immediately break in the SQL Server process at &lt;code&gt;ReadAsync&lt;/code&gt;. The call-stack at this stage:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Call Stack&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ReadAsync&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SNIReadAsync&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xc7&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CSQLSatelliteConnection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ReadCallBackInternal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xc8&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CSQLSatelliteConnection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ReadCallBack&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x39&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SNIReadDone&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x13c&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='6' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;sqldk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SOS_Node&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ListenOnIOCompletionPort&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x384&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='7' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 8:&lt;/strong&gt; &lt;em&gt;Call Stack at ReadAsync&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Hmm, there are some routines we recognize in the call-stack in &lt;em&gt;Code Snippet 8&lt;/em&gt;, we see the &lt;code&gt;ReadCallback...&lt;/code&gt; which we also saw in the launchpad process and if you remember &lt;a href=&quot;/2018/01/03/microsoft-sql-server-r-services-internals-xvii/&quot;&gt;Internals - XVII&lt;/a&gt;, we realized that &lt;code&gt;ReadCallbackInternal&lt;/code&gt; was used to signal to &lt;code&gt;PullRow&lt;/code&gt;, that data had arrived. The question is if something is signaled here as well? I doubt it is &lt;code&gt;PullRow&lt;/code&gt;, seeing that this has nothing to do with processing result-sets. How can we find out about this?&lt;/p&gt;

&lt;p&gt;In &lt;a href=&quot;/2018/01/03/microsoft-sql-server-r-services-internals-xvii/&quot;&gt;Internals - XVII&lt;/a&gt; we saw how after &lt;code&gt;PullRow&lt;/code&gt; was signaled, &lt;code&gt;ProcessResultRows&lt;/code&gt; were called and in there as one of the first calls were a call to &lt;code&gt;sqllang!CSQLSatelliteCommunication::GetSQLSatelliteMessage&lt;/code&gt;. Maybe something similar is happening here. The way we can find is to set a break-point in the SQL Server process at &lt;code&gt;sqllang!CSQLSatelliteCommunication::GetSQLSatelliteMessage&lt;/code&gt;, but disable it initially.&lt;/p&gt;

&lt;p&gt;Execute the code in &lt;em&gt;Code Snippet 1&lt;/em&gt; again, and continue until you hit the &lt;code&gt;ReadAsync&lt;/code&gt; break-point in the SQL server process, after the &lt;code&gt;SendAckMessage&lt;/code&gt; (as we did above). While you are in the &lt;code&gt;ReadAsync&lt;/code&gt; break-point, enable the &lt;code&gt;GetSQLSatelliteMessage&lt;/code&gt; in the SQL Server process, and continue the code execution. You'll see how the &lt;code&gt;GetSQLSatelliteMessage&lt;/code&gt; break-point is hit immediately after you have enabled it and continued from &lt;code&gt;ReadAsync&lt;/code&gt;. When you look at the call-stack (&lt;code&gt;k&lt;/code&gt;), it looks something like so:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Call Stack 2&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CSQLSatelliteCommunication&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetSQLSatelliteMessage&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CSQLSatelliteCommunication&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BindReadSNIPacket&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x6f&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CSQLSatelliteCommunication&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;WaitForAckMessage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x7a&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CUDXR_ExternalScript&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ShutdownService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x250&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;sqlmin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CUDXR_ExternalScriptCleanup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Close&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xe&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='6' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;sqlmin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CQueryExecContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FinalCleanup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x51&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='7' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;sqlmin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CQueryScan&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DestroyQuery&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x224&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='8' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CXStmtQuery&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ShutdownNormal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x151&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='9' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CXStmtQuery&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ErsqExecuteQuery&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x1014&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='10' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 9:&lt;/strong&gt; &lt;em&gt;Call Stack at GetSQLSatelliteMessage&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;It looks like we are onto something here, e.g there is the &lt;code&gt;sqllang!CSQLSatelliteCommunication::WaitForAckMessage&lt;/code&gt; routine, which seems to be called during shutdown of the session. From what we can see from the call-stack it also looks like the &quot;main&quot; routine &lt;code&gt;is sqllang!CXStmtQuery::ErsqExecuteQuery&lt;/code&gt;, and my guess it is that routine which is being signaled. That's what it looks like for code like in &lt;em&gt;Code Snippet 1&lt;/em&gt;:&lt;/p&gt;

&lt;p&gt;In the launchpad service:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It gets an IOCP notification.&lt;/li&gt;
&lt;li&gt;It reads the notification through the &lt;code&gt;Read...&lt;/code&gt; routines, and signals it.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;LaunchServTask&lt;/code&gt; wakes up and calls &lt;code&gt;launchpad!CSQLSatelliteCommunication::SendAckMessage&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;In SQL Server:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It reads the message sent from the launchpad service.&lt;/li&gt;
&lt;li&gt;Signals into &lt;code&gt;ErsqExecuteQuery&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Handles the message.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;What about code like in &lt;em&gt;Code Snippet 2&lt;/em&gt; where there is the equivalent of a &quot;print&quot; statement - what happens there?&lt;/p&gt;

&lt;h4&gt;Messages Generated in the External Script&lt;/h4&gt;

&lt;p&gt;What I noticed when I was &lt;del&gt;playing&lt;/del&gt; researching this post, was that when I executed the code in &lt;em&gt;Code Snippet 1&lt;/em&gt; - I saw one &lt;code&gt;sqllang!Np::ReadAsync&lt;/code&gt; in the SQL Server process after the sleep in the code, and we now know it is because of the the &lt;code&gt;SendAckMessage&lt;/code&gt;. However, when executing the code in &lt;em&gt;Code Snippet 2&lt;/em&gt; (with the &lt;code&gt;cat&lt;/code&gt; statement), all of a sudden I saw two &lt;code&gt;ReadAsync&lt;/code&gt; but only one &lt;code&gt;SendAckMessage&lt;/code&gt;. So something else seems to send a packet to SQL Server, but what?&lt;/p&gt;

&lt;p&gt;I started trying to trace through &lt;code&gt;launchpad!CLaunchContext::LaunchServTask&lt;/code&gt; with &lt;code&gt;wt&lt;/code&gt;, but couldn't do it completely as I received errors. So instead I looked at sending of packets in the launchpad service, and I set a break-point at &lt;code&gt;launchpad!CSQLSatelliteConnection::WriteMessage&lt;/code&gt;. When executing the code in &lt;em&gt;Code Snippet 1&lt;/em&gt;, the break-point was hit initially once immediately and the once after the sleep. The call-stack at this point looked like so:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Call Stack 3&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;launchpad&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CSQLSatelliteConnection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;WriteMessage&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;launchpad&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CSQLSatelliteCommunication&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SendAckMessage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x191&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;launchpad&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CLaunchContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LaunchServTask&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x958&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;launchpad&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CLaunchContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LaunchServTask&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x722&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;sqldk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SOS_Task&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Param&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Execute&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x231&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='6' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='7' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;ntdll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RtlUserThreadStart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x21&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 10:&lt;/strong&gt; &lt;em&gt;Call Stack in Launchpad SendAckMessage&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The call-stack we see in &lt;em&gt;Code Snippet 10&lt;/em&gt;, is more or less what we see in &lt;em&gt;Code Snippet 7&lt;/em&gt;. However, when we execute the code in &lt;em&gt;Code Snippet 2&lt;/em&gt;, and we break at the first &lt;code&gt;WriteMessage&lt;/code&gt; after the sleep, the call-stack looks as follows:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Call stack 4&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;launchpad&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CSQLSatelliteConnection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;WriteMessage&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;launchpad&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CSatelliteCargoContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SendLogMessage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x2b0&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;launchpad&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SQLSatellite_LogWString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x99&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;RLauncher&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetInstance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x3eb28&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;RLauncher&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetInstance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x3e7d1&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='6' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;RLauncher&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetInstance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x3e9be&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='7' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;RLauncher&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetInstance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x3d15b&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='8' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;RLauncher&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetInstance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x1751d&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='9' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;RLauncher&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetInstance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x1c30c&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='10' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;RLauncher&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SQLSatellite_GetLauncherAPI&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xe50&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='11' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;launchpad&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CLaunchContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Cleanup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x11a&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='12' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;launchpad&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CLaunchContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LaunchServTask&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x8fa&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='13' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;launchpad&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CLaunchContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LaunchServTask&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x722&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='14' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;sqldk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SOS_Task&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Param&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Execute&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x231&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='15' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='16' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;ntdll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RtlUserThreadStart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x21&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 11:&lt;/strong&gt; &lt;em&gt;Call Stack in Launchpad with Print Message&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;So the call-stack in &lt;em&gt;Code Snippet 11&lt;/em&gt; is completely different than in &lt;em&gt;Code Snippet 10&lt;/em&gt;. Well, we are still inside &lt;code&gt;LaunchServTask&lt;/code&gt;, but &lt;code&gt;LaunchServTask&lt;/code&gt; calls a cleanup routine, and within that routine calls to log routines are called: &lt;code&gt;launchpad!SQLSatellite_LogWString&lt;/code&gt;, and &lt;code&gt;launchpad!CSatelliteCargoContext::SendLogMessage&lt;/code&gt;. The &lt;code&gt;SendLogMessage&lt;/code&gt; routine is the routine which ultimately sends the message to SQL Server. When the code continues, the &lt;code&gt;WriteMessage&lt;/code&gt; breakpoint is hit the second time, and at this stage the breakpoint looks exactly the same as in &lt;em&gt;Code Snippet 10&lt;/em&gt;. This then means that the ack message is sent after the message from which to log.&lt;/p&gt;

&lt;p&gt;What is worth noticing is that even though the launchpad service sends two messages to SQL Server - there is only one message coming in from the external engine, e.g. the actual &quot;print&quot; message comes together with the ack message, as in &lt;em&gt;Code Snippet 3&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Now, let's see what it looks like at the SQL Server side, when we execute code like in &lt;em&gt;Code Snippet 2&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Disable all breakpoints in the launchpad service, except for &lt;code&gt;SendAckMessage&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Set a break-point at &lt;code&gt;launchpad!CSatelliteCargoContext::SendLogMessage&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Keep the  break-point in the SQL Server process for &lt;code&gt;ReadAsync&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Disable all other breakpoints in the SQL server process, including the &lt;code&gt;GetSQLSatelliteMessage&lt;/code&gt; break-point.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Execute the code in &lt;em&gt;Code Snippet 2&lt;/em&gt;, and let the code continue until you hit the &lt;code&gt;SendLogMessage&lt;/code&gt; break-point in the launchpad process. Continue the execution, and when you hit &lt;code&gt;ReadAsync&lt;/code&gt; in SQL server, enable the &lt;code&gt;GetSQLSatelliteMessage&lt;/code&gt; break-point. Continue the execution and when the &lt;code&gt;GetSQLSatelliteMessage&lt;/code&gt; breakpoint is hit, check the call-stack. Continue execution until the &lt;code&gt;SendAckMessage&lt;/code&gt; break-point is hit in the launchpad process, and then continue until &lt;code&gt;GetSQLSatelliteMessage&lt;/code&gt; in SQL Server is hit again. Check the call-stack, and compare them.&lt;/p&gt;

&lt;p&gt;You'll see how they are identical, and exactly like what we see in &lt;em&gt;Code Snippet 9&lt;/em&gt;. So if the call-stacks look exactly the same (from what we can see), what then causes the &quot;print&quot; statement to be output? It turns out that it is somewhat similar to what happens in the launchpad process where the &lt;code&gt;Cleanup&lt;/code&gt; routine leads into the &lt;code&gt;SendLogMessage&lt;/code&gt; call. So in the SQL Server process, the &lt;code&gt;sqlmin!CQueryExecContext::FinalCleanup&lt;/code&gt; routine calls into &lt;code&gt;sqllang!CUDXR_ExternalScript::ShutdownService&lt;/code&gt;, which - dependent on if a message comes back from the R engine - will read it in and then call a routine which handles the message: &lt;code&gt;sqllang!CUDXR_ExternalScript::HandleLogMessage&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Log Message&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;sqlmin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CQueryExecContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FinalCleanup&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;n&quot;&gt;sqlmin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CUDXR_ExternalScriptCleanup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Close&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CUDXR_ExternalScript&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ShutdownService&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;      &lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CSQLSatelliteCommunication&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;WaitForAckMessage&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='6' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;        &lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CSQLSatelliteConnection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetNextMessage&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='7' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;        &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='8' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;        &lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CSQLSatelliteCommunication&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BindReadSNIPacket&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='9' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;        &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='10' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;        &lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CSQLSatelliteMessageLog&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ReadPayload&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='11' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;        &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='12' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;        &lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CUDXR_ExternalScript&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HandleLogMessage&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='13' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;      &lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CSQLSatelliteCommunication&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;WaitForAckMessage&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='14' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;      &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='15' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;        &lt;span class=&quot;n&quot;&gt;sqllang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CSQLSatelliteConnection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetNextMessage&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='16' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;      &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='17' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 12:&lt;/strong&gt; &lt;em&gt;Call Flow in SQL Server Log Message&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;When a &quot;log&quot; message is passed into SQL Server the code path is as in &lt;em&gt;Code Snippet 12&lt;/em&gt;, when no log message is passed in after the &lt;code&gt;BindReadSNIPacket&lt;/code&gt; in &lt;em&gt;Code Snippet 12&lt;/em&gt;, the code will drop out until the &lt;code&gt;GetNextMessage&lt;/code&gt; at the end of &lt;em&gt;Code Snippet 12&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;We started this blog-post by asking where the message we see in &lt;em&gt;Figure 5&lt;/em&gt; comes from, and what causes it. By now is should be clear that what causes it; is the &lt;code&gt;SendAckMessage&lt;/code&gt; routine in the launchpad service. The message indicates that all work has been done. For the actual message we see, I believe it is generated by &lt;em&gt;SSMS&lt;/em&gt; directly, it does not come from the launchpad service.&lt;/p&gt;

&lt;p&gt;When a message is explicitly generated in the R script, that message goes back to the launchpad service which calls &lt;code&gt;SendLogMessage&lt;/code&gt;. After the &lt;code&gt;SendLogMesage&lt;/code&gt; the &lt;code&gt;SendAckMessage&lt;/code&gt; will be called as well.&lt;/p&gt;

&lt;h2&gt;Error Messages&lt;/h2&gt;

&lt;p&gt;So far we've seen how &quot;print&quot; messages generated from R are handled. What about error messages?&lt;/p&gt;

&lt;p&gt;That has to be covered in next post. When I started this post I thought I knew how error messages was handled - but when I looked at it closer, I realized there was more to it than I thought, so I need to do some more investigations. Sorry!&lt;/p&gt;

&lt;h2&gt;Summary&lt;/h2&gt;

&lt;p&gt;In this post we have seen how &quot;print&quot; messages originating form the external script as well as acknowledgment messages from the external environment are handled by the launchpad service as well as SQL Server.&lt;/p&gt;

&lt;h4&gt;Launchpad&lt;/h4&gt;

&lt;p&gt;The launchpad service:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Listens on callbacks from the external engine&lt;/li&gt;
&lt;li&gt;The callback signals &lt;code&gt;launchpad!CLaunchContext::LaunchServTask&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;LaunchServTask&lt;/code&gt; continues after signal into &lt;code&gt;launchpad!CLaunchContext::Cleanup&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;If a &quot;print&quot; message comes from the external engine, &lt;code&gt;launchpad!CSatelliteCargoContext::SendLogMessage&lt;/code&gt; is called.&lt;/li&gt;
&lt;li&gt;Regardless if there is a &quot;print&quot; message or not, launchpad will tell SQL Server that the external engine is &quot;done&quot; via &lt;code&gt;launchpad!CSQLSatelliteCommunication::SendAckMessage&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The figure below tries to illustrate the launchpad part:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sql_r_services_19_launchpad_flow.png&quot; width=&quot;800&quot; height=&quot;431&quot;  &gt;
&lt;strong&gt;Figure 9:&lt;/strong&gt; &lt;em&gt;Launchpad Flow&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In &lt;em&gt;Figure 9&lt;/em&gt; we see the main calls of leading up to and including when messages come back from the external engine. The numbered arrows show some of the calls and the communication in the launchpad service:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;During startup an IOCP &quot;listener&quot; is set up.&lt;/li&gt;
&lt;li&gt;Creates supporting directories and process, and initiates the connection to the external engine.&lt;/li&gt;
&lt;li&gt;After work is done, a call comes back from the external engine.&lt;/li&gt;
&lt;li&gt;This causes the &quot;listener&quot; to call &lt;code&gt;Read...&lt;/code&gt; routines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;LaunchServTask&lt;/code&gt; is signaled.&lt;/li&gt;
&lt;li&gt;Execution in &lt;code&gt;LaunchServTask&lt;/code&gt; continues into launchpad!CLaunchContext::Cleanup.&lt;/li&gt;
&lt;li&gt;If a &quot;print&quot; message has been passed back from the external engine, eventually &lt;code&gt;launchpad!CSatelliteCargoContext::SendLogMessage&lt;/code&gt; is called.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;launchpad!CSatelliteCargoContext::SendLogMessage&lt;/code&gt; sends the message to SQL Server.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;LaunchServTask&lt;/code&gt; continues into &lt;code&gt;launchpad!CSQLSatelliteCommunication::SendAckMessage&lt;/code&gt;, which sends an ack that the &quot;job is done&quot; to SQL Server.&lt;/li&gt;
&lt;/ol&gt;


&lt;h4&gt;SQL Server&lt;/h4&gt;

&lt;p&gt;In SQL Server the flow is something like so:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;As in the launchpad service, SQL Server listens for callbacks, on the named pipe connection to the launchpad service.&lt;/li&gt;
&lt;li&gt;A callback comes in, is being read and signals &lt;code&gt;sqllang!CXStmtQuery::ErsqExecuteQuery&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Execution continues and &lt;code&gt;sqlmin!CQueryExecContext::FinalCleanup&lt;/code&gt; is called.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;FinalCleanup&lt;/code&gt; calls into &lt;code&gt;sqllang!CUDXR_ExternalScript::ShutdownService&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;If a &quot;print&quot; message has been sent, &lt;code&gt;sqllang!CUDXR_ExternalScript::HandleLogMessage&lt;/code&gt; is called.&lt;/li&gt;
&lt;li&gt;Independent of whether a &quot;print&quot; message is sent or not, &lt;code&gt;sqllang!CSQLSatelliteCommunication::WaitForAckMessage&lt;/code&gt; will handle the final ack message.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;As with the launchpad service I have tried to create a figure illustrating the flow in SQL Server:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sql_r_services_19_sql_flow.png&quot; width=&quot;800&quot; height=&quot;584&quot;  &gt;
&lt;strong&gt;Figure 10:&lt;/strong&gt; &lt;em&gt;SQL Server Flow&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The numbered arrows in &lt;em&gt;Figure 10&lt;/em&gt; illustrates:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;During launch of the launchpad service, an IOCP &quot;listener&quot; is set up.&lt;/li&gt;
&lt;li&gt;Message sent to the launchpad service.&lt;/li&gt;
&lt;li&gt;After the call above, the SqlSatellite opens a TCP/IP connection to SQL Server.&lt;/li&gt;
&lt;li&gt;Authentication packets and script packet is sent to  the SqlSatellite.&lt;/li&gt;
&lt;li&gt;If there is data for &lt;code&gt;@input_data_1&lt;/code&gt;, it is sent, together with two end packets.&lt;/li&gt;
&lt;li&gt;Packets are coming back to SQL Server containing meta-data and the actual data.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;PullRow&lt;/code&gt; is being signaled, and processing of meta-data as well as result rows continues.&lt;/li&gt;
&lt;li&gt;The launchpad service sends &quot;print&quot;/ack messages to SQL Server. In the figure it is illustrated as one packet, but there is one message for &quot;print&quot; and one for ack.&lt;/li&gt;
&lt;li&gt;A signal is sent to &lt;code&gt;ErsqExecuteQuery&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Execution continues by calling into &lt;code&gt;sqllang!CXStmtQuery::ShutdownNormal&lt;/code&gt;, which calls into &lt;code&gt;FinalCleanup,&lt;/code&gt;ShutdownService, and a call to &lt;code&gt;sqllang!CSQLSatelliteCommunication::WaitForAckMessage&lt;/code&gt; is made followed by &lt;code&gt;sqllang!CSQLSatelliteConnection::GetNextMessage&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;If a &quot;print&quot; message has been sent to SQL Server &lt;code&gt;ReadPayload&lt;/code&gt; is called and then &lt;code&gt;sqllang!CUDXR_ExternalScript::HandleLogMessage&lt;/code&gt;. If no &quot;print&quot; message has been sent in, the code loops on &lt;code&gt;sqllang!CSQLSatelliteCommunication::WaitForAckMessage&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;SQL Server loops on &lt;code&gt;sqllang!CSQLSatelliteCommunication::WaitForAckMessage&lt;/code&gt; and waits for the ack message,&lt;/li&gt;
&lt;li&gt;When the ack message has been received, the eventual messages are sent to the calling code.&lt;/li&gt;
&lt;/ol&gt;


&lt;h2&gt;~ Finally&lt;/h2&gt;

&lt;p&gt;If you have comments, questions etc., please comment on this post or &lt;a href=&quot;mailto:niels.it.berglund@gmail.com&quot;&gt;ping&lt;/a&gt; me.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Interesting Stuff - Week 2</title>
   <link href="http://nielsberglund.com/2018/01/14/interesting-stuff-week-2/"/>
   <updated>2018-01-14T18:55:19+02:00</updated>
   <id>http://nielsberglund.com/2018/01/14/interesting-stuff---week-2</id>
   <content type="html">&lt;p&gt;Throughout the week, I read a lot of blog-posts, articles, etc., that has to do with things that interest me&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;data science&lt;/li&gt;
&lt;li&gt;data in general&lt;/li&gt;
&lt;li&gt;distributed computing&lt;/li&gt;
&lt;li&gt;SQL Server&lt;/li&gt;
&lt;li&gt;transactions (both db as well as non db)&lt;/li&gt;
&lt;li&gt;and other &quot;stuff&quot;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This is the &quot;roundup&quot; of the posts that has been most interesting to me, for the week just gone by.&lt;/p&gt;

&lt;!--more--&gt;


&lt;h2&gt;Programming&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.microsoft.com/en-us/research/blog/functional-programming-languages-pursuit-laziness-dr-simon-peyton-jones/&quot;&gt;Functional Programming Languages and the Pursuit of Laziness with Dr. Simon Peyton Jones&lt;/a&gt;. A transcript of a pod-cast with &lt;a href=&quot;https://en.wikipedia.org/wiki/Simon_Peyton_Jones&quot;&gt;Simon Peyton Jones&lt;/a&gt;, where the discussion is around functional programming and laziness :). Both the pod-cast as well as the transcript was very interesting (and entertaining).&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Streaming&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://data-artisans.com/blog/how-to-size-your-apache-flink-cluster-general-guidelines&quot;&gt;How To Size Your Apache Flink® Cluster: A Back-of-the-Envelope Calculation&lt;/a&gt;. Sizing an Apache Flink cluster can be a bit daunting. This post outlines a series of questions to ask to arrive at some numbers you can use as guidance.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.confluent.io/blog/apache-mesos-apache-kafka-kafka-streams-highly-scalable-microservices/&quot;&gt;Apache Mesos, Apache Kafka and Kafka Streams for Highly Scalable Microservices&lt;/a&gt;. This blog post discusses how to build a highly scalable, mission-critical microservice infrastructure with Apache Kafka, its Streams API, and Apache Mesos respectively in their vendor-supported platforms from Confluent and Mesosphere. It's a must read!!&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Data Science&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.acolyer.org/2018/01/10/mastering-chess-and-shogi-by-self-play-with-a-general-reinforcement-learning-algorithm/&quot;&gt;Mastering chess and shogi by self-play with a general reinforcement learning algorithm&lt;/a&gt;. AlphaZero is an AI program from &lt;a href=&quot;https://en.wikipedia.org/wiki/DeepMind&quot;&gt;DeepMind&lt;/a&gt;, which  masters Go, shogi and chess. In this blog-post &lt;a href=&quot;https://twitter.com/adriancolyer&quot;&gt;Adrian&lt;/a&gt; from &lt;a href=&quot;https://blog.acolyer.org&quot;&gt;the morning paper&lt;/a&gt; dissects a white-paper about AlphaZero.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.revolutionanalytics.com/2018/01/r-cloud-tools.html&quot;&gt;Services and tools for building intelligent R applications in the cloud&lt;/a&gt;. A blog-post from &lt;a href=&quot;http://blog.revolutionanalytics.com&quot;&gt;Revolution Analytics&lt;/a&gt; about application areas and associated applications and Azure services that can be used to deploy high performance R enterprise applications&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;~ Finally&lt;/h2&gt;

&lt;p&gt;That's all for this week. I hope you enjoy what I did put together. If you have ideas for what to cover, please comment on this post or &lt;a href=&quot;mailto:niels.it.berglund@gmail.com&quot;&gt;ping&lt;/a&gt; me.&lt;/p&gt;
</content>
 </entry>
 

</feed>
