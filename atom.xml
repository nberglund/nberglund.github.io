<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>MANAGED DATA</title>
 <link href="http://nielsberglund.com/atom.xml" rel="self"/>
 <link href="http://nielsberglund.com/"/>
 <updated>2017-07-02T19:29:38+02:00</updated>
 <id>http://nielsberglund.com</id>
 <author>
   <name>Niels Berglund</name>
   <email></email>
 </author>

 
 <entry>
   <title>Interesting Stuff - Week 26</title>
   <link href="http://nielsberglund.com/2017/07/02/interesting-stuff-week-26/"/>
   <updated>2017-07-02T19:23:56+02:00</updated>
   <id>http://nielsberglund.com/2017/07/02/interesting-stuff---week-26</id>
   <content type="html">&lt;p&gt;Throughout the week, I read a lot of blog-posts, articles, etc., that has to do with things that interest me&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;data science&lt;/li&gt;
&lt;li&gt;data in general&lt;/li&gt;
&lt;li&gt;distributed computing&lt;/li&gt;
&lt;li&gt;SQL Server&lt;/li&gt;
&lt;li&gt;transactions (both db as well as non db)&lt;/li&gt;
&lt;li&gt;and other &quot;stuff&quot;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This is the &quot;roundup&quot; of the posts that has been most interesting to me, for the week just gone by.&lt;/p&gt;

&lt;!--more--&gt;


&lt;h2&gt;SQL Server&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://tomaztsql.wordpress.com/2017/06/28/graph-database-with-t-sql/&quot;&gt;Graph Database with T-SQL&lt;/a&gt;. &lt;a href=&quot;https://tomaztsql.wordpress.com&quot;&gt;Tomaz&lt;/a&gt; takes us through the new graph database functionality in SQL Server 2017. I so wanted to look into the graph capabilities of SQL Server 2017, but haven't had time, sigh!&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/sql/relational-databases/in-memory-oltp/faster-temp-table-and-table-variable-by-using-memory-optimization&quot;&gt;Faster temp table and table variable by using memory optimization&lt;/a&gt;. Oh, this is cool! The post talks about increasing performance for temp tables and table variables by using in-memory optimizations.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2017/07/01/sqlclr-certificates/&quot;&gt;SQLCLR and Certificates&lt;/a&gt;. A post by myself, discussing how to authorize SQLCLR assemblies for permissions other than &lt;code&gt;SAFE&lt;/code&gt;. In this post I probably also offend some people by saying I don't think that &lt;code&gt;TRUSTWORTHY&lt;/code&gt; is that bad.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2017/07/02/sql-server-2017-sqlclr-and-permissions/&quot;&gt;SQL Server 2017, SQLCLR and Permissions&lt;/a&gt;. Geez, I have been productive this week - a second post by me. While investigating the post above, I came across some changes in SQL Server 2017, regarding SQLCLR and permissions. This post is the result.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Data Science&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blogs.technet.microsoft.com/machinelearning/2017/06/28/using-azure-data-lake-and-r-for-fraud-detection/&quot;&gt;Using Azure Data Lake and R for Fraud Detection&lt;/a&gt;. A post about peta-scale fraud detection using R and Azure Data Lake.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blogs.technet.microsoft.com/machinelearning/2017/06/27/saving-snow-leopards-with-deep-learning-and-computer-vision-on-spark/&quot;&gt;Saving Snow Leopards with Deep Learning and Computer Vision on Spark&lt;/a&gt;. This is soooo cute! Using image analysis and Apache Spark to save Snow Leopards!!!&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blogs.msdn.microsoft.com/rserver/2017/06/29/end-to-end-loan-chargeoff-prediction-built-using-azure-hdinsight-spark-clusters-and-sql-server-2016-r-service/&quot;&gt;End to End Loan ChargeOff Prediction Built Using Azure HDInsight Spark Clusters and SQL Server 2016 R Service&lt;/a&gt;. Monitoring loan charge-off using either R and Apache Spark, or SQL Server 2016 R Services.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Streaming&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://data-artisans.com/blog/bettercloud-dynamic-alerting-apache-flink&quot;&gt;Dynamically Configured Stream Processing: How BetterCloud Built an Alerting System with Apache Flink&lt;/a&gt;. Building a real-time alerting system using Apache Flink.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Misc.&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blogs.msdn.microsoft.com/ericgu/2017/06/22/notdd/&quot;&gt;#NoTDD&lt;/a&gt;. A very thought provoking post regarding the advantages/disadvantages of TDD.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;~ Finally&lt;/h2&gt;

&lt;p&gt;That's all for this week. I hope you enjoy what I did put together. If you have ideas for what to cover, please comment on this post or &lt;a href=&quot;mailto:niels.it.berglund@gmail.com&quot;&gt;ping&lt;/a&gt; me.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>SQL Server 2017, SQLCLR and Permissions</title>
   <link href="http://nielsberglund.com/2017/07/02/sql-server-2017-sqlclr-and-permissions/"/>
   <updated>2017-07-02T08:18:48+02:00</updated>
   <id>http://nielsberglund.com/2017/07/02/sql-server-2017-sqlclr-and-permissions</id>
   <content type="html">&lt;p&gt;While I was writing the post about &lt;a href=&quot;/2017/07/01/sqlclr-certificates/&quot;&gt;SQLCLR and Certificates&lt;/a&gt;, I came across some strange behavior when I accidentally ran my code on an SQL Server 2017 instance. I quickly connected back to my SQL Server 2016 instance and continued. However, afterwards I started to look into the differences between SQLCLR in SQL Server 2017 and SQL Server 2016, and this post is the result of me &lt;del&gt;playing around&lt;/del&gt; investigating the changes.&lt;/p&gt;

&lt;!--more--&gt;


&lt;p&gt;Let's start with a recap and an example&lt;/p&gt;

&lt;h2&gt;Recap&lt;/h2&gt;

&lt;p&gt;In all versions of SQL Server from 2005 (where SQLCLR was introduced) up to 2016; when you deploy assemblies to the database and you want the assemblies to be able to execute outside of the database it is deployed to, you assign a permission set to the assembly. There are three permission sets available, ranging from not allowing you to shoot yourself in the foot to blow your head off:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;SAFE&lt;/code&gt; - the code is not doing anything that you cannot do in T-SQL. You cannot shoot yourself in the foot any more than what you can do with T-SQL. This is the default.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;EXTERNAL_ACCESS&lt;/code&gt; - you can get outside of the local database, but only via &quot;approved&quot; assemblies, such as &lt;code&gt;ADO.NET&lt;/code&gt;, etc. You can definitely shoot yourself in the foot.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;UNSAFE&lt;/code&gt; - You can do pretty much what you want. You are free to blow your head off.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The permission set is assigned when you create the assembly:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Create Assembly&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ASSEMBLY&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;some_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'F:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;some_path&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;somedll.dll'&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;WITH&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PERMISSION_SET&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SAFE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EXTERNAL_ACCESS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UNSAFE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;GO&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 1:&lt;/strong&gt; &lt;em&gt;Creating an Assembly from Absolute Path&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In order to create an assembly with anything else than &lt;code&gt;SAFE&lt;/code&gt;, the database or assembly need to have additional authorizations, and that was what my &lt;a href=&quot;/2017/07/01/sqlclr-certificates/&quot;&gt;SQLCLR and Certificates&lt;/a&gt; post covered.&lt;/p&gt;

&lt;p&gt;To see what has changed in SQL Server 2017, let's look at some sample code. In &lt;em&gt;Code Snippet 1&lt;/em&gt; you see some C# code that we want to deploy to a SQL Server 2017 database:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Safe&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Sql2k17SqlClr&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;p&quot;&gt;&amp;#x7b;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Functions&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;p&quot;&gt;&amp;#x7b;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fn_clr_Adder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='6' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;p&quot;&gt;&amp;#x7b;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='7' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='8' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;p&quot;&gt;&amp;#x7d;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='9' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;p&quot;&gt;&amp;#x7d;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='10' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;p&quot;&gt;&amp;#x7d;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 1:&lt;/strong&gt; &lt;em&gt;Safe Code to be Deployed&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;After having built the project with the code in &lt;em&gt;Code Snippet 1&lt;/em&gt;, you would deploy it to a specific database in your SQL Server instance like so (the dll is named &lt;code&gt;Sql2k17SqlClr1.dll&lt;/code&gt;):&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Assembly Creation&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ASSEMBLY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Sql2k17SqlClr&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'W:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;lt;path_to_dll&amp;gt;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Sql2k17SqlClr1.dll'&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;GO&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 2:&lt;/strong&gt; &lt;em&gt;Create Safe Assembly&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The assembly we want to create in the database is definitely a safe assembly, as it is just doing some internal calculation, and in SQL Server (pre 2017), this would deploy just fine. In SQL Server 2017 however things are different. When you run the code in &lt;em&gt;Code Snippet 2&lt;/em&gt;, you will get following error:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sql2k17_safe.png&quot; width=&quot;430&quot; height=&quot;209&quot;  &gt;
&lt;strong&gt;Figure 1:&lt;/strong&gt; &lt;em&gt;Error Deploying Safe Assembly&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The error you see is more or less the same you'd receive if you - in SQL Server pre 2017 - tried to deploy an assembly as &lt;code&gt;EXTERNAL_ACCESS&lt;/code&gt; or &lt;code&gt;UNSAFE&lt;/code&gt;. You can read more about that particular issue in my &lt;a href=&quot;/2017/07/01/sqlclr-certificates/&quot;&gt;SQLCLR and Certificates&lt;/a&gt; post.&lt;/p&gt;

&lt;p&gt;One difference in the error message you see in &lt;em&gt;Figure 1&lt;/em&gt;, and what you would have received in pre SQL Server 2017 versions, is: &quot;&lt;em&gt;the 'clr strict security' option of sp_configure is set to 1&lt;/em&gt;&quot;. You may think; &quot;what is this, I have never seen that in other SQL Server versions&quot;. You are absolutely correct, so let's look at that  - and we'll start with &lt;strong&gt;Code Access Security&lt;/strong&gt; (&lt;strong&gt;CAS&lt;/strong&gt;)&lt;/p&gt;

&lt;h2&gt;Code Access Security&lt;/h2&gt;

&lt;p&gt;CAS is a security technology developed to provide the ability to protect system resources when a .NET assembly is executed. Such system resources could be: local files, files on a remote file system, registry keys, databases, printers and so on. CAS, in essence, was used to enforce security boundaries based on code origination or other identity aspects, and SQL Server's &lt;code&gt;PERMISSION_SET&lt;/code&gt; relied on the CAS security boundaries. That was how SQLCLR assemblies which only performed &quot;safe&quot; operations did not need any further authorizations.&lt;/p&gt;

&lt;p&gt;In recent versions of the .NET framework (around version 4.5), Microsoft has changed the relation between CAS and security boundaries, and CAS is no longer supported as a boundary! From a SQLCLR perspective that is a real &quot;bummer&quot;, as theoretically there is no control over what an assembly can and cannot do (whereas before &lt;code&gt;PERMISSION_SET&lt;/code&gt; controlled the abilities).&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; The above statement about no control what an assembly can and cannot do is not entirely correct as we will see further down.&lt;/p&gt;&lt;/blockquote&gt;

&lt;h3&gt;&lt;code&gt;clr strict security&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;With the changes of the implications of CAS, and in order to enhance the security of CLR assemblies, Microsoft has in SQL Server 2017 introduced an &lt;code&gt;sp_configure&lt;/code&gt; option called &lt;code&gt;clr strict security&lt;/code&gt;, which by default is set to 1 (on). When the setting is on, SQL Server treats all assemblies (&lt;code&gt;SAFE&lt;/code&gt;, &lt;code&gt;EXTERNAL_ACCESS&lt;/code&gt;, &lt;code&gt;UNSAFE&lt;/code&gt;) as if they were marked &lt;code&gt;UNSAFE&lt;/code&gt;. The implication of this is that you must either:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Set the database to be &lt;code&gt;TRUSTWORTHY&lt;/code&gt;, &lt;em&gt;OR&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Sign the assembly with a certificate that has a corresponding login with &lt;code&gt;UNSAFE ASSEMBLY&lt;/code&gt; permission, &lt;em&gt;OR&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Sign the assembly with an asymmetric key that has a corresponding login with &lt;code&gt;UNSAFE ASSEMBLY&lt;/code&gt; permission.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;If you changed the &lt;code&gt;clr strict security&lt;/code&gt; option to 0, the code in &lt;em&gt;Code Snippet 2&lt;/em&gt;, would work just fine. Likewise, if you didn't change the option, but instead set &lt;code&gt;TRUSTWORTHY ON&lt;/code&gt; on the database, it would also work.&lt;/p&gt;

&lt;h2&gt;Assembly Authorization&lt;/h2&gt;

&lt;p&gt;So, where are we? In order to create a safe assembly we now need to authorize it as we would an &lt;code&gt;EXTERNAL_ACCESS&lt;/code&gt; or &lt;code&gt;UNSAFE&lt;/code&gt;, so let's do that to the assembly that the code in &lt;em&gt;Code Snippet 2&lt;/em&gt; represents. We could do it by setting &lt;code&gt;TRUSTWORTHY&lt;/code&gt; to &lt;code&gt;ON&lt;/code&gt; for the database, and you who read my &lt;a href=&quot;/2017/07/01/sqlclr-certificates/&quot;&gt;SQLCLR and Certificates&lt;/a&gt; post know that I do not think that setting &lt;code&gt;TRUSTWORTHY&lt;/code&gt; to &lt;code&gt;ON&lt;/code&gt; is like &quot;opening the gates to hell&quot;, so I would not have an issue with doing that - even on a production database. That is however a discussion for another day, so let us do it by using a certificate.&lt;/p&gt;

&lt;p&gt;To recap from the &lt;a href=&quot;/2017/07/01/sqlclr-certificates/&quot;&gt;SQLCLR and Certificates&lt;/a&gt; post, to use a certificate you'd:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create a certificate, if you don't already have one.&lt;/li&gt;
&lt;li&gt;Create a &lt;code&gt;.pfx&lt;/code&gt; file from the certificate. Pfx stands for Personal Information Exchange, and we'll use it to sign your assembly.&lt;/li&gt;
&lt;li&gt;Sign the dll with the &lt;code&gt;.pfx&lt;/code&gt; file.&lt;/li&gt;
&lt;li&gt;In the database create a SQL Server certificate from the original certificate.&lt;/li&gt;
&lt;li&gt;In the database create login from the certificate.&lt;/li&gt;
&lt;li&gt;Grant the login &lt;code&gt;UNSAFE ASSEMBLY&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Create the dll in the database.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I already have a certificate and a &lt;code&gt;.pfx&lt;/code&gt; file created from when I wrote the &lt;a href=&quot;/2017/07/01/sqlclr-certificates/&quot;&gt;SQLCLR and Certificates&lt;/a&gt; post, so I'll re-use those and go ahead and sign the assembly with the &lt;code&gt;.pfx&lt;/code&gt; file:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Signing&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;signtool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sign&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NielsTestPfx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pfx&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;              &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;testPwd&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Sql2k17SqlClr1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dll&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 3:&lt;/strong&gt; &lt;em&gt;Sign the dll Using signtool.exe&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;/p&lt;/code&gt; flag in &lt;em&gt;Code Snippet 3&lt;/em&gt; defines the password of your &lt;code&gt;.pfx&lt;/code&gt; file. After having signed the dll, I create the SQL Server certificate, from the original certificate:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Certificate&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;USE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;master&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;GO&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CERTIFICATE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NielsTestCert&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FILE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'W:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;lt;path_to_cert&amp;gt;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;NielsTestCert.cer'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;GO&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 4:&lt;/strong&gt; &lt;em&gt;Create a SQL Server Certificate&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;When the certificate is created we can create a login from the certificate, and &lt;code&gt;GRANT&lt;/code&gt; the login &lt;code&gt;UNSAFE&lt;/code&gt; assembly permissions:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Login&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LOGIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;login_NielsTestCert&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CERTIFICATE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NielsTestCert&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;GO&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;GRANT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UNSAFE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ASSEMBLY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;login_NielsTestCert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='6' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;GO&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 5:&lt;/strong&gt; &lt;em&gt;Create a SQL Server Login and Grant Permissions&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;After the login has been created and the &lt;code&gt;UNSAFE ASSEMBLY&lt;/code&gt; permission granted to the login, the code in &lt;em&gt;Code Snippet 2&lt;/em&gt;, should just work. Oh, don't forget to switch back from &lt;code&gt;master&lt;/code&gt; to the database where you want to create the assembly.&lt;/p&gt;

&lt;p&gt;We can then finally create a T-SQL wrapper function against the &lt;code&gt;fn_clr_Adder&lt;/code&gt; method:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Function&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FUNCTION&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dbo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fn_clr_Adder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;RETURNS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;EXTERNAL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NAME&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Sql2k17SqlClr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Sql2k17SqlClr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Functions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fn_clr_Adder&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;GO&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 6:&lt;/strong&gt; &lt;em&gt;Create T-SQL Wrapper Function&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;To check that it all works, run: &lt;code&gt;SELECT dbo.fn_clr_Adder(21,21)&lt;/code&gt; and the &lt;a href=&quot;https://en.wikipedia.org/wiki/42_(number)&quot;&gt;&lt;em&gt;Answer to the Ultimate Question of Life, the Universe, and Everything&lt;/em&gt;&lt;/a&gt; should be returned to you.&lt;/p&gt;

&lt;p&gt;So far this does not seem too bad, OK - so for a &lt;code&gt;SAFE&lt;/code&gt; assembly we need to sign the assembly and have a login with &lt;code&gt;UNSAFE ASSEMBLY&lt;/code&gt; permissions granted (or have &lt;code&gt;TRUSTWORTHY&lt;/code&gt; on).&lt;/p&gt;

&lt;h2&gt;Confusion About &lt;code&gt;SAFE&lt;/code&gt; Assemblies&lt;/h2&gt;

&lt;p&gt;Since the introduction of &lt;code&gt;clr strict security&lt;/code&gt; there has been some confusion about how &lt;code&gt;SAFE&lt;/code&gt; assemblies will behave, and part of this confusion can be attributed to the &lt;a href=&quot;https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/clr-strict-security&quot;&gt;documentation&lt;/a&gt; around &lt;code&gt;clr strict security&lt;/code&gt;. Specifically this statement: &lt;em&gt;A CLR assembly created with PERMISSION_SET = SAFE may be able to access external system resources, call unmanaged code, and acquire sysadmin privileges.&lt;/em&gt;. When reading that statement, my understanding is that if I create an assembly as &lt;code&gt;SAFE&lt;/code&gt; I could potentially do &lt;code&gt;UNSAFE&lt;/code&gt; operations.&lt;/p&gt;

&lt;p&gt;Let us test this out, and create a second dll &lt;code&gt;Sql2k17SqlClr2.dll&lt;/code&gt;, where the code looks like so:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Sql2k17SqlClr2.dll&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Threading&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Threading.Tasks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Sql2k17SqlClr&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;p&quot;&gt;&amp;#x7b;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='6' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Functions&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='7' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;p&quot;&gt;&amp;#x7b;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='8' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fn_clr_Adder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='9' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;p&quot;&gt;&amp;#x7b;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='10' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='11' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;p&quot;&gt;&amp;#x7d;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='12' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line='13' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fn_clr_LongRunningAdder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='14' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;p&quot;&gt;&amp;#x7b;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='15' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line='16' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;      &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Task&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Factory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;StartNew&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LongRunning&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='17' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='18' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;p&quot;&gt;&amp;#x7d;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='19' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line='20' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LongRunning&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='21' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;p&quot;&gt;&amp;#x7b;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='22' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;      &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wait&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='23' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;      &lt;span class=&quot;n&quot;&gt;Thread&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wait&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='24' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='25' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line='26' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;p&quot;&gt;&amp;#x7d;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='27' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;p&quot;&gt;&amp;#x7d;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='28' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;p&quot;&gt;&amp;#x7d;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 7:&lt;/strong&gt; &lt;em&gt;Safe and Unsafe Behavior&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;As you see in &lt;em&gt;Code Snippet 7&lt;/em&gt;, we have our trusted &lt;code&gt;fn_clr_Adder&lt;/code&gt; method, which is as safe as you can get. But, we also have the &lt;code&gt;fn_clr_LongRunningAdder&lt;/code&gt; method which uses a &lt;code&gt;Task&lt;/code&gt; for calling into another method and this is definitely &lt;code&gt;UNSAFE&lt;/code&gt;. So what will happen here if we, after having built and signed the dll, create the assembly as &lt;code&gt;SAFE&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Assembly Creation&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ASSEMBLY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Sql2k17SqlClr2&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'W:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;lt;path_to_dll&amp;gt;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Sql2k17SqlClr2.dll'&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;WITH&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PERMISSION_SET&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SAFE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;GO&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 8:&lt;/strong&gt; &lt;em&gt;Create Safe Assembly with Unsafe Method&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Running the code in &lt;em&gt;Code Snippet 8&lt;/em&gt; should work, and it would also have worked in previous versions of SQL Server. We can now create a T-SQL wrapper function around the &lt;code&gt;fn_clr_LongRunningAdder&lt;/code&gt; method (the method using &lt;code&gt;UNSAFE&lt;/code&gt; resources):&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Unsafe Function&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FUNCTION&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dbo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fn_clr_LongRunningAdder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;RETURNS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;EXTERNAL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NAME&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Sql2k17SqlClr2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Sql2k17SqlClr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Functions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fn_clr_LongRunningAdder&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;GO&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 9:&lt;/strong&gt; &lt;em&gt;Create an Unsafe T-SQL Wrapper Function&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;When I execute &lt;code&gt;SELECT dbo.fn_clr_LongRunningAdder(21, 21)&lt;/code&gt; I would expect - having read the statement above - that this would work. However, on my SQL Server 2017 instance (CTP 2.1), I receive an error:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sql2k17_safe_unsafe.png&quot; width=&quot;530&quot; height=&quot;201&quot;  &gt;
&lt;strong&gt;Figure 2:&lt;/strong&gt; &lt;em&gt;Error Executing UNSAFE Function in SAFE Assembly&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;So, &lt;code&gt;HostProtection&lt;/code&gt; kicks in and says that I do not have necessary permissions to do the operation. In previous SQL Server versions this would happen if you hadn't assigned the correct &lt;code&gt;PERMISSION_SET&lt;/code&gt; to the assembly when it was created. So, let us drop the function and the assembly, and recreate the assembly with &lt;code&gt;PERMISSION_SET = UNSAFE&lt;/code&gt;, and recreate the wrapper function:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Recreate Assembly&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;DROP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FUNCTION&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dbo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fn_clr_LongRunningAdder&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;DROP&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ASSEMBLY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Sql2k17SqlClr2&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;GO&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ASSEMBLY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Sql2k17SqlClr2&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='6' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'W:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;lt;path_to_dll&amp;gt;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Sql2k17SqlClr2.dll'&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='7' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;WITH&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PERMISSION_SET&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UNSAFE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='8' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;GO&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='9' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line='10' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FUNCTION&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dbo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fn_clr_LongRunningAdder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='11' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;RETURNS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='12' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;EXTERNAL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NAME&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Sql2k17SqlClr2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Sql2k17SqlClr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Functions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fn_clr_LongRunningAdder&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='13' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;GO&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 10:&lt;/strong&gt; &lt;em&gt;Create the Assembly as UNSAFE&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Now when I execute &lt;code&gt;SELECT dbo.fn_clr_LongRunningAdder(21, 21)&lt;/code&gt;, it all works as expected. So it seems that &lt;code&gt;PERMISSION_SET&lt;/code&gt; still has a role to play, at least in this scenario.&lt;/p&gt;

&lt;h3&gt;Referenced Assemblies&lt;/h3&gt;

&lt;p&gt;So what about if I have a &lt;code&gt;SAFE&lt;/code&gt; assembly which references an &lt;code&gt;UNSAFE&lt;/code&gt; assembly, and calls into an &lt;code&gt;UNSAFE&lt;/code&gt; method?&lt;/p&gt;

&lt;p&gt;I created a third dll: &lt;code&gt;Sql2k17SqlClr3.dll&lt;/code&gt;, which has a method that calls into the &lt;code&gt;fn_clr_LongRunningAdder&lt;/code&gt; method in the &lt;code&gt;UNSAFE&lt;/code&gt; assembly &lt;code&gt;Sql2k17SqlClr2.dll&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Function&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Sql2k17SqlClr3&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;p&quot;&gt;&amp;#x7b;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Functions&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;p&quot;&gt;&amp;#x7b;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fn_clr_Adder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='6' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;p&quot;&gt;&amp;#x7b;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='7' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Sql2k17SqlClr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Functions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;fn_clr_LongRunningAdder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='8' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;p&quot;&gt;&amp;#x7d;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='9' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;p&quot;&gt;&amp;#x7d;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='10' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;p&quot;&gt;&amp;#x7d;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 11:&lt;/strong&gt; &lt;em&gt;Method Calling Into UNSAFE Method&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;After having built and signed the dll, I deployed it to the database with &lt;code&gt;PERMISSION_SET = SAFE&lt;/code&gt;, and created a T-SQL wrapper function around the &lt;code&gt;fn_clr_Adder&lt;/code&gt; method. This is what was returned when executing the function:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sql2k17_safe_unsafe.png&quot; width=&quot;530&quot; height=&quot;201&quot;  &gt;
&lt;strong&gt;Figure 3:&lt;/strong&gt; &lt;em&gt;Error Calling Into UNSAFE Assembly From SAFE&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Also in the case of referenced assemblies, it seems that &lt;code&gt;PERMISSION_SET&lt;/code&gt; plays a role. This was confirmed when I dropped and recreated the &lt;code&gt;Sql2k17SqlClr3.dll&lt;/code&gt; with &lt;code&gt;PERMISSION_SET = UNSAFE&lt;/code&gt;. When I at that stage executed the wrapper function, all worked OK!&lt;/p&gt;

&lt;h2&gt;Summary&lt;/h2&gt;

&lt;p&gt;In SQL Server 2017, Microsoft now by default requires that all type of assemblies (&lt;code&gt;SAFE&lt;/code&gt;, &lt;code&gt;EXTERNAL_ACCESS&lt;/code&gt;, &lt;code&gt;UNSAFE&lt;/code&gt;) are authorized for &lt;code&gt;UNSAFE&lt;/code&gt; access, by:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The database is set to be &lt;code&gt;TRUSTWORTHY&lt;/code&gt;, &lt;em&gt;OR&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;The assembly is signed with a certificate that has a corresponding login with &lt;code&gt;UNSAFE ASSEMBLY&lt;/code&gt; permission, &lt;em&gt;OR&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;The assembly is signed with an asymmetric key that has a corresponding login with &lt;code&gt;UNSAFE ASSEMBLY&lt;/code&gt; permission.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The above requirement is handled by a new configure option: &lt;code&gt;clr strict security&lt;/code&gt;. The documentation around this option is, at least at the moment, somewhat mis-leading as it implies that &lt;code&gt;PERMISSION_SET&lt;/code&gt; no longer has an impact on the behavior of an assembly.&lt;/p&gt;

&lt;p&gt;The tests above shows however that if you want to do an &lt;code&gt;UNSAFE&lt;/code&gt; operation, the assembly has to be created with &lt;code&gt;PERMISSION_SET = UNSAFE&lt;/code&gt;. So what I wrote in the beginning of this post: &lt;em&gt;&quot;From a SQLCLR perspective that is a real &quot;bummer&quot;, as theoretically there is no control over what an assembly can and cannot do (whereas before &lt;code&gt;PERMISSION_SET&lt;/code&gt; controlled the abilities).&quot;&lt;/em&gt;, does not seem to be correct.&lt;/p&gt;

&lt;p&gt;Bear in mind that I am running SQL Server 2017 CTP 2.1, and things may change. I'll try and dig in some more in this, and if I find out something I will edit this post.&lt;/p&gt;

&lt;h2&gt;~ Finally&lt;/h2&gt;

&lt;p&gt;If you have comments, questions etc., please comment on this post or &lt;a href=&quot;mailto:niels.it.berglund@gmail.com&quot;&gt;ping&lt;/a&gt; me.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>SQLCLR and Certificates</title>
   <link href="http://nielsberglund.com/2017/07/01/sqlclr-certificates/"/>
   <updated>2017-07-01T06:21:55+02:00</updated>
   <id>http://nielsberglund.com/2017/07/01/sqlclr--certificates</id>
   <content type="html">&lt;p&gt;This post originates, like the one about &lt;a href=&quot;/2017/06/25/creating-r-stored-procedures-in-sql-server-2016-using-sqlrutils/&quot;&gt;sqlrutils&lt;/a&gt;, from a question on a Microsoft forum - this time the &lt;a href=&quot;https://social.msdn.microsoft.com/Forums/sqlserver/en-US/home?forum=sqlnetfx&quot;&gt;.NET Framework inside SQL Server&lt;/a&gt; forum. As the name implies, the forum cover questions about the usage of SQLCLR (.NET inside SQL Server), and the &lt;a href=&quot;https://social.msdn.microsoft.com/Forums/sqlserver/en-US/35b8bce5-8ea9-4fd4-aa87-1764a2071e92/long-lasting-pfx-file-for-sqlclr-externalaccess-signing?forum=sqlnetfx&quot;&gt;question&lt;/a&gt; was about signing of SQLCLR assemblies in order to assigning other permission sets than &lt;code&gt;SAFE&lt;/code&gt; to the assembly.&lt;/p&gt;

&lt;p&gt;As I, back in the day, taught SQLCLR as part of Developmentor's SQL Server curriculum, I thought that it'd be interesting if I tried to answer the question, and also make a blog-post about it. That way I'd remember what to do the next time the question came up.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; In another post, I wrote this about Developmentor: &lt;em&gt;Developmentor were back in the day THE training company to go to if you wanted highly, highly technical training about COM, .NET, SQL Server, etc. &lt;a href=&quot;http://www.javaworld.com/article/2073792/core-java/a-eulogy--developmentor--rip.html&quot;&gt;This article&lt;/a&gt; by my old colleague &lt;a href=&quot;http://blogs.tedneward.com/&quot;&gt;Ted Neward&lt;/a&gt; (@tedneward) sums DM up quite accurately (apart from the fact that DM hadn't closed its doors when the article was written, ooops).&lt;/em&gt; Ted was probably more accurate than he at the time thought, since DM went out of business somewhat later.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Anyway, let's see what this is all about...&lt;/p&gt;

&lt;!--more--&gt;


&lt;h2&gt;SQLCLR&lt;/h2&gt;

&lt;p&gt;SQLCLR is where the .NET framework is embedded in the SQL engine, and you execute .NET code in the SQL Server process. Since you execute .NET code, you can &lt;em&gt;almost&lt;/em&gt; do anything you can in a &quot;normal&quot; .NET application.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; I wrote &quot;almost&quot; above, as there actually are certain limitations. For this discussion however, the limitations have &lt;strong&gt;almost&lt;/strong&gt; no impact on what we want to do.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The way SQLCLR works is that you compile your code into a dll, and you then register the &lt;strong&gt;assembly&lt;/strong&gt; with SQL Server:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Create Assembly&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ASSEMBLY&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;some_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'F:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;some_path&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;somedll.dll'&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;WITH&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PERMISSION_SET&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SAFE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EXTERNAL_ACCESS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UNSAFE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;GO&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 1:&lt;/strong&gt; &lt;em&gt;Creating an Assembly from Absolute Path&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The code does the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;CREATE ASSEMBLY&lt;/code&gt; - creates an assembly with a given name (whatever you want it to be).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;FROM&lt;/code&gt; - defines where the original assembly lives. The &lt;code&gt;FROM&lt;/code&gt; statement can also take an UNC patch or a binary definition of the assembly. The installation files for this project uses the binary representation.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;WITH PERMISSION_SET&lt;/code&gt; - sets the permissions. If you don't specify the permission set, it defaults to &lt;code&gt;SAFE&lt;/code&gt;. More about that below.&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;Permission Sets&lt;/h3&gt;

&lt;p&gt;Seeing that your code runs in the same process as the SQL Server engine (scary thought), Microsoft introduced the notion of permission sets to indicate what the code is allowed to do. From &lt;em&gt;Code Snippet 1&lt;/em&gt; you see there are three options:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;SAFE&lt;/code&gt; - the code is not doing anything that you cannot do in T-SQL. You are confined to do things inside the database you are executing in.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;EXTERNAL_ACCESS&lt;/code&gt; - you can get outside of the local database, but only via &quot;approved&quot; assemblies, such as &lt;code&gt;ADO.NET&lt;/code&gt;, etc.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;UNSAFE&lt;/code&gt; - You can do pretty much what you want. As I mentioned above, there are certain limitations, but very few.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Let us look at a very simple example of this, where we have code looking like so:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Test Code&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Threading&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Threading.Tasks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;SqlClrCert&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;p&quot;&gt;&amp;#x7b;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='6' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Functions&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='7' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;p&quot;&gt;&amp;#x7b;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='8' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fn_clr_Adder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='9' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;p&quot;&gt;&amp;#x7b;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='10' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='11' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;p&quot;&gt;&amp;#x7d;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='12' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line='13' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fn_clr_LongRunningAdder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='14' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;p&quot;&gt;&amp;#x7b;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='15' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line='16' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;      &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Task&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Factory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;StartNew&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LongRunning&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='17' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='18' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;p&quot;&gt;&amp;#x7d;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='19' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line='20' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LongRunning&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='21' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;p&quot;&gt;&amp;#x7b;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='22' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;      &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wait&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='23' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;      &lt;span class=&quot;n&quot;&gt;Thread&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wait&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='24' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='25' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line='26' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;p&quot;&gt;&amp;#x7d;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='27' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;p&quot;&gt;&amp;#x7d;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='28' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;p&quot;&gt;&amp;#x7d;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 2:&lt;/strong&gt; &lt;em&gt;Code to Use in SQL Server&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;As you can see, the code in &lt;em&gt;Code Snippet 2&lt;/em&gt; has two public functions, and we are interested in being able to use both from inside SQL Server. The second public function &lt;code&gt;fn_clr_LongRunningAdder&lt;/code&gt; emulates that we do something that takes a long time, so we have to use threads. When compiling this code, it compiles into an assembly: &lt;code&gt;SqlClrTest.dll&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;To use it from a database in SQL Server we need to create an assembly in SQL Server, as per what we see in &lt;em&gt;Code Snippet 1&lt;/em&gt;:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Assembly Creation&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ASSEMBLY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CertTest&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'W:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;lt;path_to_dll&amp;gt;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;SqlClrCert.dll'&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;GO&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 3:&lt;/strong&gt; &lt;em&gt;Create Assembly in SQL Server&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;When the assembly has been created we can go ahead and create the T-SQL wrapper functions for the two functions we have in the assembly:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Functions&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FUNCTION&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dbo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fn_clr_Adder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;RETURNS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;EXTERNAL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NAME&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CertTest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SqlClrCert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Functions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fn_clr_Adder&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;GO&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line='6' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FUNCTION&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dbo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fn_clr_LongRunningAdder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='7' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;RETURNS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='8' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;EXTERNAL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NAME&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CertTest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SqlClrCert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Functions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fn_clr_LongRunningAdder&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='9' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;GO&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 4:&lt;/strong&gt; &lt;em&gt;Create T-SQL Wrapper Functions&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;If you want more information about the &lt;code&gt;CREATE FUNCTION&lt;/code&gt; syntax, have a look &lt;a href=&quot;https://docs.microsoft.com/en-us/sql/t-sql/statements/create-function-transact-sql&quot;&gt;here&lt;/a&gt;. When the functions are created we can try and start use them, and we'll begin with &lt;code&gt;dbo.fn_clr_Adder&lt;/code&gt;:&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; Before you execute the function you may have to enable SQLCLR in the database: &lt;code&gt;sp_configure 'clr enabled', 1&lt;/code&gt; followed by &lt;code&gt;RECONFIGURE&lt;/code&gt;.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Answer to All Questions in the World&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dbo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fn_clr_Adder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;21&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;21&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 5:&lt;/strong&gt; &lt;em&gt;Execute dbo.fn_clr_Adder&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;When you execute the code, you should get back a result, cool! What happens if you now try to execute the long running adder:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Answer to All Questions in the World, Again&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dbo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fn_clr_LongRunningAdder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;21&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;21&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 6:&lt;/strong&gt; &lt;em&gt;Execute dbo.fn_clr_LongRunningAdder&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Ouch, a very nasty error:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sqlclrcert_exec1.png&quot; width=&quot;505&quot; height=&quot;199&quot;  &gt;
&lt;strong&gt;Figure 1:&lt;/strong&gt; &lt;em&gt;Error from Executing the Procedure&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;What you see in &lt;em&gt;Figure 1&lt;/em&gt; is SQL Server's way of telling you that you are about to do something, potentially, stupid - and that this is not supported under default permission settings.&lt;/p&gt;

&lt;p&gt;So, if we go back to &lt;em&gt;Code Snippet 1&lt;/em&gt; and look what options we have; maybe using the &lt;code&gt;WITH PERMISSION_SET&lt;/code&gt; clause will help. So just to make sure that we start from the beginning, let's drop the functions and the assembly:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Drop&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;DROP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FUNCTION&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IF&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;EXISTS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dbo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fn_clr_Adder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;DROP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FUNCTION&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IF&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;EXISTS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dbo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fn_clr_LongRunningAdder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;DROP&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ASSEMBLY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IF&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;EXISTS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CertTest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;GO&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 6:&lt;/strong&gt; &lt;em&gt;Dropping Functions and Assembly&lt;/em&gt;&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; I am using SQL Server 2016, and its new &lt;code&gt;DROP ... IF EXISTS ...&lt;/code&gt; syntax.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;We can now re-create the assembly with &lt;code&gt;UNSAFE&lt;/code&gt; permissions:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Unsafe Assembly Creation&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ASSEMBLY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CertTest&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'W:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;lt;path_to_dll&amp;gt;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;SqlClrCert.dll'&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;WITH&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PERMISSION_SET&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UNSAFE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;GO&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 7:&lt;/strong&gt; &lt;em&gt;Create Assembly in SQL Server with UNSAFE Permission Set&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;That should do the rick, so try and run it:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sqlclrcert_permission_set_unsafe1.png&quot; width=&quot;420&quot; height=&quot;173&quot;  &gt;
&lt;strong&gt;Figure 2:&lt;/strong&gt; &lt;em&gt;Error from Trying to Create the Assembly&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Eish, not good! It looks like we need to do some more things with the assembly in order to be able to create it as &lt;code&gt;UNSAFE&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;Assembly Authorization&lt;/h2&gt;

&lt;p&gt;In &lt;em&gt;Figure 2&lt;/em&gt; we see that the error has something to do with authorization of the assembly: &lt;em&gt;CREATE ASSEMBLY for assembly 'SqlClrCert' failed
because assembly 'SqlClrCert' is not authorized for PERMISSION_SET = UNSAFE&lt;/em&gt;. So it is not enough to say what permissions the assembly needs to have, there are certain requirements on the environment as well.&lt;/p&gt;

&lt;p&gt;From the error we can see that in order to be authorized either of the following requirements need to be true:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The database owner (DBO) has &lt;code&gt;UNSAFE ASSEMBLY&lt;/code&gt; permission and the database has the &lt;code&gt;TRUSTWORTHY&lt;/code&gt; database property on.&lt;/li&gt;
&lt;li&gt;The assembly is signed with a certificate that has a corresponding login with &lt;code&gt;UNSAFE ASSEMBLY&lt;/code&gt; permission.&lt;/li&gt;
&lt;li&gt;The assembly is signed with an asymmetric key that has a corresponding login with &lt;code&gt;UNSAFE ASSEMBLY&lt;/code&gt; permission.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Of the three options above, we'll look at the two first ones (&lt;code&gt;TRUSTWORTHY&lt;/code&gt; and certificate). I'll skip the asymmetric key, as it - in my mind - is too inflexible to use in production.&lt;/p&gt;

&lt;h3&gt;TRUSTWORTHY&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;TRUSTWORTHY&lt;/code&gt; setting defines whether SQL Server trusts code in the particular database to access external resources (a bit like: &quot;Trust me, I am a professional!&quot;). The way to set it on is through &lt;code&gt;ALTER DATABASE&lt;/code&gt; syntax:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Trustworthy&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;ALTER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DATABASE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;your_db_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TRUSTWORTHY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;GO&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 8:&lt;/strong&gt; &lt;em&gt;Set Database to Trustworthy&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;To see if &lt;code&gt;TRUSTWORTHY&lt;/code&gt; will fix the issue for us, run the code in &lt;em&gt;Code Snippet 8&lt;/em&gt;, followed by the code in &lt;em&gt;Code Snippet 7&lt;/em&gt;. The &lt;code&gt;CREATE ASSEMBLY&lt;/code&gt; statement in &lt;em&gt;Code Snippet 7&lt;/em&gt; should now work without any issues. If you want, you can now go on and create the functions as in &lt;em&gt;Code Snippet 4&lt;/em&gt;, and then execute the long running function as we do in &lt;em&gt;Code Snippet 6&lt;/em&gt;. This should just work now! That was not too hard was it - why even bother doing it any other way?&lt;/p&gt;

&lt;p&gt;Well, &lt;code&gt;TRUSTWORTHY&lt;/code&gt; is kind of coarse grained, after having set it to &lt;code&gt;ON&lt;/code&gt;, all assemblies can now be created with elevated permissions (&lt;code&gt;EXTERNAL_ACCESS&lt;/code&gt; or &lt;code&gt;UNSAFE&lt;/code&gt;) - in that particular database. If you do not have full control over the database, this can become a security hole.&lt;/p&gt;

&lt;p&gt;My personal opinion is that the risks of &lt;code&gt;TRUSTWORTHY&lt;/code&gt; are over exaggerated by some experts in the SQL server community, and I have yet to come across anyone that has been &quot;bitten&quot; by using &lt;code&gt;TRUSTWORTHY&lt;/code&gt;. Here at &lt;a href=&quot;/Derivco&quot;&gt;Derivco&lt;/a&gt; we are huge proponents of SQLCLR and the majority of our SQLCLR assemblies are &lt;code&gt;UNSAFE&lt;/code&gt;, and we use &lt;code&gt;TRUSTWORTHY&lt;/code&gt; all the time.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; In order to create an assembly as &lt;code&gt;UNSAFE&lt;/code&gt;, the user need to be part of &lt;strong&gt;sysadmin&lt;/strong&gt;.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;In the case of &lt;code&gt;TRUSTWORTHY&lt;/code&gt; it is not the assembly as such being authorized, but the database.&lt;/p&gt;

&lt;h3&gt;Certificates&lt;/h3&gt;

&lt;p&gt;The second way to authorize an assembly for &lt;code&gt;EXTERNAL_ACCESS&lt;/code&gt; or &lt;code&gt;UNSAFE&lt;/code&gt; is by the use of certificates. For this purpose the certificate can be self-signed (preferably a certificate common for your corporation). The steps to authorize using a certificate are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create a certificate, if you don't already have one.&lt;/li&gt;
&lt;li&gt;Create a &lt;code&gt;.pfx&lt;/code&gt; file from the certificate. Pfx stands for Personal Information Exchange, and we'll use it to sign your assembly.&lt;/li&gt;
&lt;li&gt;Sign the dll with the &lt;code&gt;.pfx&lt;/code&gt; file.&lt;/li&gt;
&lt;li&gt;In the database create a SQL Server certificate from the original certificate.&lt;/li&gt;
&lt;li&gt;In the database create login from the certificate.&lt;/li&gt;
&lt;li&gt;Grant the login necessary permissions (&lt;code&gt;UNSAFE ASSEMBLY&lt;/code&gt; in our example).&lt;/li&gt;
&lt;li&gt;Create the dll in the database.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;To do all this above, we use tools from the Windows SDK. On my box, the path to these tools are at: &lt;code&gt;C:\Program Files (x86)\Windows Kits\10\bin\10.0.15063.0\x64&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Let's start with making a certificate, and for this we use the &lt;code&gt;makecert.exe&lt;/code&gt; tool:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Create Certificate&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;makecert&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pe&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;CN=Niels Test Root Authority&quot;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;         &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sha256&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sky&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;signature&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cy&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;authority&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;         &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sv&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NielsTestPvk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pvk&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;len&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2048&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;         &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;144&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NielsTestCert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cer&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 9:&lt;/strong&gt; &lt;em&gt;Create a Certificate Using makecert.exe&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;To see what the various flags used above means, you can run &lt;code&gt;makecert.exe -?&lt;/code&gt; and &lt;code&gt;makecert.exe -!&lt;/code&gt;. Some explanations:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-r&lt;/code&gt; - Create a self signed certificate.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-pe&lt;/code&gt; - Make the generated private key exportable.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-a&lt;/code&gt; - The signature's digest algorithm.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-sv&lt;/code&gt; - The PVK file to be created.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-m&lt;/code&gt; - Number of months the certificate will be valid for.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;When you run the code in &lt;em&gt;Code Snippet 9&lt;/em&gt;, a couple of dialog boxes will &quot;pop up&quot; asking for you to define password for the private key, and then to enter the password for the private key. After execution you should see two newly created files in the directory where you ran the code: a &lt;code&gt;.cer&lt;/code&gt; file, and a &lt;code&gt;.pvk&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;Having created the certificate, we now create the &lt;code&gt;.pfx&lt;/code&gt; using the &lt;code&gt;pvk2pfx.exe&lt;/code&gt; tool:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Create .pfx File&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;PVK2PFX&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pvk&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NielsTestPvk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pvk&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;        &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;spc&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NielsTestCert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cer&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;        &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pfx&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NielsTestPfx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pfx&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;        &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pi&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;testPwd&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;        &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;po&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;testPwd&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 10:&lt;/strong&gt; &lt;em&gt;Create a .pfx File Using pvk2pfx.exe&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The flags should be fairly self explanatory, the two that need some sort of explanation may be:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-pi&lt;/code&gt; - The password for the &lt;code&gt;.pvk&lt;/code&gt; file.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-po&lt;/code&gt; - Password to set for the &lt;code&gt;.pfx&lt;/code&gt; file.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Executing the code in &lt;em&gt;Code Snippet 10&lt;/em&gt; should result in a third file in your directory; a &lt;code&gt;.pfx&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;The last thing to do before doing things inside SQL Server is to sign your assembly. You sign the assembly with the newly created &lt;code&gt;.pfx&lt;/code&gt; file, and you use the &lt;code&gt;signtool.exe&lt;/code&gt; tool for this. Copy your &lt;code&gt;.pfx&lt;/code&gt; file to where your dll is (or vise versa), and then run &lt;code&gt;signtool.exe&lt;/code&gt; with the &lt;code&gt;sign&lt;/code&gt; command:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Signing&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;signtool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sign&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NielsTestPfx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pfx&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;              &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;testPwd&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SqlClrTest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dll&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 10:&lt;/strong&gt; &lt;em&gt;Sign the dll Using signtool.exe&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;/p&lt;/code&gt; flag defines the password to use for opening the &lt;code&gt;.pfx&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;Having done all this, we can now go to the database and do the final steps. First we need to create a SQL Server certificate from the certificate we created in &lt;em&gt;Code Snippet 9&lt;/em&gt;. The certificate should be created in the &lt;code&gt;master&lt;/code&gt; database:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Certificate&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;USE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;master&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;GO&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CERTIFICATE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NielsTestCert&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FILE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'W:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;lt;path_to_cert&amp;gt;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;NielsTestCert.cer'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;GO&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 11:&lt;/strong&gt; &lt;em&gt;Create a SQL Server Certificate&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;With a certificate created, we now create a login from the certificate, and also &lt;code&gt;GRANT&lt;/code&gt; it the necessary permissions (&lt;code&gt;UNSAFE ASSEMBLY&lt;/code&gt;):&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Login&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LOGIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;login_NielsTestCert&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CERTIFICATE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NielsTestCert&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;GO&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;GRANT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UNSAFE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ASSEMBLY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;login_NielsTestCert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='6' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;GO&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 12:&lt;/strong&gt; &lt;em&gt;Create a SQL Server Login and Grant Permissions&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;We are now back to where we were in &lt;em&gt;Code Snippet 7&lt;/em&gt;, where we want to create the assembly with &lt;code&gt;UNSAFE&lt;/code&gt; permission set. Before you run the code in &lt;em&gt;Code Snippet 7&lt;/em&gt;, make sure that the database is set to &lt;code&gt;TRUSTWORTHY OFF&lt;/code&gt;, and the run the code.&lt;/p&gt;

&lt;p&gt;After successfully created the assembly with the necessary permission set, you can run the code to create the functions (&lt;em&gt;Code Snippet 4&lt;/em&gt;), and the execute the long running adder (&lt;em&gt;Code Snippet 6&lt;/em&gt;). All of this should work fine! Congratulations, you have now used certificates to deploy an &lt;code&gt;UNSAFE&lt;/code&gt; assembly.&lt;/p&gt;

&lt;p&gt;This may seem like a lot of work, but after you have done the initial setup: certificate, &lt;code&gt;.pfx&lt;/code&gt;, and certificate in the SQL Server instance together with a login - you can now use this for any assembly. The only thing you need to do is to sign the assembly with the &lt;code&gt;.pfx&lt;/code&gt; file.&lt;/p&gt;

&lt;h2&gt;Dependent / Referenced Assemblies&lt;/h2&gt;

&lt;p&gt;We have seen from the above how we can deploy assemblies to a database with elevated permissions by using either &lt;code&gt;TRUSTWORTHY&lt;/code&gt; or certificates. But what about referenced assemblies?&lt;/p&gt;

&lt;p&gt;In an earlier &lt;a href=&quot;/2017/02/11/rabbitmq-sql-server/&quot;&gt;post&lt;/a&gt; I wrote about how to send data from SQL Server to RabbitMQ, and in our code we referenced the .NET client for RabbitMQ. When deploying our code to the database, the referenced assembly also need to be deployed - and in all likelihood have the same elevated permissions as our assembly. In that example we used &lt;code&gt;UNSAFE&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If we use &lt;code&gt;TRUSTWORTHY&lt;/code&gt;, things will just work fine, as the authorization is on the database level (and that's how we did it in that post). What if we do not use &lt;code&gt;TRUSTWORTHY&lt;/code&gt;, but certificates as above? That will work too - you can sign the referenced dll with the &lt;code&gt;.pfx&lt;/code&gt; file and deploy it as you normally would. This also works for strong named assemblies like Microsoft's!&lt;/p&gt;

&lt;h2&gt;Summary&lt;/h2&gt;

&lt;p&gt;So to sum it up:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;To deploy an assembly to SQL Server with elevated permissions, either the assembly or the database need to be authorized for this.&lt;/li&gt;
&lt;li&gt;You can authorize the database by setting &lt;code&gt;TRUSTWORTHY ON&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Assemblies can be authorized by either using certificates or asymmetric keys. I definitely prefer certificates over the keys.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;When it comes to the debate over &quot;how dangerous&quot; &lt;code&gt;TRUSTWORTHY&lt;/code&gt; is, I call &quot;BS&quot; on the arguments that &lt;code&gt;TRUSTWORTHY&lt;/code&gt; should not be used!&lt;/p&gt;

&lt;h3&gt;SQL Server 2017&lt;/h3&gt;

&lt;p&gt;Oh, one last thing: in SQL Server 2017, there are some changes to how things work, and I will make a separate blog-post about that.&lt;/p&gt;

&lt;h2&gt;~ Finally&lt;/h2&gt;

&lt;p&gt;If you have comments, questions etc., please comment on this post or &lt;a href=&quot;mailto:niels.it.berglund@gmail.com&quot;&gt;ping&lt;/a&gt; me.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Interesting Stuff - Week 25</title>
   <link href="http://nielsberglund.com/2017/06/25/interesting-stuff-week-25/"/>
   <updated>2017-06-25T19:51:33+02:00</updated>
   <id>http://nielsberglund.com/2017/06/25/interesting-stuff---week-25</id>
   <content type="html">&lt;p&gt;Throughout the week, I read a lot of blog-posts, articles, etc., that has to do with things that interest me&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;data science&lt;/li&gt;
&lt;li&gt;data in general&lt;/li&gt;
&lt;li&gt;distributed computing&lt;/li&gt;
&lt;li&gt;SQL Server&lt;/li&gt;
&lt;li&gt;transactions (both db as well as non db)&lt;/li&gt;
&lt;li&gt;and other &quot;stuff&quot;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This is the &quot;roundup&quot; of the posts that has been most interesting to me, for the week just gone by.&lt;/p&gt;

&lt;!--more--&gt;


&lt;h2&gt;SQL Server&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/2017/06/25/creating-r-stored-procedures-in-sql-server-2016-using-sqlrutils/&quot;&gt;Creating R Stored Procedures in SQL Server 2016 Using sqlrutils&lt;/a&gt;. A post from yours truly, how to create SQL Server wrapper procedures for &lt;code&gt;sp_execute_external_script&lt;/code&gt; in R.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Distributed Computing&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.infoq.com/news/2017/06/real-time-notifications-twitter&quot;&gt;Real-Time Notifications at Twitter&lt;/a&gt;. An article discussing Twitter's real-time notification architecture.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Data Science&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blogs.technet.microsoft.com/machinelearning/2017/06/19/loading-a-trained-model-dynamically-in-an-azure-ml-web-service/&quot;&gt;Loading a Trained Model Dynamically in an Azure ML Web Service&lt;/a&gt;. A post about a new Azure Machine Learning feature: the ability to load a trained model into an experiment at runtime. Let's say you have quite a few trained models, and you want to expose the models as web service calls. Previously you'd need to have one web endpoint for each model, whereas now you can at runtime decide what model to use.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blogs.technet.microsoft.com/machinelearning/2017/06/20/running-bigdl-apache-spark-deep-learning-library-on-microsoft-data-science-virtual-machine/&quot;&gt;Running BigDL Apache Spark Deep Learning Library on Microsoft Data Science Virtual Machine&lt;/a&gt;. A post about how you now can run the Apache Spark distributed deep learning library BigDL on Microsoft Data Science Virtual Machines, running on Linux. As I wrote in a tweet: &quot;Who'd 'thunk' some years ago, that MS would be on the forefront in Data Science and Open Source 'stuff'.&quot; Amazing!&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blogs.technet.microsoft.com/machinelearning/2017/06/21/data-virtualization-unlocking-data-for-ai-and-machine-learning/&quot;&gt;Data Virtualization: Unlocking Data for AI and Machine Learning&lt;/a&gt;. A post about how to handle big data efficient and easy by using data virtualization techniques.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.revolutionanalytics.com/2017/06/interactive-r-visuals-in-power-bi.html&quot;&gt;Interactive R visuals in Power BI&lt;/a&gt;. Some days ago we discussed at work, how to get interactive R visuals in Power BI. Couple of days later, this blog post by the guys at &lt;a href=&quot;http://blog.revolutionanalytics.com&quot;&gt;Revolution Analytics&lt;/a&gt;, &quot;popped&quot; up, and told us what and how to do it. Cool!&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;~ Finally&lt;/h2&gt;

&lt;p&gt;That's all for this week. I hope you enjoy what I did put together. If you have ideas for what to cover, please comment on this post or &lt;a href=&quot;mailto:niels.it.berglund@gmail.com&quot;&gt;ping&lt;/a&gt; me.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Creating R Stored Procedures in SQL Server 2016 Using sqlrutils</title>
   <link href="http://nielsberglund.com/2017/06/25/creating-r-stored-procedures-in-sql-server-2016-using-sqlrutils/"/>
   <updated>2017-06-25T17:19:20+02:00</updated>
   <id>http://nielsberglund.com/2017/06/25/creating-r-stored-procedures-in-sql-server-2016-using-sqlrutils</id>
   <content type="html">&lt;p&gt;In the &lt;a href=&quot;https://social.msdn.microsoft.com/Forums/en-US/home?forum=MicrosoftR&quot;&gt;Microsoft R Server forum&lt;/a&gt; the other day was a &lt;a href=&quot;https://social.msdn.microsoft.com/Forums/en-US/5759339f-ec8a-4c70-b05c-081d56542c84/sql-server-r-services-stored-procedures-inputs&quot;&gt;question&lt;/a&gt; about inputs to SQL Server R stored procedures, or rather about &quot;strange&quot; parameter naming, when using the &lt;strong&gt;sqlrutils&lt;/strong&gt; package. I got intrigued by the question and started &lt;del&gt;playing around with&lt;/del&gt; researching it, and this blog-post is the result. Oh, and this blog-post would never have seen the light of the day, if it hadn't been for the original poster of the question: &lt;a href=&quot;https://social.msdn.microsoft.com/profile/jd%20long/&quot;&gt;JD Long&lt;/a&gt;, thanks JD!&lt;/p&gt;

&lt;p&gt;So, what is SQL Server R stored procedures and what is &lt;strong&gt;sqlrutils&lt;/strong&gt;?&lt;/p&gt;

&lt;!--more--&gt;


&lt;p&gt;Before we answer the question above, let's do a quick recap of &lt;code&gt;sp_execute_external_script&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;&lt;code&gt;sp_execute_external_script&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;The procedure &lt;code&gt;sp_execute_external_script&lt;/code&gt; is an extended stored procedure, and it allows us to execute R scripts (and in SQL 2017 also Python) from inside SQL Server. You use it by passing it the script you want to execute as well as various parameters. Let's assume you have some R code looking like so:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Iris Dataset&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;c1&quot;&gt;# set a variable&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;multiplier&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;c1&quot;&gt;#get the iris data set as a data frame&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;iris_dataset&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iris&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='6' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='7' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;c1&quot;&gt;# grab the setosa species&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='8' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;setosa&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iris&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iris&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Species&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'setosa'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='9' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='10' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;c1&quot;&gt;# calculate mean of the Sepal.Width for setosa&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='11' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;menSepWidth&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setosa&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Sepal.Width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='12' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='13' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;c1&quot;&gt;# use the multiplier to do some &quot;stuff&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='14' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;iris_dataset&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Sepal.Length&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iris_dataset&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Sepal.Length&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;multiplier&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='15' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='16' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;c1&quot;&gt;# look at the resulting dataset &lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='17' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;View&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iris_dataset&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Sepal.Length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='18' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='19' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;c1&quot;&gt;# print out the mean&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='20' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;menSepWidth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 1:&lt;/strong&gt; &lt;em&gt;R Script&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;As you see in &lt;em&gt;Code Snippet 1&lt;/em&gt;, we:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Set the value of the &lt;code&gt;multiplier&lt;/code&gt; variable.&lt;/li&gt;
&lt;li&gt;Reads in the &lt;code&gt;iris&lt;/code&gt; data into a data frame: &lt;code&gt;iris_dataset&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Create a new data frame for the &lt;code&gt;setosa&lt;/code&gt; species.&lt;/li&gt;
&lt;li&gt;Calculate the &lt;code&gt;mean&lt;/code&gt; of the &lt;code&gt;Sepal.Width&lt;/code&gt; for &lt;code&gt;setosa&lt;/code&gt; and assigns that to a variable: &lt;code&gt;menSepWidth&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Multiply the &lt;code&gt;Sepal.Length&lt;/code&gt; property with the &lt;code&gt;multiplier&lt;/code&gt; variable.&lt;/li&gt;
&lt;li&gt;Finally output the calculated property, and print out the &lt;code&gt;menSepWidth&lt;/code&gt; variable.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Yes, yes, I know - the code is very, very simplistic, but it will still get the points across.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; If you haven't heard about the &lt;code&gt;iris&lt;/code&gt; dataset before, you can read more about it &lt;a href=&quot;https://en.wikipedia.org/wiki/Iris_flower_data_set&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;To use this script in SQL Server with &lt;code&gt;sp_execute_external_script&lt;/code&gt;, you would write something like this:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;R Script in SQL&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;DECLARE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;out_val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;exec&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sp_execute_external_script&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;      &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;language&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'R'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;      &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='6' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;        iris_dataset &amp;lt;- iris
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='7' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line='8' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;        setosa &amp;lt;- iris[iris$Species == &quot;setosa&quot;,]
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='9' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line='10' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;        menSepWidth &amp;lt;- mean(setosa$Sepal.Width)
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='11' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line='12' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;        iris_dataset$Sepal.Length &amp;lt;- iris_dataset$Sepal.Length * multiplier
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='13' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;        OutputDataSet &amp;lt;- data.frame(iris_dataset$Sepal.Length)    &lt;br/&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='14' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;      '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='15' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;      &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'@multiplier float, @menSepWidth float OUTPUT'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='16' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;      &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;multiplier&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='17' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;      &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;menSepWidth&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;out_val&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;OUTPUT&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='18' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;      &lt;span class=&quot;k&quot;&gt;WITH&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;RESULT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SETS&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SepalLength&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;&lt;br/&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='19' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line='20' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;out_val&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MeanSepWidth&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 2:&lt;/strong&gt; &lt;em&gt;The iris Script in SQL Server&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;As you see from &lt;em&gt;Code Snippet 2&lt;/em&gt;, the R script is passed in to the &lt;code&gt;@script&lt;/code&gt; parameter of &lt;code&gt;sp_execute_external_script&lt;/code&gt;. The actual script looks almost identical to what is in &lt;em&gt;Code Snippet 1&lt;/em&gt;, except for instead of the &lt;code&gt;View(iris_dataset$Sepal.Length)&lt;/code&gt;, we use &lt;code&gt;OutputDataSet&lt;/code&gt;. The &lt;code&gt;OutputDataSet&lt;/code&gt; variable is a well known variable in SQL Server R Services, and it is the default variable that will contain the data to be returned to SQL Server as a result-set upon completion of the stored procedure call. The layout of the result-set is defined in the &lt;code&gt;WITH RESULT SETS&lt;/code&gt; statement, and in &lt;em&gt;Code Snippet 2&lt;/em&gt; above we are interested in one column, of type &lt;code&gt;float&lt;/code&gt; and we name it &lt;code&gt;SepalLength&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The parameters we use are defined in the &lt;code&gt;@params&lt;/code&gt; parameter, followed by the parameters themselves. In this case &lt;code&gt;@multiplier&lt;/code&gt; which we set to 5, and &lt;code&gt;@menSepWidth&lt;/code&gt; which is &lt;code&gt;OUTPUT&lt;/code&gt;. If you have used &lt;code&gt;sp_executesql&lt;/code&gt; the parameter syntax should be familiar to you. We assign the (at the top of the script) declared &lt;code&gt;@out_val&lt;/code&gt; variable to the &lt;code&gt;@menSepWidth&lt;/code&gt; output parameter, and at the end of the script we &lt;code&gt;SELECT&lt;/code&gt; it out.&lt;/p&gt;

&lt;p&gt;When running &lt;em&gt;Code Snippet 2&lt;/em&gt;, the output will be like in the two figures below:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sqlrutils_extscript_result.png&quot; width=&quot;153&quot; height=&quot;139&quot;  &gt;
&lt;strong&gt;Figure 1:&lt;/strong&gt; &lt;em&gt;Result-set&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Figure 1&lt;/em&gt; shows the output from &lt;code&gt;OutputDataSet&lt;/code&gt;, the calculated &lt;code&gt;Sepal.Length&lt;/code&gt; column.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sqlrutils_extscript_outparam.png&quot; width=&quot;139&quot; height=&quot;48&quot;  &gt;
&lt;strong&gt;Figure 2:&lt;/strong&gt; &lt;em&gt;Output Parameter&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In &lt;em&gt;Figure 2&lt;/em&gt; we see the output parameter; &lt;code&gt;@menSepWidth&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;This is nice, being able to execute &lt;code&gt;sp_execute_external_script&lt;/code&gt;, and run our R scripts in SQL Server. However how do I operationalize this, I can't really be running these scripts every time I want to &quot;crunch&quot; some data?! Well, the answer to that is to wrap the code we see in &lt;em&gt;Code Snippet 2&lt;/em&gt; in a stored procedure, which would take the necessary parameters, and then execute &lt;code&gt;sp_execute_external_script&lt;/code&gt; inside the procedure.&lt;/p&gt;

&lt;p&gt;To make it easier to create wrapping procedures, Microsoft has an R package to help with this: &lt;strong&gt;sqlrutils&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;sqlrutils&lt;/h2&gt;

&lt;p&gt;The sqlrutils package allows R users to, from inside an R IDE of choice, put their R scripts into a T-SQL stored procedure, register that stored procedure with a database, and run the stored procedure from an R development environment.&lt;/p&gt;

&lt;p&gt;Let us see what the package does. To do that run from inside an R IDE, I am using R Tools for Visual Studio 2017 (RTVS), &lt;code&gt;help(package=&quot;sqlrutils&quot;)&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; Before you run the &lt;code&gt;help&lt;/code&gt; statement above, you may have to run: &lt;code&gt;library(sqlrutils)&lt;/code&gt;, to load the package.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;When running `help(package=&quot;sqlrutils&quot;), the httpd help server starts and you should see something like so:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sqlrutils_help.png&quot; width=&quot;550&quot; height=&quot;528&quot;  &gt;
&lt;strong&gt;Figure 3:&lt;/strong&gt; &lt;em&gt;Output from Help&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In &lt;em&gt;Figure 3&lt;/em&gt; you see the various function the package exposes. Now, let's see what we can do with it.&lt;/p&gt;

&lt;h3&gt;R Function&lt;/h3&gt;

&lt;p&gt;It is considered best practices to rewrite your R script as a function, and pass necessary parameters to the function. So we take our script and turn it into a function:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Function&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;irisFunc&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;multiplier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;#x7b;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iris_dataset&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iris&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setosa&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iris&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iris&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Species&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'setosa'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='6' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line='7' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;menSepWidth&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setosa&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Sepal.Width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='8' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line='9' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iris_dataset&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Sepal.Length&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iris_dataset&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Sepal.Length&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;multiplier&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='10' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line='11' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sepLength&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data.frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iris_dataset&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Sepal.Length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='12' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line='13' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;retList&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sepLengthData&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sepLength&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='14' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;menSepWidthValue&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;menSepWidth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='15' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line='16' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;retList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='17' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;p&quot;&gt;&amp;#x7d;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 3:&lt;/strong&gt; &lt;em&gt;Create Function&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In &lt;em&gt;Code Snippet 3&lt;/em&gt; we create the function and we:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;pass in the &lt;code&gt;multiplier&lt;/code&gt; parameter&lt;/li&gt;
&lt;li&gt;declare the &lt;code&gt;menSepWidth&lt;/code&gt; variable inside the function&lt;/li&gt;
&lt;li&gt;assign &lt;code&gt;iris_dataset$Sepal.Length&lt;/code&gt; to a data frame variable&lt;/li&gt;
&lt;li&gt;create a named list, containing the data frame as well as &lt;code&gt;menSepWidth&lt;/code&gt; variable&lt;/li&gt;
&lt;li&gt;return the list&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The function will eventually be part of the script inside &lt;code&gt;sp_execute_external_script&lt;/code&gt;, but before we go there we should define the required parameters for the procedure.&lt;/p&gt;

&lt;h3&gt;Define Parameters&lt;/h3&gt;

&lt;p&gt;In this example we have three parameters / objects:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;the &lt;code&gt;multiplier&lt;/code&gt; input parameter&lt;/li&gt;
&lt;li&gt;the &lt;code&gt;menSepWidth&lt;/code&gt; output parameter&lt;/li&gt;
&lt;li&gt;the output dataset&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;When looking at the output from the &lt;code&gt;help&lt;/code&gt; as in &lt;em&gt;Figure 3&lt;/em&gt;, we see some functions that looks like doing what we want to do:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;InputParameter&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;OutputData&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;OutputParameter&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;So to create our parameters we write some code like in &lt;em&gt;Code Snippet 4&lt;/em&gt;:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Parameters&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;c1&quot;&gt;# if the sqlrutils package is not loaded yet:
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;# library(&quot;sqlrutils&quot;)&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;w&quot;&gt;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;inParam&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;InputParameter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;multiplier&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;numeric&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;outParam&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OutputParameter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;menSepWidthValue&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;numeric&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='6' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;outputData&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OutputData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;sepLengthData&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 4:&lt;/strong&gt; &lt;em&gt;Parameter Creation&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Notice how the output dataset, and the output parameter are named as the names in the list. This is important as we will see in a little bit. You can have multiple parameters (input/output), but only one output data set. If you have multiple parameters you define them as in &lt;em&gt;Code Snippet 4&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Now when the parameters are defined, we can create the stored procedure.&lt;/p&gt;

&lt;h3&gt;Procedure Creation&lt;/h3&gt;

&lt;p&gt;To create a stored procedure we use the &lt;code&gt;StoredProcedure&lt;/code&gt; class generator, and the signature of &lt;code&gt;StoredProcedure&lt;/code&gt; looks like so:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Signature&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;StoredProcedure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;               &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;spName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;               &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;               &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filePath&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;               &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dbName&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='6' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;               &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connectionString&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='7' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;               &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;batchSeparator&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;GO&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 5:&lt;/strong&gt; &lt;em&gt;Signature for StoredProcedure Class Generator&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The arguments in the signature are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;func&lt;/code&gt; - the function name, of the function we want wrapped.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;spName&lt;/code&gt; - name for the generated stored procedure&lt;/li&gt;
&lt;li&gt;&lt;code&gt;...&lt;/code&gt; - optional input and output parameters (including output dataset)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;filePath&lt;/code&gt; - optional path to where to create and save a .sql source file.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dbName&lt;/code&gt; - optional name specifying the database to use in the script file.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;connectionString&lt;/code&gt; - optional connection string.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;batchSeparator&lt;/code&gt; - what batch separator to use.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;So, let's see what we should do to create a stored procedure based on what we have done so far (the code snippet below includes the parameter definitions from *Code Snippet 4):&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Stored Procedure&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;inParam&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;InputParameter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;multiplier&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;numeric&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;outParam&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OutputParameter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;menSepWidthValue&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;numeric&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;outputData&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OutputData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;sepLengthData&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;irisProc&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;StoredProcedure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;irisFunc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='6' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;pr_IrisProc&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='7' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                      &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inParam&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='8' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                      &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;outputData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='9' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                      &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;outParam&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='10' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                      &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filePath&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;C:\Temp&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='11' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 6:&lt;/strong&gt; &lt;em&gt;Generate Stored Procedure from R Function&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In &lt;em&gt;Code Snippet 6&lt;/em&gt; we:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;define the function to use is the function assigned to the &lt;code&gt;irisFunc&lt;/code&gt; variable from &lt;em&gt;Code Snippet 3&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;say that we want the created procedure to be named &lt;code&gt;pr_IrisProc&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;define the input and output parameters though the variables we have created. If you have defined more parameters (as we spoke about above), you add them to the &lt;code&gt;StoredProcedure&lt;/code&gt; call.&lt;/li&gt;
&lt;li&gt;set the file path where we want the source files to be created.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;We skip the rest of the arguments, and when we run the code in &lt;em&gt;Code Snippet 6&lt;/em&gt;, the source file looks like so:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Generated Procedure&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;IF&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OBJECT_ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'pr_IrisProc'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;DROP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;PROCEDURE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pr_IrisProc&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;GO&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;PROCEDURE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pr_IrisProc&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parallel_outer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='6' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;multiplier_outer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='7' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;menSepWidthValue_outer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;output&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='8' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='9' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;k&quot;&gt;BEGIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TRY&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='10' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;k&quot;&gt;exec&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sp_execute_external_script&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='11' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;      &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;language&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'R'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='12' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;      &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='13' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;        irisFunc &amp;lt;- function (multiplier)
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='14' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;        &amp;#x7b;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='15' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;            iris_dataset &amp;lt;- iris
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='16' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;            setosa &amp;lt;- iris[iris$Species == &quot;setosa&quot;, ]
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='17' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;            menSepWidth &amp;lt;- mean(setosa$Sepal.Width)
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='18' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;            iris_dataset$Sepal.Length &amp;lt;- iris_dataset$Sepal.Length *
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='19' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                multiplier
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='20' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;            sepLength &amp;lt;- data.frame(iris_dataset$Sepal.Length)
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='21' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;            retList &amp;lt;- list(sepLengthData = sepLength, menSepWidthValue = menSepWidth)
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='22' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;            return(retList)
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='23' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;        &amp;#x7d;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='24' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;        result &amp;lt;- irisFunc(multiplier = multiplier)
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='25' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;        if (is.list(result)) &amp;#x7b;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='26' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;          OutputDataSet &amp;lt;- result$sepLengthData
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='27' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;          menSepWidthValue &amp;lt;- result$menSepWidthValue
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='28' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;        &amp;#x7d; else stop(&quot;the R function must return a list&quot;)
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='29' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;      '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='30' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;      &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parallel&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parallel_outer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='31' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;      &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'@multiplier float, @menSepWidthValue float output'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='32' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;      &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;multiplier&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;multiplier_outer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='33' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;      &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;menSepWidthValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;menSepWidthValue_outer&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;output&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='34' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;k&quot;&gt;END&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TRY&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='35' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;k&quot;&gt;BEGIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CATCH&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='36' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;n&quot;&gt;THROW&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='37' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;k&quot;&gt;END&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CATCH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='38' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;GO&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 7:&lt;/strong&gt; &lt;em&gt;Generated Stored Procedure&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;That looks OK, a couple of things to point out:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Parameter names are appended with &lt;em&gt;_outer&lt;/em&gt;. This is what &lt;a href=&quot;https://social.msdn.microsoft.com/profile/jd%20long/&quot;&gt;JD Long&lt;/a&gt; asked about; where comes that from? It seems to be the convention to do that, to separate the parameters for &lt;code&gt;sp_execute_external_script&lt;/code&gt; from the parameters for the &lt;em&gt;outer&lt;/em&gt; procedure. Hence the &lt;em&gt;_outer&lt;/em&gt; in the name.&lt;/li&gt;
&lt;li&gt;What's this &lt;code&gt;@parallel_outer&lt;/code&gt; parameter, we did not define it anywhere? In &lt;code&gt;sp_execute_external_script&lt;/code&gt; you have the ability to define that you wish the execution of the R script should happen in parallel, and &lt;code&gt;@parallel&lt;/code&gt; is an existing parameter on &lt;code&gt;sp_execute_external_script&lt;/code&gt;. So by default, this parameter is always created (and defaulted to 0).&lt;/li&gt;
&lt;li&gt;We then see the function definition as part of the &lt;code&gt;@script&lt;/code&gt; parameter, together with generated code to execute and retrieve the results. This is where it is important that you return a named list from the function, especially if you have more than one output parameter (including the output dataset). The names in the list should be the same as you set in your parameter definitions.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;You can now take the source file and deploy the procedure to a database of your choice. Then you execute the procedure as so:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Execute Proc&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;DECLARE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;out&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;EXEC&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pr_IrisProc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parallel_outer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                  &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;multiplier_outer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                  &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;menSepWidthValue_outer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;out&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;OUT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 8:&lt;/strong&gt; &lt;em&gt;Execution of Generated Procedure&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;When executing, you should get the same result as you see in &lt;em&gt;Figure 1&lt;/em&gt; and &lt;em&gt;Figure 2&lt;/em&gt;.&lt;/p&gt;

&lt;h3&gt;Deploying from R&lt;/h3&gt;

&lt;p&gt;Above we deployed the created procedure by running the script from SQL Server Management Studio, on the database we wanted to deploy to. You can also deploy straight from R, by using &lt;code&gt;registerStoredProcedure&lt;/code&gt;. The signature of &lt;code&gt;registerStoredProcedure&lt;/code&gt; looks like in &lt;em&gt;Code Snippet 8&lt;/em&gt;:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Signature&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;registerStoredProcedure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sqlSP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                        &lt;span class=&quot;n&quot;&gt;connectionString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 8:&lt;/strong&gt; &lt;em&gt;Signature of registerStoredProcedure&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;We see in &lt;em&gt;Code Snippet 8&lt;/em&gt; how &lt;code&gt;registerStoredProcedure&lt;/code&gt; takes the generated stored procedure object (created by &lt;code&gt;StoredProcedure&lt;/code&gt;), and an optional connection string. It is optional as the connection string can be defined in &lt;code&gt;StoredProcedure&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If we want to deploy to SQL Server directly the code looks like so:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;tile: &quot;Deploy&quot;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;conStr&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;paste0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Driver=&amp;#x7b;ODBC Driver 13 for SQL Server&amp;#x7d;;Server=.;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                 &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Database=RTest;uid=sa;pwd=secretpassword;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;registerStoredProcedure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;irisProc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conStr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 9:&lt;/strong&gt; &lt;em&gt;Deploying from R&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In &lt;em&gt;Code Snippet 9&lt;/em&gt;, we continue from &lt;em&gt;Code Snippet 6&lt;/em&gt;, and we have created the stored procedure object &lt;code&gt;irisProc&lt;/code&gt;. We create a connection string, and pass &lt;code&gt;irisProc&lt;/code&gt; and the connection string to &lt;code&gt;registerStoredProcedure&lt;/code&gt;. After executing the code in &lt;em&gt;Code Snippet 9&lt;/em&gt;, you should see the procedure in the database.&lt;/p&gt;

&lt;p&gt;As you know, by using &lt;code&gt;sp_execute_external_script&lt;/code&gt;, we can now in SQL Server 2016 and 2017 execute R scripts (and in SQL 2017 also Python) from inside SQL Server. &lt;code&gt;sp_execute_external_script&lt;/code&gt; is a SQL Server extended stored procedure and you pass in the script to execute as well as parameter info to the procedure.&lt;/p&gt;

&lt;h2&gt;~ Finally&lt;/h2&gt;

&lt;p&gt;If you have comments, questions etc., please comment on this post or &lt;a href=&quot;mailto:niels.it.berglund@gmail.com&quot;&gt;ping&lt;/a&gt; me.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Interesting Stuff - Week 24</title>
   <link href="http://nielsberglund.com/2017/06/18/interesting-stuff-week-24/"/>
   <updated>2017-06-18T09:26:42+02:00</updated>
   <id>http://nielsberglund.com/2017/06/18/interesting-stuff---week-24</id>
   <content type="html">&lt;p&gt;Throughout the week, I read a lot of blog-posts, articles, etc., that has to do with things that interest me&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;data science&lt;/li&gt;
&lt;li&gt;data in general&lt;/li&gt;
&lt;li&gt;distributed computing&lt;/li&gt;
&lt;li&gt;SQL Server&lt;/li&gt;
&lt;li&gt;transactions (both db as well as non db)&lt;/li&gt;
&lt;li&gt;and other &quot;stuff&quot;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This is the &quot;roundup&quot; of the posts that has been most interesting to me, for the week just gone by.&lt;/p&gt;

&lt;!--more--&gt;


&lt;h2&gt;SQL Server&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://sqlblog.com/blogs/adam_machanic/archive/2017/06/14/the-sql-hall-of-shame.aspx&quot;&gt;The SQL Hall of Shame&lt;/a&gt;. My old friend Adam Machanic asked for input from the SQL Server community, of &quot;useless&quot; features of SQL Server. This blog-post is the result. Some of the &quot;features&quot; submitted, I agree wholeheartedly with, others not so much. Among the ones I question are SQLCLR, as well as in-memory (Adam is on my side with those two).&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://channel9.msdn.com/Shows/Data-Exposed/TPC-H-Benchmarking-with-SQL-Server-on-Linux&quot;&gt;TPC-H Benchmarking with SQL Server on Linux&lt;/a&gt;. A Channel 9 presentation, where &lt;a href=&quot;https://blogs.msdn.microsoft.com/slavao&quot;&gt;Slava Oks&lt;/a&gt; and my compatriot Tobias Ternstrom talks about how they have managed to get awesome performance out of SQL Server on Linux.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Data Science&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blogs.technet.microsoft.com/machinelearning/2017/06/15/data-science-walkthrough-with-sql-server-2017-and-microsoft-machine-learning-services/&quot;&gt;Data Science Walkthrough with SQL Server 2017 and Microsoft Machine Learning Services&lt;/a&gt;. Back in late April (this year - 2017), when SQL Server 2017 CTP 2.0 was introduced, I wrote a &lt;a href=&quot;/2017/04/20/sql-server-2017-python-executing-from-sql/&quot;&gt;short post&lt;/a&gt; about running Python in SQL Server 2017. This post, is a complete walk through, how Python can be used in SQL Server 2017.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.revolutionanalytics.com/2017/06/syberia.html&quot;&gt;Syberia: A development framework for R code in production&lt;/a&gt;. The guys at &lt;a href=&quot;http://blog.revolutionanalytics.com&quot;&gt;Revolution Analytics&lt;/a&gt; posts about a development framework for R: &lt;strong&gt;&lt;a href=&quot;http://syberia.io/&quot;&gt;Syberia&lt;/a&gt;&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://tomaztsql.wordpress.com/2017/06/14/installing-r-packages-with-rxinstallpackages-in-microsoft-r-server/&quot;&gt;Installing R packages with rxInstallPackages in Microsoft R Server&lt;/a&gt;. &lt;a href=&quot;https://tomaztsql.wordpress.com&quot;&gt;Tomaz&lt;/a&gt; blogs about new functionality in &lt;a href=&quot;https://msdn.microsoft.com/en-us/microsoft-r/microsoftml-introduction&quot;&gt;MicrosoftML&lt;/a&gt;, to help with installing new packages in SQL Server R Services, as well as Microsoft R Server.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.revolutionanalytics.com/2017/06/real-time-predictions.html&quot;&gt;Demo: Real-Time Predictions with Microsoft R Server&lt;/a&gt;. &lt;a href=&quot;https://twitter.com/revodavid&quot;&gt;David&lt;/a&gt; from &lt;a href=&quot;http://blog.revolutionanalytics.com&quot;&gt;Revolution Analytics&lt;/a&gt; blogs about a presentation he did at the &lt;a href=&quot;http://www.rinfinance.com/&quot;&gt;R/Finance 2017&lt;/a&gt; conference in Chicago in May. The presentation was about predicting fraud at a rate of 1 million transactions a second, using Microsoft R Server. The post links to a video of the presentation, and it also has links to the code used. It is well worth having a look at!&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;SQL Server R Services&lt;/h2&gt;

&lt;p&gt;For you who wonder about my &lt;a href=&quot;/2017/03/04/microsoft-sql-server-2016-r-services-installation/&quot;&gt;SQL Server R Services&lt;/a&gt; series, I should be able to publish episode VII this coming week sometime.&lt;/p&gt;

&lt;h2&gt;~ Finally&lt;/h2&gt;

&lt;p&gt;That's all for this week. I hope you enjoy what I did put together. If you have ideas for what to cover, please comment on this post or &lt;a href=&quot;mailto:niels.it.berglund@gmail.com&quot;&gt;ping&lt;/a&gt; me.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Interesting Stuff - Week 23</title>
   <link href="http://nielsberglund.com/2017/06/11/interesting-stuff-week-23/"/>
   <updated>2017-06-11T19:49:02+02:00</updated>
   <id>http://nielsberglund.com/2017/06/11/interesting-stuff---week-23</id>
   <content type="html">&lt;p&gt;Throughout the week, I read a lot of blog-posts, articles, etc., that has to do with things that interest me&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;data science&lt;/li&gt;
&lt;li&gt;data in general&lt;/li&gt;
&lt;li&gt;distributed computing&lt;/li&gt;
&lt;li&gt;SQL Server&lt;/li&gt;
&lt;li&gt;transactions (both db as well as non db)&lt;/li&gt;
&lt;li&gt;and other &quot;stuff&quot;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This is the &quot;roundup&quot; of the posts that has been most interesting to me, for the week just gone by.&lt;/p&gt;

&lt;!--more--&gt;


&lt;p&gt;For one reason or another I have not found that much interesting articles/posts this week. A reason for this can be that I have done some traveling the last week and not had time to read that much. Tuesday I was at the &lt;a href=&quot;https://www.microsoft.com/middleeast/azure/cloud-society/engage-data-science-roadshow.aspx&quot;&gt;Microsoft Cloud Society - Data Science Roadshow&lt;/a&gt; where I did a talk about Azure Machine Learning. It was fun doing some conference talks again, and I may do some more if there is anything interesting coming up.&lt;/p&gt;

&lt;p&gt;Anyway, a couple of things caught my eye the week past, so let's get to it.&lt;/p&gt;

&lt;h2&gt;SQL Server&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://sql-sasquatch.blogspot.co.za/2017/06/oledb-waits-in-sqlserver-checktable.html&quot;&gt;OLEDB waits in #SQLServer checktable Part I - Disappearing Act&lt;/a&gt;. This is the first &quot;episode&quot; in a series of blogposts by &lt;a href=&quot;https://twitter.com/sqL_handLe&quot;&gt;Lonny Niederstadt&lt;/a&gt; about the OLEDB wait type during checktable operations. The posts are really, really worth reading if you are interested in deep level SQL Server &quot;stuff&quot;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.sqlskills.com/blogs/paul/increased-sos_scheduler_yield-waits-on-virtual-machines/&quot;&gt;Increased SOS_SCHEDULER_YIELD waits on virtual machines&lt;/a&gt;. More about waits. This time by Paul Randal from &lt;a href=&quot;https://www.sqlskills.com&quot;&gt;SQLskills&lt;/a&gt;, and wait stats when SQL Server is running in a virtual machine.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Distributed Computing&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.infoq.com/presentations/distributed-systems-theory&quot;&gt;Distributed Systems Theory for Practical Engineers&lt;/a&gt;. An &lt;a href=&quot;https://www.infoq.com/&quot;&gt;InfoQ&lt;/a&gt; presentation by Alvaro Videla. In this presentation Alvaro discusses asynchronous vs. synchronous distributed systems, message passing vs shared memory communication, failure detectors and leader election problems, etc. Very Cool!!!&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.infoq.com/presentations/twitter-notifications&quot;&gt;Real-time &amp;amp; Personalized Notifications @Twitter&lt;/a&gt;. Another &lt;a href=&quot;https://www.infoq.com/&quot;&gt;InfoQ&lt;/a&gt; presentation about the hybrid push/pull-based architecture adopted by the Twitter Notification platform.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Data Science&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blogs.technet.microsoft.com/machinelearning/2017/06/06/introducing-the-new-data-science-virtual-machine-on-windows-server-2016/&quot;&gt;Introducing the new Data Science Virtual Machine on Windows Server 2016&lt;/a&gt;. A blog-post introducing the Microsoft Azure Data Science Virtual Machine for Windows server 2016. There are quite a fee new interesting features in this release; Docker container support, unified support for Deep Learning on GPU or CPU-only based virtual machines, etc. Quite a lot of new exciting things to play with.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://101.datascience.community/2017/06/06/deep-learning-research-paper-lists-for-summer-2017&quot;&gt;DEEP LEARNING RESEARCH PAPER LISTS FOR SUMMER 2017&lt;/a&gt;. In the &lt;a href=&quot;http://101.datascience.community/2017/06/06/deep-learning-research-paper-lists-for-summer-2017&quot;&gt;roundup last week&lt;/a&gt; I covered a post with a list of Data Science research papers. This post is similar, but for papers about deep learning.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blogs.msdn.microsoft.com/tsmatsuz/2017/06/08/azure-data-lake-r-extension/&quot;&gt;Analyze your data in Azure Data Lake with R (R extension)&lt;/a&gt;. A blog-post about how you can run R code on Azure Data Lake Analytics in the cloud, so you don't have to move the data to somewhere locally.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;SQL Server R Services&lt;/h2&gt;

&lt;p&gt;I can see the light in the end of the tunnel and I hope to have the next installation of my &lt;a href=&quot;/2017/03/04/microsoft-sql-server-2016-r-services-installation/&quot;&gt;SQL Server R Services&lt;/a&gt; series ready to be published soon:ish.&lt;/p&gt;

&lt;h2&gt;~ Finally&lt;/h2&gt;

&lt;p&gt;That's all for this week. I hope you enjoy what I did put together. If you have ideas for what to cover, please comment on this post or &lt;a href=&quot;mailto:niels.it.berglund@gmail.com&quot;&gt;ping&lt;/a&gt; me.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Interesting Stuff - Week 22</title>
   <link href="http://nielsberglund.com/2017/06/04/interesting-stuff-week-22/"/>
   <updated>2017-06-04T20:13:28+02:00</updated>
   <id>http://nielsberglund.com/2017/06/04/interesting-stuff---week-22</id>
   <content type="html">&lt;p&gt;Throughout the week, I read a lot of blog-posts, articles, etc., that has to do with things that interest me&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;data science&lt;/li&gt;
&lt;li&gt;data in general&lt;/li&gt;
&lt;li&gt;distributed computing&lt;/li&gt;
&lt;li&gt;SQL Server&lt;/li&gt;
&lt;li&gt;transactions (both db as well as non db)&lt;/li&gt;
&lt;li&gt;and other &quot;stuff&quot;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This is the &quot;roundup&quot; of the posts that has been most interesting to me, for the week just gone by.&lt;/p&gt;

&lt;!--more--&gt;


&lt;p&gt;As it was the case last week, my reading has suffered due to work as well as due to &quot;prep&quot; for the &lt;a href=&quot;https://www.microsoft.com/middleeast/azure/cloud-society/engage-data-science-roadshow.aspx&quot;&gt;Microsoft Cloud Society - Data Science Roadshow&lt;/a&gt;, at which I will speak on Tuesday (June 6) next week.&lt;/p&gt;

&lt;h2&gt;SQL Server&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blogs.msdn.microsoft.com/sqlserverstorageengine/2017/05/29/use-with-clause-in-openjson-to-improve-parsing-performance/&quot;&gt;Use WITH clause in OPENJSON to improve parsing performance&lt;/a&gt;. Jovan Popovic (@JovanPop_MSFT), who is the JSON guru on the SQL Server team, has an interesting post how to improve performance of &lt;code&gt;OPENJSON&lt;/code&gt; by specifying what fields should be extracted from input JSON, using the &lt;code&gt;WITH&lt;/code&gt; clause.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Distributed Computing&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://joeduffyblog.com/2017/06/01/an-update-on-me-pulumi/&quot;&gt;A Brief Update on Me (in a Word, Pulumi)&lt;/a&gt;. Well, me in the blog-title is obviously not me as in myself, but Joe Duffy - previously (among other things) &quot;Director of Engineering for Microsoft's Compiler and Language Group&quot; e.g. he knows a thing or two about &quot;stuff&quot;. He has since resigned from Microsoft and started [Pulumi]. The post was his first in a while, and as good it is to hear from him, it is infuriating to not know what Pulumi is all about :).&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://proto.actor/&quot;&gt;proto actor&lt;/a&gt;. Roger Johansson, who is the father of &lt;a href=&quot;http://getakka.net/&quot;&gt;Akka.Net&lt;/a&gt; has gone and created another actor framework: proto.actor. It sounds extremely interesting, being sort of a mix between Akka.Net and &lt;a href=&quot;https://dotnet.github.io/orleans/&quot;&gt;Microsoft Orleans&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Streaming&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://data-artisans.com/blog/apache-flink-1-3-0-evolution-stream-processing&quot;&gt;Apache Flink® 1.3.0 and the Evolution of Stream Processing with Flink&lt;/a&gt;. Apache Flink has just released version 1.3. This post is a summary of the evolution of Flink.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://data-artisans.com/blog/blink-flink-alibaba-search&quot;&gt;Blink: How Alibaba Uses Apache Flink&lt;/a&gt;. Anoter post about Apache Flink. This is about how the worlds largest e-commerce retailer, &lt;a href=&quot;https://www.alibaba.com/&quot;&gt;Alibaba&lt;/a&gt;, utilizes Flink.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Data Science&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.infoq.com/presentations/comparison-deep-learning-frameworks&quot;&gt;Comparing Deep Learning Frameworks&lt;/a&gt;.  An &lt;a href=&quot;https://www.infoq.com/&quot;&gt;InfoQ&lt;/a&gt; presentation of different types of deep learning frameworks, specifically about open source neural networks.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.microsoft.com/en-us/cognitive-toolkit/blog/2017/06/microsofts-high-performance-open-source-deep-learning-toolkit-now-generally-available/&quot;&gt;Microsoft’s high-performance, open source, deep learning toolkit is now generally available&lt;/a&gt;. Microsoft Cognitive Toolkit version 2.0 is now in full release with general availability. Some really interesting new features as well as performance benchmarks.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.revolutionanalytics.com/2017/05/watch-rfinance-2017.html&quot;&gt;Watch presentations from R/Finance 2017&lt;/a&gt;. Blog-post from &lt;a href=&quot;http://blog.revolutionanalytics.com&quot;&gt;Revolution Analytics&lt;/a&gt; listing interesting talks from the [R/Finance 2017] conference earlier this year.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://101.datascience.community/2017/06/01/5-datascience-research-papers-summer-2017&quot;&gt;5 DATA SCIENCE RESEARCH PAPERS TO READ IN SUMMER 2017&lt;/a&gt;. A blog-post from &lt;a href=&quot;http://101.datascience.community/&quot;&gt;Data Science 101&lt;/a&gt; listing some interesting Data Science papers to read.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;SQL Server R Services&lt;/h2&gt;

&lt;p&gt;As was the case last week, I am struggling with getting out the next installation of my &lt;a href=&quot;/2017/03/04/microsoft-sql-server-2016-r-services-installation/&quot;&gt;SQL Server R Services&lt;/a&gt; series. It is slow going but I hope to have something out within the next two weeks.&lt;/p&gt;

&lt;h2&gt;~ Finally&lt;/h2&gt;

&lt;p&gt;That's all for this week. I hope you enjoy what I did put together. If you have ideas for what to cover, please comment on this post or &lt;a href=&quot;mailto:niels.it.berglund@gmail.com&quot;&gt;ping&lt;/a&gt; me.&lt;/p&gt;

&lt;p&gt;Oh, and if you attend the &lt;a href=&quot;https://www.microsoft.com/middleeast/azure/cloud-society/engage-data-science-roadshow.aspx&quot;&gt;Microsoft Cloud Society - Data Science Roadshow&lt;/a&gt; conference in Johannesburg, please come by and say Hi!&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Interesting Stuff - Week 21</title>
   <link href="http://nielsberglund.com/2017/05/28/interesting-stuff-week-21/"/>
   <updated>2017-05-28T20:00:13+02:00</updated>
   <id>http://nielsberglund.com/2017/05/28/interesting-stuff---week-21</id>
   <content type="html">&lt;p&gt;Throughout the week, I read a lot of blog-posts, articles, etc., that has to do with things that interest me&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;data science&lt;/li&gt;
&lt;li&gt;data in general&lt;/li&gt;
&lt;li&gt;distributed computing&lt;/li&gt;
&lt;li&gt;SQL Server&lt;/li&gt;
&lt;li&gt;transactions (both db as well as non db)&lt;/li&gt;
&lt;li&gt;and other &quot;stuff&quot;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This is the &quot;roundup&quot; of the posts that has been most interesting to me, for the week just gone by.&lt;/p&gt;

&lt;!--more--&gt;


&lt;p&gt;This week I do not have much at all. Mostly due to me not having had time to read that much, as work has &quot;reared its ugly head&quot;. I have also been (still am) &quot;prepping&quot; for the &lt;a href=&quot;https://www.microsoft.com/middleeast/azure/cloud-society/engage-data-science-roadshow.aspx&quot;&gt;Microsoft Cloud Society - Data Science Roadshow&lt;/a&gt;, where I will be speaking in Johannesburg June 6, about Microsoft Azure Machine Learning.&lt;/p&gt;

&lt;p&gt;Having said that, let's see what we have in store for this week.&lt;/p&gt;

&lt;h2&gt;SQL Server&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blogs.msdn.microsoft.com/bobsql/2017/05/23/how-it-works-sql-server-deadlock-trace-flag-1222-output/&quot;&gt;How It Works: SQL Server Deadlock Trace Flag 1222 Output&lt;/a&gt;. Bob Dorr posts about deadlocks, and how trace flag 1222, can trip you up!&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://sqlonice.com/scheduler-stories-oledb-the-external-wait-that-isnt-preemptive/&quot;&gt;Scheduler stories: OLEDB, the external wait that isn’t preemptive&lt;/a&gt;. &lt;a href=&quot;http://sqlonice.com/&quot;&gt;Ewald&lt;/a&gt; continues his deep-dive into SQL Server' internals &quot;murky water&quot;, and looks at preemptive waits.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Data Science&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blogs.technet.microsoft.com/machinelearning/2017/05/23/serving-ai-with-data-recap-of-the-microsoft-ai-immersion-workshop/&quot;&gt;“Serving AI with Data” – Recap of the Microsoft AI Immersion Workshop&lt;/a&gt;. &lt;strong&gt;AI&lt;/strong&gt; is becoming the new buzz-word in the data science space, and in the beginning of May, Microsoft held an *AI Immersion Workshop. The post is a short summary of the workshop, and in it you can find key resources from the workshop.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.infoq.com/news/2017/05/facebook-machine-translation&quot;&gt;Facebook Publishes New Neural Machine Translation Algorithm&lt;/a&gt;. A very interesting article in &lt;a href=&quot;https://www.infoq.com/&quot;&gt;InfoQ&lt;/a&gt; about a new approach for neural machine translation (NMT) introduced by Facebook. Very, very interesting!&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.revolutionanalytics.com/2017/05/microsoft-r-open-340-now-available.html&quot;&gt;Microsoft R Open 3.4.0 now available&lt;/a&gt;. My buddies over at &lt;a href=&quot;http://blog.revolutionanalytics.com&quot;&gt;Revolution Analytics&lt;/a&gt; posts about the release of Microsoft R Open 3.4.0.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;SQL Server R Services&lt;/h2&gt;

&lt;p&gt;Due to my workload at the moment, I am struggling with getting out the next installation of my &lt;a href=&quot;/2017/03/04/microsoft-sql-server-2016-r-services-installation/&quot;&gt;SQL Server R Services&lt;/a&gt; series. It is slow going but I hope to have something out within the next two weeks.&lt;/p&gt;

&lt;h2&gt;~ Finally&lt;/h2&gt;

&lt;p&gt;That's all for this week. I hope you enjoy what I did put together. If you have ideas for what to cover, please comment on this post or &lt;a href=&quot;mailto:niels.it.berglund@gmail.com&quot;&gt;ping&lt;/a&gt; me.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Interesting Stuff - Week 20</title>
   <link href="http://nielsberglund.com/2017/05/21/interesting-stuff-week-20/"/>
   <updated>2017-05-21T20:08:21+02:00</updated>
   <id>http://nielsberglund.com/2017/05/21/interesting-stuff---week-20</id>
   <content type="html">&lt;p&gt;Throughout the week, I read a lot of blog-posts, articles, etc., that has to do with things that interest me&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;data science&lt;/li&gt;
&lt;li&gt;data in general&lt;/li&gt;
&lt;li&gt;distributed computing&lt;/li&gt;
&lt;li&gt;SQL Server&lt;/li&gt;
&lt;li&gt;transactions (both db as well as non db)&lt;/li&gt;
&lt;li&gt;and other &quot;stuff&quot;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This is the &quot;roundup&quot; of the posts that has been most interesting to me, for the week just gone by.&lt;/p&gt;

&lt;!--more--&gt;


&lt;h2&gt;SQL Server&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blogs.technet.microsoft.com/dataplatforminsider/2017/05/17/sql-server-2017-ctp-2-1-now-available/&quot;&gt;SQL Server 2017 CTP 2.1 now available&lt;/a&gt;. The title says it all. CTP 2.1 of SQL Server 2017 has been released.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blogs.technet.microsoft.com/dataplatforminsider/2017/05/17/try-new-sql-server-command-line-tools-to-generate-t-sql-scripts-and-monitor-dynamic-management-views/&quot;&gt;Try new SQL Server command line tools to generate T-SQL scripts and monitor Dynamic Management Views&lt;/a&gt;. Microsoft has released for public preview two new command line tools for SQL Server:

&lt;ul&gt;
&lt;li&gt;mssql-scripter: generate &lt;code&gt;CREATE&lt;/code&gt; and &lt;code&gt;INSERT&lt;/code&gt; T-SQL scripts for database objects in SQL Server, Azure SQL DB, and Azure SQL DW from the command line.&lt;/li&gt;
&lt;li&gt;DBFS: exposing live data from SQL Server Dynamic Management Views (DMVs) as virtual files in a virtual directory on Linux operating systems&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Streaming&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://data-artisans.com/blog/official-docker-images-apache-flink&quot;&gt;Introducing Official Docker Images for Apache Flink&lt;/a&gt;. From Flink version 1.2.1, Flink will have an official Docker image. This should make it a lot easier to get up and running with Apache Flink.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.infoq.com/news/2017/05/Confluent-Cloud-Kafka-AWS&quot;&gt;Confluent Cloud, Apache Kafka as a Service in AWS&lt;/a&gt;. Somewhat in the same vein as the Apache Flink above, this is about deploying Kafka based solutions in Amazon Web Services through Confluent Cloud. The really interesting bit for me is that they are planning to do this for Microsoft Azure as well.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Cloud&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://techcrunch.com/2017/05/10/with-cosmos-db-microsoft-wants-to-build-one-database-to-rule-them-all/&quot;&gt;With Cosmos DB, Microsoft wants to build one database to rule them all&lt;/a&gt;. A Microsoft Build 2017, Microsoft introduced the successor to Document DB, Azure Cosmos DB. This post is Tech Crunch's take on Cosmos DB.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://azure.microsoft.com/en-us/blog/a-technical-overview-of-azure-cosmos-db&quot;&gt;A technical overview of Azure Cosmos DB&lt;/a&gt;. More about Azure Cosmos DB. This post drills down in the tech behind Cosmos DB. It is very, very interesting!&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Data Science&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.revolutionanalytics.com/2017/05/r-and-python-support-now-built-in-to-visual-studio-2017.html&quot;&gt;R and Python support now built in to Visual Studio 2017&lt;/a&gt;. The latest version of Visual Studio 2017 now has built-in support for programming in R and Python! It is exposed as a &quot;Data Science Workload&quot;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.revolutionanalytics.com/2017/05/r-in-financial-services-presentation.html&quot;&gt;R in Financial Services: Challenges and Opportunities&lt;/a&gt;. Theis blog-post from the guys at &lt;a href=&quot;http://blog.revolutionanalytics.com&quot;&gt;Revolution Analytics&lt;/a&gt; links to a presentation about R in financial services from the New York R Conference earlier this year. I found the presentation really good, and picked up some useful &quot;stuff&quot;.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Shameless Self Promotion&lt;/h2&gt;

&lt;p&gt;I've been &quot;sort of&quot; productive, and managed to get two blog-posts out there (not bad if I may say so myself):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/2017/05/16/microsoft-sql-server-r-services-internals-vi/&quot;&gt;Microsoft SQL Server R Services - Internals VI&lt;/a&gt;. In this internals post I drill down, and look at the directories being created when executing an external script in SQL Serer R Services.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2017/05/20/facebook-prophet-and-microsoft-r-server/&quot;&gt;Facebook Prophet and Microsoft R Server&lt;/a&gt;. Earlier in the week there was a question on the Microsoft R Server forum, about using Facebook Prophet (time series analysis and prediction) with Microsoft R Server and SQL Server R Services. I found the question interesting and decided to test it out. This post is the result of the testing I did.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;~ Finally&lt;/h2&gt;

&lt;p&gt;That's all for this week. I hope you enjoy what I did put together. If you have ideas for what to cover, please comment on this post or &lt;a href=&quot;mailto:niels.it.berglund@gmail.com&quot;&gt;ping&lt;/a&gt; me.&lt;/p&gt;
</content>
 </entry>
 

</feed>
