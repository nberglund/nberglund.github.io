<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>MANAGED DATA</title>
 <link href="http://nielsberglund.com/atom.xml" rel="self"/>
 <link href="http://nielsberglund.com/"/>
 <updated>2017-08-06T19:43:44+02:00</updated>
 <id>http://nielsberglund.com</id>
 <author>
   <name>Niels Berglund</name>
   <email></email>
 </author>

 
 <entry>
   <title>Interesting Stuff - Week 31</title>
   <link href="http://nielsberglund.com/2017/08/06/interesting-stuff-week-31/"/>
   <updated>2017-08-06T19:36:25+02:00</updated>
   <id>http://nielsberglund.com/2017/08/06/interesting-stuff---week-31</id>
   <content type="html">&lt;p&gt;Throughout the week, I read a lot of blog-posts, articles, etc., that has to do with things that interest me:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;data science&lt;/li&gt;
&lt;li&gt;data in general&lt;/li&gt;
&lt;li&gt;distributed computing&lt;/li&gt;
&lt;li&gt;SQL Server&lt;/li&gt;
&lt;li&gt;transactions (both db as well as non db)&lt;/li&gt;
&lt;li&gt;and other &quot;stuff&quot;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This is the &quot;roundup&quot; of the posts that has been most interesting to me, for the week just gone by.&lt;/p&gt;

&lt;!--more--&gt;


&lt;h2&gt;SQL Server&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://sqlonice.com/footsteps-of-cooperative-wait/&quot;&gt;In the footsteps of a cooperative wait&lt;/a&gt;. &lt;a href=&quot;http://sqlonice.com/&quot;&gt;Ewald&lt;/a&gt; is continuing on his journey of threads and tasks. This week it is about context switching and the cooperative wait.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;.NET&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://mattwarren.org/2017/08/02/A-look-at-the-internals-of-boxing-in-the-CLR/&quot;&gt;A look at the internals of 'boxing' in the CLR&lt;/a&gt;. &lt;a href=&quot;http://mattwarren.org&quot;&gt;Matthew Warren&lt;/a&gt; drills down into the mysteries of &quot;boxing&quot; in .NET. If you are a .NET developer then Matthew's blog is a must read!&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Distributed Computing&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.infoq.com/presentations/big-data-serverless-aws-lambda&quot;&gt;Serverless Design Patterns with AWS Lambda: Big Data with Little Effort&lt;/a&gt;. An &lt;a href=&quot;https://www.infoq.com/&quot;&gt;InfoQ&lt;/a&gt; presentation by Tim Wagner about how to do Big Data on a server-less architecture.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.infoq.com/presentations/microservices-data-centric&quot;&gt;Managing Data in Microservices&lt;/a&gt;. Another &lt;a href=&quot;https://www.infoq.com/&quot;&gt;InfoQ&lt;/a&gt; presentation. This is about how to handle data in microservices. I found this presentation extremely informative.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Programming&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://spectrum.ieee.org/computing/software/the-2017-top-programming-languages&quot;&gt;The 2017 Top Programming Languages&lt;/a&gt;. &lt;a href=&quot;http://spectrum.ieee.org&quot;&gt;IEEE Spectrum's&lt;/a&gt; annual roundup of programming languages. Interesting to see how Python is now at first place.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Data Science&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/towards-data-science/data-science-simplified-simple-linear-regression-models-3a97811a6a3d&quot;&gt;Data Science Simplified Part 4: Simple Linear Regression Models&lt;/a&gt;. Part 4 of a series trying to simplify data science. This &quot;episode&quot; tackles linear regression.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.revolutionanalytics.com/2017/07/h2o-hdinsight.html&quot;&gt;How to use H2O with R on HDInsight&lt;/a&gt;. &lt;a href=&quot;https://www.h2o.ai/&quot;&gt;H2O&lt;/a&gt; is a leading open source deep learning platform. In this blog-post, David from &lt;a href=&quot;http://blog.revolutionanalytics.com&quot;&gt;Revolution Analytics&lt;/a&gt; points to an article how use H2O together with Azure HDInsight. Cool stuff!!&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/towards-data-science/data-curious-31-07-2017-a-roundup-of-data-stories-datasets-and-visualizations-from-last-week-da8b8cf5ea9b&quot;&gt;Data Curious 31.07.2017: A roundup of data stories, datasets and visualizations from last week&lt;/a&gt;. So, I am not the only one doing roundups. This is a roundup concentrating on data by &lt;a href=&quot;https://medium.com/@bnj_cooley&quot;&gt;Benjamin Cooley&lt;/a&gt;. Seeing his roundups, I am thinking of packing up and go home. They are absolutely awesome!&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/towards-data-science/a-gentle-introduction-to-neural-networks-series-part-1-2b90b87795bc&quot;&gt;A Gentle Introduction To Neural Networks Series — Part 1&lt;/a&gt;. The start of a series covering introduction to Neural Networks.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://sunilprakash.com/post/intro-to-tensorflow/&quot;&gt;Intro To Tensorflow&lt;/a&gt;. Another introduction. This time introduction to TensorFlow.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blogs.msdn.microsoft.com/rserver/2017/08/01/machine-learning-services-in-sql-server-2017/&quot;&gt;Machine Learning Services in SQL Server 2017&lt;/a&gt;. A blog-post about some of the highlights related to machine learning in the latest release (RC2) of SQL Server 2017.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;SQL Server R Services&lt;/h2&gt;

&lt;p&gt;I am still working on episode &lt;em&gt;Internals - IX&lt;/em&gt; in the &lt;strong&gt;SQL Server 2016 R Services&lt;/strong&gt; series. I hope to have it out at the end of next week, or - worst case scenario - following week. If you are interested in the previous &quot;episodes&quot; they can be found &lt;a href=&quot;/2017/03/18/microsoft-sql-server-r-services-internals-i/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;Shameless Self Promotion&lt;/h2&gt;

&lt;p&gt;In the beginning of last week I received an email &quot;out of the blue&quot;, congratulating me to have been awarded &lt;strong&gt;MVP&lt;/strong&gt; for &lt;em&gt;Microsoft Data Platform&lt;/em&gt;. So it seems that writing blog-posts, answering forum questions and speaking at the &quot;odd&quot; conference now and then has its perks. I am chuffed!!&lt;/p&gt;

&lt;h2&gt;~ Finally&lt;/h2&gt;

&lt;p&gt;That's all for this week. I hope you enjoy what I did put together. If you have ideas for what to cover, please comment on this post or &lt;a href=&quot;mailto:niels.it.berglund@gmail.com&quot;&gt;ping&lt;/a&gt; me.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Interesting Stuff - Week 30</title>
   <link href="http://nielsberglund.com/2017/07/30/interesting-stuff-week-30/"/>
   <updated>2017-07-30T14:23:33+02:00</updated>
   <id>http://nielsberglund.com/2017/07/30/interesting-stuff---week-30</id>
   <content type="html">&lt;p&gt;Throughout the week, I read a lot of blog-posts, articles, etc., that has to do with things that interest me&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;data science&lt;/li&gt;
&lt;li&gt;data in general&lt;/li&gt;
&lt;li&gt;distributed computing&lt;/li&gt;
&lt;li&gt;SQL Server&lt;/li&gt;
&lt;li&gt;transactions (both db as well as non db)&lt;/li&gt;
&lt;li&gt;and other &quot;stuff&quot;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This is the &quot;roundup&quot; of the posts that has been most interesting to me, for the week just gone by.&lt;/p&gt;

&lt;!--more--&gt;


&lt;h2&gt;SQL Server&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://sqlonice.com/where-do-sqlos-tasks-come-from/&quot;&gt;Where do SQL Server tasks come from?&lt;/a&gt;. &lt;a href=&quot;http://sqlonice.com/&quot;&gt;Ewald&lt;/a&gt; continues his tales, about thread and tasks and other cool stuff, from &lt;a href=&quot;http://sqlonice.com/the-early-life-of-a-sqlos-thread/&quot;&gt;last week&lt;/a&gt; when he spoke about SQLOS threads. This time he looks at how threads and tasks fit together. I really, really like what he writes about, seeing that is deep down in SQLOS (and he uses WinDbg a lot :) ).&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://sql-sasquatch.blogspot.com/2017/07/sql-server-memory-accounting-aligning.html&quot;&gt;SQL Server Memory Accounting: Aligning Perfmon &amp;amp; DMVs&lt;/a&gt;. &lt;a href=&quot;http://sql-sasquatch.blogspot.com&quot;&gt;Lonny&lt;/a&gt; writes a very interesting article about squaring up what you see in SQL Server performance counters with what you get from DMV's.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;.NET&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blogs.msdn.microsoft.com/dotnet/2017/07/26/the-new-net-application-architecture-guidance/&quot;&gt;.NET Application Architecture Guidance&lt;/a&gt;. The .NET team has published some free eBooks as guidance to application architecture, especially microservices and container based applications (at least that's the ones I am interested in).&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blogs.msdn.microsoft.com/dotnet/2017/07/24/get-started-with-f-as-a-c-developer/&quot;&gt;Get Started with F# as a C# developer&lt;/a&gt;. A nice introduction for C# developers how to get started with F#.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blogs.msdn.microsoft.com/dotnet/2017/06/29/performance-improvements-in-ryujit-in-net-core-and-net-framework/&quot;&gt;Performance Improvements in RyuJIT in .NET Core and .NET Framework&lt;/a&gt;. A blog-post pointing out some of the improvements that have gone into the RyuiJIT compiler for .NET Core (x64 and x86) as well as .NET Framework (x64). Pretty impressive stuff!&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Data Science&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://tomaztsql.wordpress.com/2017/07/25/passing-two-sql-queries-to-sp_execute_external_script/&quot;&gt;Passing two SQL queries to sp_execute_external_script&lt;/a&gt;. The procedure &lt;code&gt;sp_execute_external_script&lt;/code&gt; which is used to execute R or Python scripts, has an input parameter: &lt;code&gt;@input_data_1&lt;/code&gt;. It is used to input a dataset to the external script. Based on the name you might expect that there would be more parameters for input of data (&lt;code&gt;@input_data_2&lt;/code&gt;, &lt;code&gt;@input_data_3&lt;/code&gt;, etc.) However, that is not the case, and there has been quite a few questions on various newsgroups what to do if you want to send in multiple datasets. In this blog-post, &lt;a href=&quot;https://tomaztsql.wordpress.com/&quot;&gt;Tomaz&lt;/a&gt;, shows a way you can achieve to input multiple datasets. Cool!!&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/thdeltei/azure-function-r&quot;&gt;Running R scripts on Azure Function&lt;/a&gt;. Serverless computing is really an &quot;in thing&quot;, and in AWS you have Lambda, and in Azure; Azure Functions (geez, what is it with Microsoft and naming of stuff?). Anyway &lt;a href=&quot;https://github.com/thdeltei&quot;&gt;Thomas Delteil&lt;/a&gt; from Microsoft shows how you can deploy a R scripts on Azure Function.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://buckwoody.wordpress.com/2017/07/27/data-science-start-at-the-very-beginning-its-a-very-good-place-to-start/&quot;&gt;Data Science: Start at the very Beginning, It’s a very good place to start&lt;/a&gt;. &lt;a href=&quot;https://buckwoody.wordpress.com/author/buckwoody/&quot;&gt;Buck Woody&lt;/a&gt; posts about two different types of data science projects, and which type of project won't work, and why.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;~ Finally&lt;/h2&gt;

&lt;p&gt;That's all for this week. I hope you enjoy what I did put together. If you have ideas for what to cover, please comment on this post or &lt;a href=&quot;mailto:niels.it.berglund@gmail.com&quot;&gt;ping&lt;/a&gt; me.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Interesting Stuff - Week 29</title>
   <link href="http://nielsberglund.com/2017/07/23/interesting-stuff-week-29/"/>
   <updated>2017-07-23T19:51:06+02:00</updated>
   <id>http://nielsberglund.com/2017/07/23/interesting-stuff---week-29</id>
   <content type="html">&lt;p&gt;Throughout the week, I read a lot of blog-posts, articles, etc., that has to do with things that interest me&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;data science&lt;/li&gt;
&lt;li&gt;data in general&lt;/li&gt;
&lt;li&gt;distributed computing&lt;/li&gt;
&lt;li&gt;SQL Server&lt;/li&gt;
&lt;li&gt;transactions (both db as well as non db)&lt;/li&gt;
&lt;li&gt;and other &quot;stuff&quot;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This is the &quot;roundup&quot; of the posts that has been most interesting to me, for the week just gone by.&lt;/p&gt;

&lt;!--more--&gt;


&lt;h2&gt;SQL Server&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://sqlonice.com/the-early-life-of-a-sqlos-thread/&quot;&gt;The early life of a SQLOS thread&lt;/a&gt;. &quot;And on that day a SQLOS thread was born&quot;! &lt;a href=&quot;http://sqlonice.com/&quot;&gt;Ewald&lt;/a&gt; talks about SQLOS threads in his normal entertaining style. Once again, if you are interested in the inner workings of SQL Server in general and SQLOS specifically, you have to follow &lt;a href=&quot;http://sqlonice.com/&quot;&gt;Ewald&lt;/a&gt;!!&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://social.msdn.microsoft.com/Forums/en-US/e78c8278-aeef-4a30-996e-cb80e385fea4/sqlclr-deployment-utility-and-helper-library?forum=sqlnetfx&quot;&gt;SQLCLR Deployment Utility and Helper library&lt;/a&gt;. A post on the &lt;a href=&quot;https://social.msdn.microsoft.com/Forums/en-US/home?forum=sqlnetfx&quot;&gt;.NET Framework inside SQL Server&lt;/a&gt; forum about a utility for SQLCLR functions as well as deployments. Have a look at the &lt;a href=&quot;https://github.com/vaseug/PowerLib&quot;&gt;GitHub&lt;/a&gt; repo for all the supporting code. Very impressive!!&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2017/07/23/sql-server-2017-sqlclr-white-listing-assemblies/&quot;&gt;SQL Server 2017 SQLCLR - Whitelisting Assemblies&lt;/a&gt;. A post by me about new functionality in SQL Server 2017 RC1 to be able to whitelist SQLCLR assemblies. Quite interesting if I may say so myself!&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Data Science&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://thomaswdinsmore.com/2017/07/17/how-gdpr-affects-data-science/&quot;&gt;HOW GDPR AFFECTS DATA SCIENCE&lt;/a&gt;. A very interesting post about the upcoming legislation in EU over data protection, the GDPR, and what effects it will have on Data Science.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://channel9.msdn.com/Events/useR-international-R-User-conferences/useR-International-R-User-2017-Conference&quot;&gt;useR! International R User 2017 Conference&lt;/a&gt;. A Microsoft &lt;a href=&quot;https://channel9.msdn.com&quot;&gt;Channel 9&lt;/a&gt; post containing videos of most of the presentations from the &lt;strong&gt;useR 2017&lt;/strong&gt; conference in Belgium in the early days of July. A lot of very interesting talks!&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.revolutionanalytics.com/2017/07/nnets-from-scratch.html&quot;&gt;Neural Networks from Scratch, in R&lt;/a&gt;. A post from Ilia Karmanov, (a Data Scientists at Microsoft), about how to build a neural-network from scratch in R. If I only would understand half of it ...&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.sanddance.ms/&quot;&gt;SandDance - Visually Explore, Understand, and Present Data&lt;/a&gt;. SandDance is a Microsoft Research project aimed to help you find insights about your data. It looks very, very interesting!&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;SQL Server R Services&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/2017/07/22/microsoft-sql-server-r-services-internals-viii/&quot;&gt;Microsoft SQL Server R Services - Internals VII&lt;/a&gt;. Have I been a busy boy this week or what?! The &lt;a href=&quot;/2017/07/22/microsoft-sql-server-r-services-internals-viii/&quot;&gt;Internals - VIII&lt;/a&gt; covers some of the components the launchpad service loads; Rterm.exe, BxlServer.exe, etc.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;~ Finally&lt;/h2&gt;

&lt;p&gt;That's all for this week. I hope you enjoy what I did put together. If you have ideas for what to cover, please comment on this post or &lt;a href=&quot;mailto:niels.it.berglund@gmail.com&quot;&gt;ping&lt;/a&gt; me.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>SQL Server 2017 SQLCLR - Whitelisting Assemblies</title>
   <link href="http://nielsberglund.com/2017/07/23/sql-server-2017-sqlclr-white-listing-assemblies/"/>
   <updated>2017-07-23T09:53:57+02:00</updated>
   <id>http://nielsberglund.com/2017/07/23/sql-server-2017-sqlclr-white-listing-assemblies</id>
   <content type="html">&lt;p&gt;A little while ago I wrote a &lt;a href=&quot;/2017/07/02/sql-server-2017-sqlclr-and-permissions/&quot;&gt;blog-post&lt;/a&gt; about the changes in the SQLCLR security model in SQL Server 2017. I wrote about how Microsoft has changed the relation between CAS and security boundaries, and CAS is no longer supported as a boundary! And also how Microsoft introduced an &lt;code&gt;sp_configure&lt;/code&gt; option called &lt;code&gt;clr strict security&lt;/code&gt;, which by default is set to 1 (on). When the setting is on, SQL Server treats all assemblies (&lt;code&gt;SAFE&lt;/code&gt;, &lt;code&gt;EXTERNAL_ACCESS&lt;/code&gt;, &lt;code&gt;UNSAFE&lt;/code&gt;) as if they were marked &lt;code&gt;UNSAFE&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The release I wrote the post against was CTP 2.1, and earlier this week Microsoft released SQL Server 2017 RC1. Some days ago I received a comment from &lt;em&gt;Paul Vestuto&lt;/em&gt; on my &lt;a href=&quot;/2017/07/02/sql-server-2017-sqlclr-and-permissions/&quot;&gt;post&lt;/a&gt;, pointing out that in RC1 there has been some more changes to the security model. I thought those changes would earn their own blog-post, instead of just editing the &lt;a href=&quot;/2017/07/02/sql-server-2017-sqlclr-and-permissions/&quot;&gt;previous post&lt;/a&gt;.&lt;/p&gt;

&lt;!--more--&gt;


&lt;p&gt;Let's look back at what the changes were in SQL 2017, to the SQLCLR permissions.&lt;/p&gt;

&lt;h2&gt;Recap&lt;/h2&gt;

&lt;p&gt;In SQL Server 2017, Microsoft now by default requires that all type of assemblies (&lt;code&gt;SAFE&lt;/code&gt;, &lt;code&gt;EXTERNAL_ACCESS&lt;/code&gt;, &lt;code&gt;UNSAFE&lt;/code&gt;) are authorized for &lt;code&gt;UNSAFE&lt;/code&gt; access, by:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The database is set to be &lt;code&gt;TRUSTWORTHY&lt;/code&gt;, &lt;em&gt;OR&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;The assembly is signed with a certificate that has a corresponding login with &lt;code&gt;UNSAFE ASSEMBLY&lt;/code&gt; permission, &lt;em&gt;OR&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;The assembly is signed with an asymmetric key that has a corresponding login with &lt;code&gt;UNSAFE ASSEMBLY&lt;/code&gt; permission.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The implication of the above is that, unless you want to mark your database &lt;code&gt;TRUSTWORTHY&lt;/code&gt;, you can no longer &quot;just&quot; deploy a &lt;code&gt;SAFE&lt;/code&gt; assembly, it has to be signed!&lt;/p&gt;

&lt;p&gt;You may say that: &quot;signing is not that bad - what's the big deal&quot;. Sure, sign one or two assemblies may not be that bad, but if you have, like &lt;a href=&quot;/derivco&quot;&gt;us&lt;/a&gt;, 50 - 60 assemblies then it can become a chore. Especially since there is no real tooling for this.&lt;/p&gt;

&lt;p&gt;So, in SQL Server 2017 RC1, Microsoft has tried to make things somewhat simpler.&lt;/p&gt;

&lt;h2&gt;Assembly Whitelisting&lt;/h2&gt;

&lt;p&gt;What Microsoft introduces in SQL Server 2017 RC1, is something I refer to as &lt;a href=&quot;https://en.wikipedia.org/wiki/Whitelist&quot;&gt;whitelisting&lt;/a&gt;. It is somewhat similar to the &lt;code&gt;TRUSTWORTHY&lt;/code&gt; setting, where you indicate that a database is to be trusted. But instead of doing it on the database level, you do it per assembly.&lt;/p&gt;

&lt;p&gt;To whitelist in SQL Server 2017 RC1, you use the system stored procedure &lt;code&gt;sys.sp_add_trusted_assembly&lt;/code&gt;. As the name implies the procedure adds an assembly to a list of &quot;trusted&quot; assemblies. By marking an assembly as trusted, SQL Server will allow it to be loaded when &lt;code&gt;clr strict security&lt;/code&gt; is on (on by default), even if:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;the assembly is not signed, &lt;em&gt;and&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;the database where you want to deploy it to is not &lt;code&gt;TRUSTWORTHY&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;


&lt;h4&gt;Demo Code&lt;/h4&gt;

&lt;p&gt;Before we start to look into how this works, let's look at the demo code we'll be using. If you read the &lt;a href=&quot;/2017/07/02/sql-server-2017-sqlclr-and-permissions/&quot;&gt;SQL Server 2017, SQLCLR and Permissions&lt;/a&gt; post, the code should look fairly familiar. So, on a SQL Server 2017 RC1 installation, let us first make sure that we are correctly configured:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Configuration&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;sp_configure&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'show advanced options'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;RECONFIGURE&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;GO&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;sp_configure&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'clr_enabled'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='6' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;RECONFIGURE&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='7' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;GO&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='8' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line='9' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;sp_configure&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='10' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;GO&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 1:&lt;/strong&gt; &lt;em&gt;Check Configuration&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In &lt;em&gt;Code Snippet 1&lt;/em&gt; we ensure that we can see all the various options that exist, and then we enable SQLCLR. Finally we see what values we have for the options and that should result in something like so:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sql2k17_trust_asms_options.png&quot; width=&quot;547&quot; height=&quot;100&quot;  &gt;
&lt;strong&gt;Figure 1:&lt;/strong&gt; &lt;em&gt;Configuration Settings&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;From &lt;em&gt;Figure 1&lt;/em&gt; we see that SQLCLR is enabled as well as that &lt;code&gt;clr strict security&lt;/code&gt; is on. We can now create the databases we need (yes, databases as in plural - will explain later):&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Databases&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;USE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;master&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;GO&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;DROP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DATABASE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IF&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;EXISTS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DeployDB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;DROP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DATABASE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IF&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;EXISTS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TrustedAsmDB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='6' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;GO&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='7' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line='8' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DATABASE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DeployDB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='9' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;GO&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='10' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line='11' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;ALTER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DATABASE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DeployDB&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='12' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TRUSTWORTHY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='13' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;GO&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='14' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line='15' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DATABASE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TrustedAsmDB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='16' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;GO&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 2:&lt;/strong&gt; &lt;em&gt;Create Databases&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;For now, don't worry about the &lt;code&gt;DeployDB&lt;/code&gt; database, the database that will be the &quot;production&quot; database and to where we want to deploy an assembly is &lt;code&gt;TrustedAsmDB&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;With the databases created, the CLR code we will use is some of what we used in the &lt;a href=&quot;/2017/07/02/sql-server-2017-sqlclr-and-permissions/&quot;&gt;SQL Server 2017, SQLCLR and Permissions&lt;/a&gt; post:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;CLR&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Threading&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Threading.Tasks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Sql2k17TrustedAsm1&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;p&quot;&gt;&amp;#x7b;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='6' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Functions&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='7' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;p&quot;&gt;&amp;#x7b;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='8' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fn_clr_Adder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='9' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;p&quot;&gt;&amp;#x7b;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='10' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='11' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;p&quot;&gt;&amp;#x7d;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='12' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line='13' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fn_clr_LongRunningAdder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='14' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;p&quot;&gt;&amp;#x7b;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='15' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;      &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Task&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Factory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;StartNew&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LongRunning&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='16' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='17' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;p&quot;&gt;&amp;#x7d;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='18' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line='19' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LongRunning&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='20' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;p&quot;&gt;&amp;#x7b;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='21' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;      &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wait&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='22' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;      &lt;span class=&quot;n&quot;&gt;Thread&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wait&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='23' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='24' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;p&quot;&gt;&amp;#x7d;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='25' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line='26' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;p&quot;&gt;&amp;#x7d;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='27' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;p&quot;&gt;&amp;#x7d;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 3:&lt;/strong&gt; &lt;em&gt;C# Code to Use&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;After having compiled the code in &lt;em&gt;Code Snippet 3&lt;/em&gt; we can now try and deploy the assembly to our production database (which is not &lt;code&gt;TRUSTWORTHY&lt;/code&gt;):&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Assembly Creation&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;USE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TrustedAsmDB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;GO&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ASSEMBLY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Sql2k17TrustedAsm&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'W:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;lt;path_to_dll&amp;gt;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Sql2k17TrustedAsm1.dll'&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='6' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;GO&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 4:&lt;/strong&gt; &lt;em&gt;Create Assembly&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;When executing the code in &lt;em&gt;Code Snippet 4&lt;/em&gt;, you'll get almost the same error message as we initially saw in &lt;a href=&quot;/2017/07/02/sql-server-2017-sqlclr-and-permissions/&quot;&gt;SQL Server 2017, SQLCLR and Permissions&lt;/a&gt;, when we tried an deploy an assembly without the assembly being signed:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sql2k17_trust_asms_creation_fail.png&quot; width=&quot;627&quot; height=&quot;190&quot;  &gt;
&lt;strong&gt;Figure 2:&lt;/strong&gt; &lt;em&gt;Error Deploying Assembly&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The only difference is the last part of the error message: &lt;em&gt;Alternatively, you can trust the assembly using sp_add_trusted_assembly&lt;/em&gt;.&lt;/p&gt;

&lt;h2&gt;sys.sp_add_trusted_assembly&lt;/h2&gt;

&lt;p&gt;Above we mentioned how &lt;code&gt;sys.sp_add_trusted_assembly&lt;/code&gt; adds an assembly to a list of &quot;trusted&quot; assemblies. We also said that by marking an assembly as trusted, SQL Server will allow it to be loaded when &lt;code&gt;clr strict security&lt;/code&gt; is on, even though the assembly in question is not signed, and the database where you want to deploy it to is not &lt;code&gt;TRUSTWORTHY&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;How do we use &lt;code&gt;sys.sp_add_trusted_assembly&lt;/code&gt;? Well, the signature looks like this:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Proc. Signature&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;sp_add_trusted_assembly&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hash&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'value'&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;description&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'description'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 5:&lt;/strong&gt; &lt;em&gt;Signature of sys.sp_add_trusted_assembly&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;As we see in &lt;em&gt;Code Snippet 5&lt;/em&gt;, the procedure takes two parameters:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;@hash&lt;/code&gt; - this is the &lt;code&gt;SHA2_512&lt;/code&gt; hash value of the binary representation of the assembly.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;@description&lt;/code&gt; - an optional description of the assembly. It is recommended that the description is the same as you would see in the &lt;code&gt;clr_name&lt;/code&gt; column in &lt;code&gt;sys.assemblies&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;That seems straightforward enough, grab the binary, hash it and off you go! But wait a second, how do you get the binary representation of the assembly, and how do you hash it?&lt;/p&gt;

&lt;p&gt;Well, there are various way you can get the binary representation; write some C# code that reads out the binary value of the dll, is one way - and then when you have it, you can run some C# code to create the hash.&lt;/p&gt;

&lt;p&gt;Me, I am a lazy guy, and I am a database developer at heart, so I use the database for this, and this is now where that second database in &lt;em&gt;Code Snippet 2&lt;/em&gt; comes in. The &lt;code&gt;DeployDB&lt;/code&gt; which was marked as &lt;code&gt;TRUSTWORTHY&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;What I do is:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create the assembly in the &lt;code&gt;TRUSTWORTHY&lt;/code&gt; database.&lt;/li&gt;
&lt;li&gt;In SQL Server Management Studio's (SSMS) &lt;strong&gt;Object Explorer&lt;/strong&gt; I script out the assembly as &lt;code&gt;CREATE&lt;/code&gt; to the clipboard, or a new query window:&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sql2k17_trust_asms_binary.png&quot; width=&quot;650&quot; height=&quot;580&quot;  &gt;
&lt;strong&gt;Figure 3:&lt;/strong&gt; &lt;em&gt;Scripting the Assembly&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Scripting the assembly gives you the &lt;code&gt;CREATE&lt;/code&gt; statement of the assembly based on the binary representation:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Create&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ASSEMBLY&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Sql2k17TrustedAsm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x4D5A90000300000004000000FFFF00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 6:&lt;/strong&gt; &lt;em&gt;Create Assembly from Binary&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Instead of scripting it out, I could have done a &lt;code&gt;SELECT&lt;/code&gt; against the &lt;code&gt;sys.assembly_files&lt;/code&gt; table and the &lt;code&gt;content&lt;/code&gt; column, but I rather do it using the scripting option. I finally grab the &lt;code&gt;clr_name&lt;/code&gt; value from the &lt;code&gt;sys.assemblies&lt;/code&gt; table for the assembly:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sql2k17_trust_asms_clr_name.png&quot; width=&quot;650&quot; height=&quot;48&quot;  &gt;
&lt;strong&gt;Figure 4:&lt;/strong&gt; &lt;em&gt;Clr Name&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Equipped with this I can now add the assembly as a trusted assembly. You may ask how do I get the hash value of the assembly? Fortunately SQL Server has a handy function called &lt;code&gt;HASHBYTES&lt;/code&gt; which looks like so:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Hashbytes&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;HASHBYTES&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&amp;lt;algorithm&amp;gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;&amp;#x7b;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'input'&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;&amp;#x7d;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 7:&lt;/strong&gt; &lt;em&gt;T-SQL Hashbytes Function&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The function takes two parameters as you can see from &lt;em&gt;Code Snippet 7&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;'&amp;lt;algorithm&amp;gt;'&lt;/code&gt; - That is the hashing algorithm to use. In our case, &lt;code&gt;sys.sp_add_trusted_assembly&lt;/code&gt; requires &lt;code&gt;SHA2_512&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;{@input|'input'}&lt;/code&gt; - This is either a &lt;code&gt;varchar&lt;/code&gt;, &lt;code&gt;nvarchar&lt;/code&gt; or &lt;code&gt;varbinary&lt;/code&gt; variable, (&lt;code&gt;@input&lt;/code&gt;), or an expression that results in a &lt;code&gt;varchar&lt;/code&gt;, &lt;code&gt;nvarchar&lt;/code&gt; or &lt;code&gt;varbinary&lt;/code&gt;, (&lt;code&gt;'input'&lt;/code&gt;). An example of the latter could be a column in a &lt;code&gt;SELECT&lt;/code&gt; statement.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;When using the &lt;code&gt;SHA2_512&lt;/code&gt; algorithm, the return value is 64 bytes, and an example of executing it based on the binary value of our assembly looks like this:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;HASHBYTES&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;DECLARE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;asmBin&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;varbinary&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x4D5A90000300000004000000FFFF00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;...;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;DECLARE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hash&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;varbinary&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hash&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HASHBYTES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'SHA2_512'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;asmBin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hash&lt;/span&gt; &lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 8:&lt;/strong&gt; &lt;em&gt;Usage of HASHBYTES&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In &lt;em&gt;Code Snippet 8&lt;/em&gt; above, the &lt;code&gt;@asmBin&lt;/code&gt; variable is obviously truncated for readability.&lt;/p&gt;

&lt;p&gt;Now, when we have the various pieces of the puzzle we can execute &lt;code&gt;sys.sp_add_trusted_assembly&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Trusted Assembly&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;USE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;master&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;GO&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;DECLARE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;clrName&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nvarchar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'sql2k17trustedasm1, ...'&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;DECLARE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;asmBin&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;varbinary&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x4D5A90000300000004000000FFFF00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;...;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;DECLARE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hash&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;varbinary&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='6' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line='7' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hash&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HASHBYTES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'SHA2_512'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;asmBin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='8' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line='9' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;EXEC&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sp_add_trusted_assembly&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hash&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='10' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                                 &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;description&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;clrName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 9:&lt;/strong&gt; &lt;em&gt;Adding Trusted Assembly&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The code in &lt;em&gt;Code Snippet 9&lt;/em&gt; should succeed, and to ensure that is the case you can do: &lt;code&gt;SELECT * FROM sys.trusted_assemblies&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sql2k17_trust_asms_trusted_assemblies.png&quot; width=&quot;643&quot; height=&quot;74&quot;  &gt;
&lt;strong&gt;Figure 5:&lt;/strong&gt; &lt;em&gt;Content of sys.trusted_assemblies&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;So, everything looks OK. We can now go to the production database where we started this journey and try and deploy the assembly. You can deploy it either using the code in &lt;em&gt;Code Snippet 4&lt;/em&gt;, where it is being deployed from a path, or the code in &lt;em&gt;Code Snippet 6&lt;/em&gt;, using the binary representation. The &lt;code&gt;CREATE ASSEMBLY&lt;/code&gt; should now succeed.&lt;/p&gt;

&lt;p&gt;Having created the assembly, let's create a function against the &lt;code&gt;fn_clr_Adder&lt;/code&gt; method, and then execute the function - just to ensure everything is OK:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Create Function&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FUNCTION&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dbo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fn_clr_Adder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;RETURNS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;EXTERNAL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NAME&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Sql2k17TrustedAsm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                   &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Sql2k17TrustedAsm1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Functions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                   &lt;span class=&quot;n&quot;&gt;fn_clr_Adder&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='6' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;GO&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='7' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line='8' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dbo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fn_clr_Adder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;21&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;21&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='9' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;GO&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 10:&lt;/strong&gt; &lt;em&gt;Create and Test Function&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Running the code in &lt;em&gt;Code Snippet 10&lt;/em&gt; should succeed, and you should get back a result of &lt;code&gt;42&lt;/code&gt;. Just for &quot;fun&quot; you could create a new database, and try and deploy the assembly to that database. That should just work, seeing that &lt;code&gt;sys.sp_add_trusted_assembly&lt;/code&gt; marks the assembly as trusted on the server instance.&lt;/p&gt;

&lt;h4&gt;Permission Sets&lt;/h4&gt;

&lt;p&gt;When we created the assembly from the code above, it was created with the default permission set &lt;code&gt;SAFE&lt;/code&gt;. When you look at the C# code you see how there is a method - &lt;code&gt;fn_clr_LongRunningAdder&lt;/code&gt; - which internally uses a &lt;code&gt;Task&lt;/code&gt;. Using a &lt;code&gt;Task&lt;/code&gt; is not considered &lt;code&gt;SAFE&lt;/code&gt; in any shape or form, so what happens if you create a T-SQL function against that method and then try to execute:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Unsafe&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FUNCTION&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dbo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fn_clr_LongRunningAdder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;RETURNS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;EXTERNAL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NAME&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Sql2k17TrustedAsm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                  &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Sql2k17TrustedAsm1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Functions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                  &lt;span class=&quot;n&quot;&gt;fn_clr_LongRunningAdder&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='6' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;GO&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='7' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line='8' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dbo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fn_clr_LongRunningAdder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;21&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;21&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='9' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;GO&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 11:&lt;/strong&gt;  &lt;em&gt;Create and Execute an Unsafe Function&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Ouch, the creation of the function succeeded, but when you executed the function you received an error that we also saw in the &lt;a href=&quot;/2017/07/02/sql-server-2017-sqlclr-and-permissions/&quot;&gt;SQL Server 2017, SQLCLR and Permissions&lt;/a&gt; post. The error says something about not having necessary permissions to do the operation. This normally happens if the assembly has not been assigned the correct &lt;code&gt;PERMISSION_SET&lt;/code&gt; when it was created.&lt;/p&gt;

&lt;p&gt;So, if you drop the functions and the assembly, and recreate the assembly with &lt;code&gt;PERMISSION_SET = UNSAFE&lt;/code&gt;, then when you have recreated the functions, all should work.&lt;/p&gt;

&lt;p&gt;The slightly interesting thing with this is that even when you mark an assembly as trusted, it still has to be created with the correct permission set.&lt;/p&gt;

&lt;h2&gt;Dropping a Trusted Assembly&lt;/h2&gt;

&lt;p&gt;As with most database objects, if you can create them - then you can also &lt;code&gt;DROP&lt;/code&gt; them. The question is if you have a trusted assembly, which you have deployed to the database and subsequently created functions etc., against - if you &lt;code&gt;DROP&lt;/code&gt; the trusted assembly, what effect, if any, will it have on the existing assemblies in the various databases on the server? Let's find out.&lt;/p&gt;

&lt;p&gt;To drop a trusted assembly you use the proc &lt;code&gt;sys.sp_drop_trusted_assembly&lt;/code&gt;. The proc takes one parameter, the hash value of the trusted assembly, and in our example the code would look like so:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Drop&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;EXEC&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sp_drop_trusted_assembly&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hash&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xCDFEFD60682FBB0182&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;...;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 12:&lt;/strong&gt; &lt;em&gt;Drop Trusted Assembly&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Executing the code in &lt;em&gt;Code Snippet 12&lt;/em&gt; works just fine, and when you look in &lt;code&gt;sys.trusted_assemblies&lt;/code&gt; afterward, your trusted assembly is gone. However, if you check in &lt;code&gt;sys.assemblies&lt;/code&gt; in the database where you deployed the actual assembly to, the assembly still exists. Isn't this now a big security hole? What happens when we execute one of our functions now, &lt;code&gt;SELECT dbo.fn_clr_Adder(21, 21)&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sql2k17_trust_asms_no_trust.png&quot; width=&quot;523&quot; height=&quot;256&quot;  &gt;
&lt;strong&gt;Figure 6:&lt;/strong&gt; &lt;em&gt;Assembly Not Trusted&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Based on the error message we get, it definitely seems like SQL Server checks whether the assembly is either signed or trusted during execution. So, no security hole.&lt;/p&gt;

&lt;h2&gt;Summary&lt;/h2&gt;

&lt;p&gt;In the &lt;a href=&quot;/2017/07/02/sql-server-2017-sqlclr-and-permissions/&quot;&gt;SQL Server 2017, SQLCLR and Permissions&lt;/a&gt; post I summarized the new SQL Server 2017 SQLCLR security requirements with: &lt;em&gt;All type of assemblies (&lt;code&gt;SAFE&lt;/code&gt;, &lt;code&gt;EXTERNAL_ACCESS&lt;/code&gt;, &lt;code&gt;UNSAFE&lt;/code&gt;) have to be authorized for &lt;code&gt;UNSAFE&lt;/code&gt; access.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;With the release of SQL Server 2017 RC1 there is another option and that is, that the assembly is marked as trusted. You mark an assembly as trusted by the stored procedure &lt;code&gt;sys.sp_add_trusted_assembly&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The security choices you now have for an assembly in SQL Server 2017 are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The database is set to be &lt;code&gt;TRUSTWORTHY&lt;/code&gt;, &lt;em&gt;OR&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;The assembly is signed with a certificate that has a corresponding login with &lt;code&gt;UNSAFE ASSEMBLY&lt;/code&gt; permission, &lt;em&gt;OR&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;The assembly is signed with an asymmetric key that has a corresponding login with &lt;code&gt;UNSAFE ASSEMBLY&lt;/code&gt; permission, &lt;em&gt;OR&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;The assembly is marked as trustworthy by the &lt;code&gt;sys.sp_add_trusted_assembly&lt;/code&gt; procedure.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Marking an assembly as trusted does not mean that you can do whatever you want in the assembly, you still need to deploy the assembly with the correct permission set based on your operations in the assembly.&lt;/p&gt;

&lt;p&gt;I'm finishing this summary with the same caveat as I had in the &lt;a href=&quot;/2017/07/02/sql-server-2017-sqlclr-and-permissions/&quot;&gt;SQL Server 2017, SQLCLR and Permissions&lt;/a&gt; post: Bear in mind that all the above are based on SQL Server 2017 RC1. Things may change up until release.&lt;/p&gt;

&lt;h2&gt;~ Finally&lt;/h2&gt;

&lt;p&gt;If you have comments, questions etc., please comment on this post or &lt;a href=&quot;mailto:niels.it.berglund@gmail.com&quot;&gt;ping&lt;/a&gt; me.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Microsoft SQL Server R Services - Internals VIII</title>
   <link href="http://nielsberglund.com/2017/07/22/microsoft-sql-server-r-services-internals-viii/"/>
   <updated>2017-07-22T08:47:47+02:00</updated>
   <id>http://nielsberglund.com/2017/07/22/microsoft-sql-server-r-services---internals-viii</id>
   <content type="html">&lt;p&gt;This post is part of a series of blog-posts about Microsoft SQL Server R Services:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;/2017/03/04/microsoft-sql-server-2016-r-services-installation/&quot;&gt;Microsoft SQL Server 2016 R Services Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2017/03/18/microsoft-sql-server-r-services-internals-i/&quot;&gt;Microsoft SQL Server R Services - Internals I&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2017/04/02/microsoft-sql-server-r-services-internals-ii/&quot;&gt;Microsoft SQL Server R Services - Internals II&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2017/04/13/microsoft-sql-server-r-services-internals-iii/&quot;&gt;Microsoft SQL Server R Services - Internals III&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2017/04/23/microsoft-sql-server-r-services-internals-iv/&quot;&gt;Microsoft SQL Server R Services - Internals IV&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2017/05/01/microsoft-sql-server-r-services-internals-v/&quot;&gt;Microsoft SQL Server R Services - Internals V&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2017/05/16/microsoft-sql-server-r-services-internals-vi/&quot;&gt;Microsoft SQL Server R Services - Internals VI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2017/07/11/microsoft-sql-server-r-services-internals-vii/&quot;&gt;Microsoft SQL Server R Services - Internals VII&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Microsoft SQL Server R Services - Internals VIII (this post)&lt;/li&gt;
&lt;li&gt;More to come (hopefully)&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;This post is the ninth post about Microsoft SQL Server R Services, and the eight post that drills down into the internal of how it works.&lt;/p&gt;

&lt;p&gt;So far in this series we have been looking at what happens in SQL Server as well as the launchpad service when we execute &lt;code&gt;sp_execute_external_script&lt;/code&gt;, and we have still no real &quot;clue&quot; to where the R engine comes into play.&lt;/p&gt;

&lt;p&gt;Well, hopefully that will change (at least a little bit) with this post, as we here will look at what happens when we leave the launchpad service.&lt;/p&gt;

&lt;!--more--&gt;


&lt;p&gt;Before we dive into the &quot;juicy&quot; stuff, let's remind ourselves where we are.&lt;/p&gt;

&lt;h2&gt;Recap&lt;/h2&gt;

&lt;p&gt;Normally in the recaps in this series, we have looked at what was covered in the previous &quot;episode&quot;. In this recap, let's look at he &quot;full&quot; picture up until now.&lt;/p&gt;

&lt;p&gt;The first post in the series - &lt;a href=&quot;/2017/03/04/microsoft-sql-server-2016-r-services-installation/&quot;&gt;Microsoft SQL Server 2016 R Services Installation&lt;/a&gt; - covered the installation of SQL Server 2016 R Services, and it also touched upon the external procedure which allows us to execute external scripts; &lt;code&gt;sp_execute_external_script&lt;/code&gt;. We looked at the signature of the procedure as well as executing the equivalent to a &quot;Hello World&quot; script.&lt;/p&gt;

&lt;p&gt;In the subsequent posts we talked about - when executing &lt;code&gt;sp_execute_external_script&lt;/code&gt; - how SQL Server calls into the launchpad service, and how the launchpad service - through the &lt;code&gt;rlauncher.dll&lt;/code&gt; creates multiple &lt;code&gt;Rterm.exe&lt;/code&gt; processes as in &lt;em&gt;Figure 1&lt;/em&gt; below. One of the processes will be used to run the external script:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sql-launchpad-rterm_processes.png&quot; width=&quot;583&quot; height=&quot;100&quot;  &gt;
&lt;strong&gt;Figure 1:&lt;/strong&gt; &lt;em&gt;Rterm.exe Processes&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I addition to creating &lt;code&gt;Rterm.exe&lt;/code&gt; processes, the launchpad service also creates backing directories for those processes. These backing directories are used for saving output, intermediate results etc. The following figure was used to show what the call flow looks like:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sql-launchpad_processes_post.png&quot; width=&quot;650&quot; height=&quot;466&quot;  &gt;
&lt;strong&gt;Figure 2:&lt;/strong&gt; &lt;em&gt;Call Flow Executing sp_execute_external_script&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;We discussed how the number of processes can be controlled by the &lt;code&gt;PROCESS_POOL_SQLSATELLITE_GROWTH&lt;/code&gt; setting in &lt;code&gt;rlauncher.config&lt;/code&gt; file, and how it defaults to 5 if nothing is set.&lt;/p&gt;

&lt;p&gt;In &lt;a href=&quot;/2017/05/16/microsoft-sql-server-r-services-internals-vi/&quot;&gt;Internals - VI&lt;/a&gt; we came back to the backing directories, and we realized that in addition to the backing directories created for the Rterm processes, one more directory is created - which will be the &quot;official&quot; working directory for the session, and we showed this using this figure:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sql_r_services_6_launchpad_working_dir.png&quot; width=&quot;650&quot; height=&quot;433&quot;  &gt;
&lt;strong&gt;Figure 3:&lt;/strong&gt; &lt;em&gt;Launchpad, Directories and Processes&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;While we were investigating the directories created in &lt;a href=&quot;/2017/05/16/microsoft-sql-server-r-services-internals-vi/&quot;&gt;Internals - VI&lt;/a&gt; we saw that, while we executed an external script, files and sub-directories were created in the various backing directories:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sql_r_services_7_outputdir.png&quot; width=&quot;579&quot; height=&quot;139&quot;  &gt;
&lt;strong&gt;Figure 4:&lt;/strong&gt; &lt;em&gt;Contents Process Directory&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In &lt;em&gt;Figure 4&lt;/em&gt; we see he content of the directory which is the processing directory, and in &lt;a href=&quot;/2017/07/11/microsoft-sql-server-r-services-internals-vii/&quot;&gt;Internals - VII&lt;/a&gt; we looked into what creates those files/directories and what they are for. We came to the conclusion that both the launchpad service (probably through the &lt;code&gt;rlauncher.dll&lt;/code&gt;) created some files, whereas &lt;code&gt;Rterm.exe&lt;/code&gt; created others.&lt;/p&gt;

&lt;p&gt;That's where we are, and now it is time to look at the world outside of the launchpad, and try to figure out what is being used when executing an external script.&lt;/p&gt;

&lt;h2&gt;Rterm.exe&lt;/h2&gt;

&lt;p&gt;In &lt;a href=&quot;/2017/04/13/microsoft-sql-server-r-services-internals-iii/&quot;&gt;Internals - III&lt;/a&gt; we saw how the launchpad service creates Rterm processes, and how the launchpad service calls &lt;code&gt;launchpad!CSQLSatelliteCommunication::SendResumeWithLoginInfo&lt;/code&gt; followed by &lt;code&gt;launchpad!CSQLSatelliteConnection::WriteMessage&lt;/code&gt; to call into the Rterm process chosen for execution of the external script. So what does &lt;code&gt;Rterm.exe&lt;/code&gt; and the RTerm process do?&lt;/p&gt;

&lt;p&gt;To answer that let us first look at what the R &quot;engine&quot; really is, and let's do that by looking at standard CRAN R, and for this I use RStudio as an IDE. So, let's open RStudio and make sure it uses the CRAN R engine:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sql_r_services_8_rstudio_cran.png&quot; width=&quot;456&quot; height=&quot;85&quot;  &gt;
&lt;strong&gt;Figure 5:&lt;/strong&gt; &lt;em&gt;RStudion CRAN R&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;At that stage if I check in &lt;strong&gt;Process Explorer&lt;/strong&gt; to see what processes are loaded I see something like this:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sql_r_services_8_rstudio_rsession.png&quot; width=&quot;599&quot; height=&quot;56&quot;  &gt;
&lt;strong&gt;Figure 6:&lt;/strong&gt; **&lt;/p&gt;

&lt;p&gt;So in &lt;em&gt;Figure 6&lt;/em&gt; we see how the &lt;code&gt;rstudio.exe&lt;/code&gt; is host for &lt;code&gt;rsession.exe&lt;/code&gt;, which in turn host &lt;code&gt;conhost.exe&lt;/code&gt;. For this discussion &lt;code&gt;conhost.exe&lt;/code&gt; has no real impact, but if you want to know more about it, &lt;a href=&quot;https://blogs.technet.microsoft.com/askperf/2009/10/05/windows-7-windows-server-2008-r2-console-host/&quot;&gt;here&lt;/a&gt; is a good article explaining why we have &lt;code&gt;conhost.exe&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Going back to &lt;code&gt;rsession.exe&lt;/code&gt;; in Process Explorer, we look at what dll's it has loaded (click on &lt;code&gt;`rsession.exe&lt;/code&gt; followed by &lt;strong&gt;Ctrl-D&lt;/strong&gt; ) we'll see something like this:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sql_r_services_8_rstudio_rsession_dlls1.png&quot; width=&quot;627&quot; height=&quot;128&quot;  &gt;
&lt;strong&gt;Figure 7:&lt;/strong&gt; &lt;em&gt;Loaded dll's&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Figure 7&lt;/em&gt; above shows 7 dll's loaded by &lt;code&gt;rsession.exe&lt;/code&gt;, and what is interesting is the second from bottom, which has a path pointing to the R libraries. When we look further down in the list we'll see more dll's from the R libraries:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sql_r_services_8_rstudio_rsession_rdlls.png&quot; width=&quot;574&quot; height=&quot;81&quot;  &gt;
&lt;strong&gt;Figure 8:&lt;/strong&gt; &lt;em&gt;R Dlls&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Among the dll's we see the &lt;code&gt;R.dll&lt;/code&gt;, which is the main dll for R. So, it seems that &lt;code&gt;rsession.exe&lt;/code&gt; acts as a host for the R engine, and the R engine is a &quot;bunch&quot; of dll's.&lt;/p&gt;

&lt;p&gt;Coming back to &lt;code&gt;rterm.exe&lt;/code&gt; and what it is, we can now assume it acts in the same way as &lt;code&gt;rsession.exe&lt;/code&gt;. Let us go back to the code that we used in &lt;a href=&quot;/2017/04/13/microsoft-sql-server-r-services-internals-iii/&quot;&gt;Internals - III&lt;/a&gt; when we captured the figure we above in &lt;em&gt;Figure 1&lt;/em&gt;:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Script with Pause&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;EXEC&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sp_execute_external_script&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                    &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;language&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'R'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                    &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'OutputDataSet&amp;lt;-InputDataSet;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                              Sys.sleep(120);'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                    &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;input_data_1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'SELECT 42'&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='6' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;WITH&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;RESULT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SETS&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TheAnswer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 1:&lt;/strong&gt; &lt;em&gt;Execute with Sys.Sleep&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Like we did in &lt;a href=&quot;/2017/04/13/microsoft-sql-server-r-services-internals-iii/&quot;&gt;Internals - III&lt;/a&gt;, we'll execute the code in &lt;em&gt;Code Snippet 1&lt;/em&gt;, and while the code is running we'll look in Process Explorer and see if we find anything of interest:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Stop the launchpad service.&lt;/li&gt;
&lt;li&gt;Restart the launchpad service.&lt;/li&gt;
&lt;li&gt;Start &lt;em&gt;Process Explorer&lt;/em&gt;, order by Process, and scroll down to where you see process names starting with &quot;RT&quot; (on my box there are none at this stage), or where the processes should be.

&lt;ul&gt;
&lt;li&gt;If you at this stage see RTerm, restart the launchpad service again and kill those processes.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Execute the code in &lt;em&gt;Code Snippet 1&lt;/em&gt;.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;While the code is running, take a quick look in Process Explorer, and you should see something like so:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sql_r_services_8_rterm_processes.png&quot; width=&quot;644&quot; height=&quot;304&quot;  &gt;
&lt;strong&gt;Figure 9:&lt;/strong&gt; &lt;em&gt;RTerm Processes&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The difference between &lt;em&gt;Figure 1&lt;/em&gt; and &lt;em&gt;Figure 9&lt;/em&gt;, is that in &lt;em&gt;Figure 1&lt;/em&gt; I had collapsed the Rterm processes. In &lt;em&gt;Figure 9&lt;/em&gt; we see how the launchpad service is host for multiple Rterm processes, and how &lt;code&gt;Rterm.exe&lt;/code&gt; is host for &lt;code&gt;conhost.exe&lt;/code&gt; as well as &lt;code&gt;BxlServer.exe&lt;/code&gt;. We'll come back shortly to what &lt;code&gt;BxlServer.exe&lt;/code&gt; is.&lt;/p&gt;

&lt;p&gt;Let's look a bit closer at what dll's we find for one of the active Rterm processes, click on the Rterm process which has a CPU value, and then click &lt;strong&gt;Ctrl-D&lt;/strong&gt;.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; You may have to re-execute the code in &lt;em&gt;Code Snippet 1&lt;/em&gt;, maybe even increase the sleep time to 3 or 4 minutes to be able to see everything.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;When I scroll down in the dll list I see some familiar R dll's, that we also saw in &lt;em&gt;Figure 8&lt;/em&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sql_r_services_8_rterm_dlls.png&quot; width=&quot;649&quot; height=&quot;168&quot;  &gt;
&lt;strong&gt;Figure 10:&lt;/strong&gt; &lt;em&gt;Rterm R dll's&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;At this stage we can safely say that the &lt;code&gt;Rterm.exe&lt;/code&gt; and its process hosts the R engine. That is cool (yeah I know - I need to get a life), but what does that &lt;code&gt;BxlServer.exe&lt;/code&gt; do in the mix?&lt;/p&gt;

&lt;h2&gt;BxlServer&lt;/h2&gt;

&lt;p&gt;So the question was, what is the &lt;code&gt;BxlServer.exe&lt;/code&gt;? To answer that let's take a step back, and look at the R offerings Microsoft has:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Microsoft R Open - a Microsoft open source offering of R&lt;/li&gt;
&lt;li&gt;Microsoft R Server - Microsoft's commercial R offering.&lt;/li&gt;
&lt;li&gt;SQL Server R Services - the moral equivalent of Microsoft R Server, but with SQL Server as delivery vehicle.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Let's see what happens if we pointed RStudio towards the Microsoft R Open environment:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sql_r_services_8_rstudio_mro.png&quot; width=&quot;577&quot; height=&quot;294&quot;  &gt;
&lt;strong&gt;Figure 11:&lt;/strong&gt; &lt;em&gt;RStudio Targeting MRO&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In &lt;em&gt;Process Explorer&lt;/em&gt;, looking at the rstudio process, it won't look any different than what it did when Rstudio targeted CRAN R as in &lt;em&gt;Figure 6&lt;/em&gt;, so obviously the Microsoft R Open offering does not &quot;know&quot; of the &lt;code&gt;BxlServer.exe&lt;/code&gt; we see in &lt;em&gt;Figure 9&lt;/em&gt;. But, looking at the dll's loaded by &lt;code&gt;rsession.exe&lt;/code&gt;, we see more or less the same as was loaded by &lt;code&gt;rterm.exe&lt;/code&gt; in &lt;em&gt;Figure 10&lt;/em&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sql_r_services_8_rstudio_mro_dlls.png&quot; width=&quot;594&quot; height=&quot;113&quot;  &gt;
&lt;strong&gt;Figure 12:&lt;/strong&gt; &lt;em&gt;RStudio MRO dll's&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;What would happen if RStudio targeted the Microsoft R Server (MRS) instead:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sql_r_services_8_rstudio_mrs.png&quot; width=&quot;461&quot; height=&quot;314&quot;  &gt;
&lt;strong&gt;Figure 13:&lt;/strong&gt; &lt;em&gt;RStudio Targeting MRS&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This time when looking at the rstudio process we do see &lt;code&gt;BxlServer.exe&lt;/code&gt; as a process hosted by &lt;code&gt;rsession.exe&lt;/code&gt;, so it seems that &lt;code&gt;BxlServer.exe&lt;/code&gt; is specifically for the commercial versions of Microsoft R.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; There is no difference between the &lt;code&gt;BxlServer.exe&lt;/code&gt; in MRS and SQL Server R Services. Well, not much anyway :), in next post we'll see some differences.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;By now you are probably saying something like: &quot;Niels, this is very informative - NOT, get to the point - what is &lt;code&gt;BxlServer.exe&lt;/code&gt;&quot;. OK, so let us see some of the dll's &lt;code&gt;BxlServer.exe&lt;/code&gt; has loaded (click on the &lt;code&gt;BxlServer.exe&lt;/code&gt; process and &lt;strong&gt;Ctrl-D&lt;/strong&gt;):&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sql_r_services_8_rstudio_bxlserver.png&quot; width=&quot;651&quot; height=&quot;90&quot;  &gt;
&lt;strong&gt;Figure 13:&lt;/strong&gt; &lt;em&gt;BxlServer Loaded dll's&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Ooh, that's interesting, look at the path and especially what is in the red rectangle: &lt;code&gt;RevoScaleR&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;RevoScaleR, is an R package providing both High Performance Computing (HPC) and High Performance Analytics (HPA) capabilities for R.  HPC capabilities allow you to distribute the execution of essentially any R function across cores and nodes, and deliver the results back to the user. HPA adds the ability to handle big data in a high performance way. In addition to this (or rather as part of) RevoScaleR also has functionality to handle data access with high performance, and &lt;code&gt;BxlServer.exe&lt;/code&gt; is the host for all this.&lt;/p&gt;

&lt;p&gt;In addition to run the HPC, HPA and data access, &lt;code&gt;BxlServer.exe&lt;/code&gt; also coordinates with the R runtime in order to manage exchanges of data with SQL Server, and it runs most of the R processing. A lot of the coordination and handling of result sets in &lt;code&gt;BxlServer.exe&lt;/code&gt; is handled by a dll loaded by &lt;code&gt;BxlServer.exe&lt;/code&gt;: &lt;code&gt;BxServerLink.dll&lt;/code&gt;. Below we see how the &lt;code&gt;BxServerLink.dll&lt;/code&gt; is loaded by &lt;code&gt;Bxlserver.exe&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sql_r_services_8_rstudio_bxserverlink.png&quot; width=&quot;602&quot; height=&quot;21&quot;  &gt;
&lt;strong&gt;Figure 14:&lt;/strong&gt; &lt;em&gt;BxServerLink Loaded by BxlServer.exe&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Let's go back to &lt;em&gt;Figure 13&lt;/em&gt; , where we see how &lt;code&gt;rsession.exe&lt;/code&gt; hosts &lt;code&gt;BxlServer.exe&lt;/code&gt;. How does that work, I mean - &lt;code&gt;rsession.exe&lt;/code&gt; is a CRAN R executable, and it does not know anything about Microsoft R Services and &lt;code&gt;BxlServer.exe&lt;/code&gt;? The answer is &lt;code&gt;R.dll&lt;/code&gt;; when &lt;code&gt;rsession.exe&lt;/code&gt; loads &lt;code&gt;R.dll&lt;/code&gt; (which is a Microsoft dll), the &lt;code&gt;R.dll&lt;/code&gt; then starts to load other dll's. But, &lt;code&gt;BxlServer.exe&lt;/code&gt; is not a dll, and it runs in a separate process, surely &lt;code&gt;R.dll&lt;/code&gt; cannot do that? No, it cannot - but what it does do is to load a dll acting as a conduit: the &lt;code&gt;RxLink.dll&lt;/code&gt;. The &lt;code&gt;RxLink.dll&lt;/code&gt; creates a new process in where &lt;code&gt;BxlServer.exe&lt;/code&gt; runs, and that is how communication happens between &lt;code&gt;rsession.exe&lt;/code&gt; and &lt;code&gt;BxlServer.exe&lt;/code&gt;. And that is also what happens in SQL Server R Services where &lt;code&gt;Rterm.exe&lt;/code&gt; is the &quot;host&quot;. &lt;code&gt;Rterm.exe&lt;/code&gt; loads the &lt;code&gt;R.dll&lt;/code&gt; which loads &lt;code&gt;RxLink.dll&lt;/code&gt; who then creates a process for &lt;code&gt;BxlServer.exe&lt;/code&gt;, and &lt;code&gt;BxlServer.exe&lt;/code&gt; loads &lt;code&gt;BxLinkServer.dll&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; In the next Internals post we'll look more at &lt;code&gt;RxLink.dll&lt;/code&gt;, and &lt;code&gt;BxLinkServer.dll&lt;/code&gt;.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Finally, let's make sure that &lt;code&gt;BxlServer.exe&lt;/code&gt; actually is doing something when we execute an external script in SQL Server R Services. For that we'll use some code we wrote in &lt;a href=&quot;/2017/05/01/microsoft-sql-server-r-services-internals-v/&quot;&gt;Internals V&lt;/a&gt;, where we discussed parallelism:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Setup&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;USE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;master&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;GO&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NOCOUNT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;GO&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='6' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line='7' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;DROP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DATABASE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IF&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;EXISTS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TestParallel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='8' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;GO&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='9' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line='10' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DATABASE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TestParallel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='11' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;GO&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='12' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line='13' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;USE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TestParallel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='14' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;GO&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='15' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line='16' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;DROP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IF&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;EXISTS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dbo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rand_30M&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='17' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dbo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rand_30M&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RowID&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bigint&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;identity&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;primary&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='18' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                          &lt;span class=&quot;n&quot;&gt;rand1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rand2&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rand3&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rand4&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='19' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                          &lt;span class=&quot;n&quot;&gt;rand5&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='20' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line='21' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dbo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rand_30M&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rand1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rand2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rand3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rand4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rand5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='22' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TOP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30000000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;CAST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;ABS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CHECKSUM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NEWID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;14&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='23' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;CAST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;ABS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CHECKSUM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NEWID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='24' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;CAST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;ABS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CHECKSUM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NEWID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='25' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;CAST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;ABS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CHECKSUM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NEWID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;14&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='26' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;CAST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;ABS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CHECKSUM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NEWID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='27' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;CAST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;ABS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CHECKSUM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NEWID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='28' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;objects&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;o1&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='29' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;CROSS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;objects&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;o2&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='30' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;CROSS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;objects&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;o3&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='31' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;CROSS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;objects&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;o4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='32' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;GO&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 2:&lt;/strong&gt; &lt;em&gt;Setup of Database, Table and Data&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The data we create in &lt;em&gt;Code Snippet 2&lt;/em&gt; makes absolutely no sense at all, but it will serve our purposes of have some volume of data to work with, and cause the execution to run for a little while.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; Go back to &lt;a href=&quot;/2017/05/01/microsoft-sql-server-r-services-internals-v/&quot;&gt;Internals - V&lt;/a&gt; if you are interested in seeing what this code does.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The code we want to execute in SQL Server looks like so:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Execute from SQL Server&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;EXEC&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sp_execute_external_script&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;          &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;language&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'R'&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;        &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;             #Sys.sleep(30)
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;             pid &amp;lt;- Sys.getpid()
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='6' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;             r &amp;lt;- rxLinMod(y ~ rand1 + rand2 + rand3 + rand4 + rand5,
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='7' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                           data=InputDataSet)
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='8' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line='9' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;             coef &amp;lt;- r$coefficients
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='10' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;             icept &amp;lt;- coef&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='11' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;              OutputDataSet &amp;lt;- data.frame(pid=pid, nRows=r$nValidObs,
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='12' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                                          intercept=icept)'&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='13' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;       &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;input_data_1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='14' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;              SELECT  y, rand1, rand2, rand3,
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='15' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                      rand4, rand5
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='16' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;              FROM dbo.rand_30M'&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='17' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;WITH&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;RESULT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SETS&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nRows&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;intercept&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FLOAT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='18' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 3:&lt;/strong&gt; &lt;em&gt;Linear Regression in SQL Server&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;To run this:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Restart the launchpad service (this is to clean-up any RTerm processes).&lt;/li&gt;
&lt;li&gt;Navigate to the &lt;code&gt;Launchpad.exe&lt;/code&gt; process in &lt;em&gt;Process Explorer&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Execute the code in &lt;em&gt;Code Snippet 3&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;While the code is executing, look in &lt;em&gt;Process Explorer&lt;/em&gt; for RTerm processes.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Among the Rterm and BxlServer processes you should see one &lt;code&gt;BxlServer.exe&lt;/code&gt; process that has a CPU value, as well as consuming some memory:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sql_r_services_8_bxlserver_processing.png&quot; width=&quot;646&quot; height=&quot;66&quot;  &gt;
&lt;strong&gt;Figure 15:&lt;/strong&gt; &lt;em&gt;BxlServer Processing&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;So, as I mentioned above, it is the &lt;code&gt;BxlServer.exe&lt;/code&gt; which is doing he heavy lifting in SQL Server R Services.&lt;/p&gt;

&lt;h2&gt;Summary&lt;/h2&gt;

&lt;p&gt;In this post we have now seen what happens when executing &lt;code&gt;sp_execute_external_script&lt;/code&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;SQL Server calls into the launchpad service.&lt;/li&gt;
&lt;li&gt;The launchpad service calls into the &lt;code&gt;Rlauncher.dll&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;Rlauncher.dll&lt;/code&gt; creates Rterm processes.&lt;/li&gt;
&lt;li&gt;Through Rterm, the &lt;code&gt;R.dll&lt;/code&gt; is loaded together with &lt;code&gt;RxLink.dll&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;RxLink.dll&lt;/code&gt; creates the &lt;code&gt;BxlServer.exe&lt;/code&gt; process.&lt;/li&gt;
&lt;li&gt;To coordinate with SQL Server, &lt;code&gt;BxlServer.exe&lt;/code&gt; loads &lt;code&gt;BxServerLink.dll&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Below I have tried to describe it in a figure:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sql_r_services_8_arch_overview.png&quot; width=&quot;650&quot; height=&quot;194&quot;  &gt;
&lt;strong&gt;Figure 15:&lt;/strong&gt; &lt;em&gt;BxlServer Processing&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Notice how, in &lt;em&gt;Figure 15&lt;/em&gt;, there is nothing about how data gets back to SQL Server. That is something we will discuss in next post. Oh and yes, &lt;em&gt;Figure 15&lt;/em&gt; looks very much like one of the figures you can see in this &lt;a href=&quot;https://docs.microsoft.com/en-us/sql/advanced-analytics/r/new-components-in-sql-server-to-support-r&quot;&gt;post&lt;/a&gt;, and I freely admit I have looked at it :).&lt;/p&gt;

&lt;h2&gt;~ Finally&lt;/h2&gt;

&lt;p&gt;If you have comments, questions etc., please comment on this post or &lt;a href=&quot;mailto:niels.it.berglund@gmail.com&quot;&gt;ping&lt;/a&gt; me.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Interesting Stuff - Week 28</title>
   <link href="http://nielsberglund.com/2017/07/16/interesting-stuff-week-28/"/>
   <updated>2017-07-16T20:34:07+02:00</updated>
   <id>http://nielsberglund.com/2017/07/16/interesting-stuff---week-28</id>
   <content type="html">&lt;p&gt;Throughout the week, I read a lot of blog-posts, articles, etc., that has to do with things that interest me&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;data science&lt;/li&gt;
&lt;li&gt;data in general&lt;/li&gt;
&lt;li&gt;distributed computing&lt;/li&gt;
&lt;li&gt;SQL Server&lt;/li&gt;
&lt;li&gt;transactions (both db as well as non db)&lt;/li&gt;
&lt;li&gt;and other &quot;stuff&quot;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This is the &quot;roundup&quot; of the posts that has been most interesting to me, for the week just gone by.&lt;/p&gt;

&lt;!--more--&gt;


&lt;h2&gt;SQL Server&lt;/h2&gt;

&lt;p&gt;This weeks SQL Server topic, has quite a lot about graph databases. This is an interesting subject seeing SQL Server 2017's built-in graph capability.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.acolyer.org/2017/07/07/do-we-need-specialized-graph-databases-benchmarking-real-time-social-networking-applications/&quot;&gt;Do we need specialized graph databases? Benchmarking real-time social networking applications&lt;/a&gt;. In this white paper dissection, &lt;a href=&quot;https://blog.acolyer.org&quot;&gt;Andrew&lt;/a&gt; queries the need for specialized graph databases. Please read and judge for yourselves.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.red-gate.com/simple-talk/sql/t-sql-programming/sql-graph-objects-sql-server-2017-good-bad/&quot;&gt;SQL Graph Objects in SQL Server 2017: the Good and the Bad&lt;/a&gt;. &lt;a href=&quot;https://www.red-gate.com/simple-talk/author/dennes-torres/&quot;&gt;Dennes Torres&lt;/a&gt; has a really great blog-post about the graph capabilities in SQL Server 2017.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://sqlblog.com/blogs/greg_low/archive/2017/07/10/what-s-in-a-name-how-should-sql-server-2017-graph-edge-tables-be-named.aspx&quot;&gt;What’s in a name? How should SQL Server 2017 Graph Edge tables be named?&lt;/a&gt;. Based on the post by Dennes (mentioned above), Greg Low posts some thoughts about naming of edge tables in graph databases.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://channel9.msdn.com/Shows/Data-Exposed/Setting-up-SQL-Server-High-Availability-between-Windows-and-Linux-with-SQL-Server-2017&quot;&gt;Setting up SQL Server High-Availability between Windows and Linux with SQL Server 2017&lt;/a&gt;. &lt;a href=&quot;https://blogs.msdn.microsoft.com/slavao&quot;&gt;Slava Oks&lt;/a&gt; and &lt;a href=&quot;https://azure.microsoft.com/en-us/blog/author/tobiast/&quot;&gt;Tobias Ternström&lt;/a&gt; (the &quot;SQL Server on Linux&quot; Brothers) talks about how to set up SQL server 2017 for high availability between Linux and Windows.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Streaming&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://data-artisans.com/blog/complex-event-generation-business-process-monitoring-using-apache-flink&quot;&gt;Complex Event Generation for Business Process Monitoring using Apache Flink&lt;/a&gt;. Blog-post about how Apache Flink is being used for Complex Event Processing (CEP).&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;.NET&lt;/h2&gt;

&lt;p&gt;This week I came across two very interesting blogs, that cover the &quot;nitty-gritty&quot; of .NET, and here follows a couple of really interesting posts.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://adamsitnik.com/Value-Types-vs-Reference-Types/&quot;&gt;Value Types vs Reference Types&lt;/a&gt;. I certainly hope that every single .NET developer knows about value types and reference types, but I bet that this post by &lt;a href=&quot;http://adamsitnik.com/&quot;&gt;Adam Sitnik&lt;/a&gt; will blow everyones mind away, when he drills deep, deep into value types and reference types!&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://mattwarren.org&quot;&gt;Memory Usage Inside the CLR&lt;/a&gt;. Another deep, deep drilling post about .NET. This time by &lt;a href=&quot;http://mattwarren.org&quot;&gt;Matthew Warren&lt;/a&gt;, and he goes into details about internal CLR memory! You gotta read it, it is awesome!&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://adamsitnik.com/Span/&quot;&gt;Span&lt;/a&gt;. Oooh, this is &quot;sexy&quot;! &lt;a href=&quot;http://adamsitnik.com/&quot;&gt;Adam Sitnik&lt;/a&gt; posts about how to work with both managed and unmanaged memory in ,NET in a safe and efficient way!&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Data Science&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blogs.msdn.microsoft.com/rserver/2017/07/07/set-up-an-auto-scale-environment-to-operationalize-your-r-analytics-with-just-one-click/&quot;&gt;Set up an auto-scale environment to operationalize your R analytics, with just ONE CLICK&lt;/a&gt;. How to set up an auto-scale environment for operationalization of R analytics using Azure and Microsoft R Server.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;SQL Server R Services&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/2017/07/11/microsoft-sql-server-r-services-internals-vii/&quot;&gt;Microsoft SQL Server R Services - Internals VII&lt;/a&gt;. I finally managed to get the &lt;a href=&quot;/2017/07/11/microsoft-sql-server-r-services-internals-vii/&quot;&gt;Internals - VII&lt;/a&gt; post out there! I do apologize it took so long. Anyway, here we look at what files and sub-directories are created - and by whom - when executing an external R script.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I am busy working on &lt;em&gt;Microsoft SQL Server R Services - Internals VIII&lt;/em&gt;, and hopefully it won't take as long as &lt;a href=&quot;/2017/07/11/microsoft-sql-server-r-services-internals-vii/&quot;&gt;VII&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;~ Finally&lt;/h2&gt;

&lt;p&gt;That's all for this week. I hope you enjoy what I did put together. If you have ideas for what to cover, please comment on this post or &lt;a href=&quot;mailto:niels.it.berglund@gmail.com&quot;&gt;ping&lt;/a&gt; me.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Microsoft SQL Server R Services - Internals VII</title>
   <link href="http://nielsberglund.com/2017/07/11/microsoft-sql-server-r-services-internals-vii/"/>
   <updated>2017-07-11T20:08:13+02:00</updated>
   <id>http://nielsberglund.com/2017/07/11/microsoft-sql-server-r-services---internals-vii</id>
   <content type="html">&lt;p&gt;(WOW, I finally managed to get this post out! Yay to me!!)&lt;/p&gt;

&lt;p&gt;This post is part of a series of blog-posts about Microsoft SQL Server R Services:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;/2017/03/04/microsoft-sql-server-2016-r-services-installation/&quot;&gt;Microsoft SQL Server 2016 R Services Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2017/03/18/microsoft-sql-server-r-services-internals-i/&quot;&gt;Microsoft SQL Server R Services - Internals I&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2017/04/02/microsoft-sql-server-r-services-internals-ii/&quot;&gt;Microsoft SQL Server R Services - Internals II&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2017/04/13/microsoft-sql-server-r-services-internals-iii/&quot;&gt;Microsoft SQL Server R Services - Internals III&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2017/04/23/microsoft-sql-server-r-services-internals-iv/&quot;&gt;Microsoft SQL Server R Services - Internals IV&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2017/05/01/microsoft-sql-server-r-services-internals-v/&quot;&gt;Microsoft SQL Server R Services - Internals V&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2017/05/16/microsoft-sql-server-r-services-internals-vi/&quot;&gt;Microsoft SQL Server R Services - Internals VI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Microsoft SQL Server R Services - Internals VII (this post)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2017/07/22/microsoft-sql-server-r-services-internals-viii/&quot;&gt;Microsoft SQL Server R Services - Internals VIII&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;More to come (hopefully)&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;This post is the eighth post about Microsoft SQL Server R Services, and the seventh post that drills down into the internal of how it works. In this post we will look more at some of the directories that are created when we execute &lt;code&gt;sp_execute_external_script&lt;/code&gt;, as well as files being created in those directories.&lt;/p&gt;

&lt;!--more--&gt;


&lt;h2&gt;Recap&lt;/h2&gt;

&lt;p&gt;In previous posts(&lt;a href=&quot;/2017/04/02/microsoft-sql-server-r-services-internals-ii/&quot;&gt;here&lt;/a&gt;, &lt;a href=&quot;/2017/04/13/microsoft-sql-server-r-services-internals-iii/&quot;&gt;here&lt;/a&gt;, &lt;a href=&quot;/2017/04/23/microsoft-sql-server-r-services-internals-iv/&quot;&gt;here&lt;/a&gt; and &lt;a href=&quot;/2017/05/01/microsoft-sql-server-r-services-internals-v/&quot;&gt;here&lt;/a&gt;) we have talked about how the launchpad service creates a number of &lt;strong&gt;RTerm&lt;/strong&gt; processes when we execute an &lt;code&gt;sp_execute_external_script&lt;/code&gt; request. The number of processes are configurable by the &lt;code&gt;PROCESS_POOL_SQLSATELLITE_GROWTH&lt;/code&gt; setting in the &lt;code&gt;rlauncher.config&lt;/code&gt; file, and by default 5 processes are created. These processes are added to a process pool, and when executing subsequent requests, or concurrent requests from different sessions, processes are picked up from the pool and used. At the same time new processes are created and added to the pool.&lt;/p&gt;

&lt;p&gt;In the &lt;a href=&quot;/2017/05/16/microsoft-sql-server-r-services-internals-vi/&quot;&gt;Microsoft SQL Server R Services - Internals VI&lt;/a&gt; post we talked about the directories that are created when executing &lt;code&gt;sp_execute_external_script&lt;/code&gt;. We saw, when we execute the script, how (with a default &lt;code&gt;PROCESS_POOL_SQLSATELLITE_GROWTH&lt;/code&gt; setting):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Three directories are created initially, the first one being the directory for the session - this is the R working directory.&lt;/li&gt;
&lt;li&gt;Then two processes, which will use the second and third directory.&lt;/li&gt;
&lt;li&gt;Then one directory followed by one process, until we're done.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;From the above we understand that each process has a backing directory, and in the &lt;a href=&quot;/2017/05/16/microsoft-sql-server-r-services-internals-vi/&quot;&gt;post&lt;/a&gt; we saw how the various directories had some files and sub-directories inside, as in &lt;em&gt;Figure 1 below&lt;/em&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sql_r_services_6_dir_content.png&quot; width=&quot;291&quot; height=&quot;118&quot;  &gt;
&lt;strong&gt;Figure 1:&lt;/strong&gt; &lt;em&gt;Directory Content&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The figure above is from the &lt;a href=&quot;/2017/05/16/microsoft-sql-server-r-services-internals-vi/&quot;&gt;Internals - VI&lt;/a&gt; post. In that post we could not really determine where the sub-directories came from. So in this post let us figure out what the created files are for, and from where the sub-directories originate (or at least let us try to figure it out).&lt;/p&gt;

&lt;h2&gt;Files&lt;/h2&gt;

&lt;p&gt;In various documentation of SQL Server R Services it is stated that the directories created during execution of &lt;code&gt;sp_execute_external_script&lt;/code&gt; is to store files, intermediate results etc. We will run some code to see what files are created, but before that let's set things up to make life somewhat easier for us:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Stop the launchpad service.&lt;/li&gt;
&lt;li&gt;Delete any sub directories of the user account directories in the &lt;code&gt;C:\&amp;lt;sql_instance_path&amp;gt;\MSSQL\ExtensibilityData&lt;/code&gt; directory. Do NOT delete the user account directories themselves.&lt;/li&gt;
&lt;li&gt;Open the &lt;code&gt;rlauncher.config&lt;/code&gt; file in a text editor and change the value of &lt;code&gt;JOB_CLEANUP_ON_EXIT&lt;/code&gt; to 0, and save the file (you need to do this as admin).&lt;/li&gt;
&lt;li&gt;Restart the launchpad service.&lt;/li&gt;
&lt;/ol&gt;


&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; By setting the &lt;code&gt;JOB_CLEANUP_ON_EXIT&lt;/code&gt; to 0 we tell the launchpad service to not delete any directories etc., after we have executed (the executing process will still be torn down though).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The code we initially want to run is similar to what we ran in &lt;a href=&quot;/2017/05/16/microsoft-sql-server-r-services-internals-vi/&quot;&gt;Internals - VI&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Code&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;EXEC&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sp_execute_external_script&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;language&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'R'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                                 &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                                 pid &amp;lt;- Sys.getpid()
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                                 d &amp;lt;- getwd()
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                                 cat(paste0(&quot;ProcessId: &quot;, pid))
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='6' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                                 cat(&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&quot;)
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='7' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                                 cat(paste0(&quot;WorkDir: &quot;, d))
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='8' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                                 cat(&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&quot;)
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='9' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                                 OutputDataSet&amp;lt;-data.frame(ProcessId=pid,WorkingDir=d)'&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='10' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;WITH&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;RESULT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SETS&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ProcessID&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;WorkingDirectory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nvarchar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 1:&lt;/strong&gt; &lt;em&gt;External Script&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;As you see in &lt;em&gt;Code Snippet 1&lt;/em&gt;, the R script captures information about the process id we execute under as well as the working directory. It uses the &lt;code&gt;cat&lt;/code&gt; function to output the data, the question is where it outputs it to? Normally &lt;code&gt;cat&lt;/code&gt; would output to the standard output connection, the console, if no file name has been given as argument. So let us see what happens when we execute the code.&lt;/p&gt;

&lt;p&gt;In SQL Server Management Studio (SSMS) - under the &lt;em&gt;Results&lt;/em&gt; tab, I get the returning result set containing the process id as well as the working directory path. Under the &lt;em&gt;Messages&lt;/em&gt; tab I get something like what is shown in &lt;em&gt;Figure 2&lt;/em&gt; below:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sql_r_services_7_output1.png&quot; width=&quot;443&quot; height=&quot;122&quot;  &gt;
&lt;strong&gt;Figure 2:&lt;/strong&gt; &lt;em&gt;Output from R Script&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;So that is the result from the &lt;code&gt;cat&lt;/code&gt; function. This makes sense as we can see the &lt;em&gt;Messages&lt;/em&gt; tab as something like a console. But is the output from &lt;code&gt;cat&lt;/code&gt; anywhere else? Let's go and have a look in the user account directory in &lt;code&gt;C:\&amp;lt;sql_instance_path&amp;gt;\MSSQL\ExtensibilityData&lt;/code&gt;, and the specific account used when executing the script. It is most likely &lt;em&gt;MSSQLSERVER01&lt;/em&gt; if you execute from a default instance, but if you are unsure you can have a look at the output from the script and the value for the working directory. Just before the &lt;code&gt;Guid&lt;/code&gt; value is the name of the account used.&lt;/p&gt;

&lt;p&gt;When we look under the user account directory, we'll see multiple directories, all with a &lt;code&gt;Guid&lt;/code&gt; like string as name. As we covered in previous posts, these directories are the backing directories for the processes created. When you look through these directories you'll see (as we said in &lt;a href=&quot;/2017/05/16/microsoft-sql-server-r-services-internals-vi/&quot;&gt;Internals VI&lt;/a&gt;), that most of the directories look the same; they have one subdirectory and 3 files. There are however two directories that are somewhat different; one is empty, and that is the working directory, and one that has four files in it. The one directory with four files in it is the directory for the process the code executed under (I call it process directory), and when you look in that directory you see something like so:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sql_r_services_7_outputdir.png&quot; width=&quot;579&quot; height=&quot;139&quot;  &gt;
&lt;strong&gt;Figure 3:&lt;/strong&gt; &lt;em&gt;Contents Process Directory&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;As you see in &lt;em&gt;Figure 3&lt;/em&gt; there are two &lt;code&gt;.txt&lt;/code&gt; files in the directory, and we can see (from the Size), that it looks like the &lt;code&gt;stdout0.txt&lt;/code&gt; has some content. When you open the &lt;code&gt;stdout0.txt&lt;/code&gt; file you see how it contains the output from the &lt;code&gt;cat&lt;/code&gt; calls in the script. If there had been errors during script execution, the errors would have been written to the &lt;code&gt;stderr0.txt&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;OK, so that is the &lt;code&gt;stdout.txt&lt;/code&gt; and `stderr.txt files - what about the other two files:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;7F73C367-0684-4B89-9DA7-86BEEA362FD2.R&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Rscriptae84173870&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; The filenames above are what I see on my machine. If you run this, your filenames will most definitely be different.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Let's start with the R file, which looks something like so (paths made short):&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;title &quot;R File&quot;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RevoScaleR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;rxIgnoreResult&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;.Call&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'RxSqlSatelliteCall'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;          &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sessionId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'1C49FD9B-BA79-4C1E-993B-E04669259CD8'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;               &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;taskId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;               &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;51318&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='6' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;               &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;logPath&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='7' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;               &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pipeName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'DataSet1_1Col_Int_1Row'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='8' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;               &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sqlSatellitePath&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'C:\&amp;lt;sql_inst_binn_path&amp;gt;\
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='9' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                                  sqlsatellite.dll'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='10' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;               &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;errorToStdError&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 2:&lt;/strong&gt; &lt;em&gt;R File Set Up Satellite Connection&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This file only exists in the process directory, and the file is used to establish a named pipe connection with the SQL Satellite (we'll cover SQL Satellite in future posts). As we see in &lt;em&gt;Code Snippet 2&lt;/em&gt;, the script:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Loads the &lt;code&gt;RevoScaleR&lt;/code&gt; package&lt;/li&gt;
&lt;li&gt;Executes the &lt;code&gt;.Call&lt;/code&gt; function to call into a method named &lt;code&gt;RxSqlSatelliteCall&lt;/code&gt;, and sends in some arguments for that method.&lt;/li&gt;
&lt;/ul&gt;


&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; The &lt;code&gt;.Call&lt;/code&gt; function in R is used to call into C/C++ code.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The arguments sent in to the method are for:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What port to use for then named pipe connection.&lt;/li&gt;
&lt;li&gt;Name of the named pipe.&lt;/li&gt;
&lt;li&gt;The path to where the SQL Satellite is.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;What uses this file? Well, take a look at the &lt;code&gt;Rscriptae84173870&lt;/code&gt; file, it looks something like so (once again paths shortened):&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Session&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RevoScaleR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;sessionDirectory&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;s1&quot;&gt;'C:\&amp;lt;sql_inst_ext_data_path&amp;gt;\
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;     MSSQLSERVER01\7F73C367-0684-4B89-9DA7-86BEEA362FD2'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;sessionId&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'7F73C367-0684-4B89-9DA7-86BEEA362FD2'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='6' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;scriptFile&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file.path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sessionDirectory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='7' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                        &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;paste&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sessionId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'.R'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sep&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='8' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;rxIgnoreCallResult&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;.Call&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'RxSqlSessionStart'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='9' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                   &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sessionDirectory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sessionDirectory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='10' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                        &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sessionId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sessionId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='11' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                        &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;waitTime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;-1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='12' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scriptFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 3:&lt;/strong&gt; &lt;em&gt;Session Start&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Ah, looking at the code in &lt;em&gt;Code Snippet 3&lt;/em&gt;, we see how that code actually:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Loads the &lt;code&gt;RevoScaleR&lt;/code&gt; package.&lt;/li&gt;
&lt;li&gt;Defines the directory for the executing process&lt;/li&gt;
&lt;li&gt;Creates a &lt;code&gt;scriptFile&lt;/code&gt; argument, pointing to the file in &lt;em&gt;Code Snippet 2&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Starts the process.&lt;/li&gt;
&lt;li&gt;Calls the file from &lt;em&gt;Code Snippet 2&lt;/em&gt; in the &lt;code&gt;source&lt;/code&gt; call.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The result of the code in &lt;em&gt;Code Snippet 2&lt;/em&gt; and &lt;em&gt;Code Snippet 3&lt;/em&gt; is that after execution a named pipe connection has been made to the SQL Satellite dll, and as I said above - we'll cover the SQL Satellite in a subsequent blog-post.&lt;/p&gt;

&lt;h2&gt;Files &amp;amp; Sub-directory Origins&lt;/h2&gt;

&lt;p&gt;Above we saw (at least kind of), what the files inside the process directory do. What about the sub directory that exist in all backing directories, what does that do, and where does it come from? Remember from the &lt;a href=&quot;/2017/05/16/microsoft-sql-server-r-services-internals-vi/&quot;&gt;Internals - VI&lt;/a&gt; post that we said that when we were using &lt;strong&gt;WinDbg&lt;/strong&gt; and had break point at &lt;code&gt;KERNELBASE!CreateDirectoryW&lt;/code&gt; we couldn't see the sub-directory being created.&lt;/p&gt;

&lt;p&gt;There is also a question about who is creating the files that we have just discussed. The obvious answer would be that it is the launchpad service together with the &lt;code&gt;rlauncher.dll&lt;/code&gt; that create the files. Let's try and prove that.&lt;/p&gt;

&lt;p&gt;So, to set things up:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Stop the launchpad service.&lt;/li&gt;
&lt;li&gt;Delete any sub directories of the user account directories in the &lt;code&gt;C:\&amp;lt;sql_instance_path&amp;gt;\MSSQL\ExtensibilityData&lt;/code&gt; directory. Do NOT delete the user account directories themselves.&lt;/li&gt;
&lt;li&gt;Restart the launchpad service.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;This time we will use &lt;a href=&quot;https://technet.microsoft.com/en-us/sysinternals/processmonitor.aspx&quot;&gt;&lt;em&gt;Process Monitor&lt;/em&gt;&lt;/a&gt; from &lt;strong&gt;Sysinternals&lt;/strong&gt; instead of WinDbg, as it will be easier to see what files (and directories) are created and by whom.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; Process Monitor is an advanced monitoring tool for Windows that shows real-time file system, Registry and process/thread activity.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;When you run Process Monitor you will see that it monitors (and logs) a LOT on the machine you run it on:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sql_r_services_7_procmon1.png&quot; width=&quot;596&quot; height=&quot;479&quot;  &gt;
&lt;strong&gt;Figure 4:&lt;/strong&gt; &lt;em&gt;Process Monitor Start Up&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In &lt;em&gt;Figure 4&lt;/em&gt; you see output from Process Monitor right after startup on my machine. In order to get something useful out of what we see, we need to filter out events, or rather say what events we are interested in. We'll start with suppressing event monitoring to begin with, as well as not choosing to see events of certain types:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sql_r_services_7_procmon2.png&quot; width=&quot;423&quot; height=&quot;87&quot;  &gt;
&lt;strong&gt;Figure 5:&lt;/strong&gt; &lt;em&gt;Suppress Event Collection&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In &lt;em&gt;Figure 5&lt;/em&gt; we see the tool-bar of Process Monitor, and how we have paused capturing of events by clicking on the magnifying glass (in the first outlined box). We also have chosen not to receive any events related to registry, network and profiling activity (the second outlined box).&lt;/p&gt;

&lt;p&gt;Now we are ready to start to define the events we are interested in, and we do that using the &lt;em&gt;Filter&lt;/em&gt; menu. We start with resetting the filters:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sql_r_services_7_procmon_reset_filter.png&quot; width=&quot;380&quot; height=&quot;262&quot;  &gt;
&lt;strong&gt;Figure 6:&lt;/strong&gt; &lt;em&gt;Reset Process Monitor's Filters&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;When you reset the filters, sometimes event capturing will be enabled again. If it is, just disable it once more. Now is probably a good time to clear out the captured events at startup, so under the &lt;em&gt;Edit&lt;/em&gt; menu click &lt;em&gt;Clear Display&lt;/em&gt;. Having reset the filters and cleared out the display, we can now create a filter to use, to capture the events we are interested in. So, what are we interested in?&lt;/p&gt;

&lt;p&gt;Well, we would like to see what files are being created under the subdirectories of the user account you will execute your R script under. For me it is: &lt;code&gt;C:\Program Files\Microsoft SQL Server\MSSQL13.MSSQLSERVER\MSSQL\ExtensibilityData\MSSQLSERVER01&lt;/code&gt;, and this will be the starting point for a filter to filter out events.&lt;/p&gt;

&lt;p&gt;To create a filter, under the &lt;em&gt;Filter&lt;/em&gt; menu click the Filter menu item, and the &quot;Process Monitor Filter&quot; dialog will be shown:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sql_r_services_7_procmon_filter_dialog.png&quot; width=&quot;594&quot; height=&quot;239&quot;  &gt;
&lt;strong&gt;Figure 7:&lt;/strong&gt; &lt;em&gt;Process Monitor Filter Dialog&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;To create the filter we enter the conditions we want to match:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The &lt;em&gt;Path&lt;/em&gt; (from first drop down) should &lt;em&gt;begins with&lt;/em&gt; (from second drop down): &lt;code&gt;C:\Program Files\Microsoft SQL Server\MSSQL13.MSSQLSERVER\MSSQL\ExtensibilityData\MSSQLSERVER01&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Operation&lt;/em&gt; (first drop down) &lt;em&gt;is&lt;/em&gt; (second drop down): &lt;code&gt;CreateFile&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Both of those conditions should be &lt;em&gt;Include&lt;/em&gt;:ed and &lt;em&gt;Add&lt;/em&gt;:ed. At the end the filter looks like so:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sql_r_services_7_procmon_filter_create.png&quot; width=&quot;650&quot; height=&quot;165&quot;  &gt;
&lt;strong&gt;Figure 8:&lt;/strong&gt; &lt;em&gt;Filter Created&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;You click &lt;em&gt;OK&lt;/em&gt;, and you are ready to roll:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Re-enable capturing of events in Process Monitor&lt;/li&gt;
&lt;li&gt;Execute the code in &lt;em&gt;Code Snippet 2&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;After executing the code, disable the capturing of events again in Process Monitor&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Process Monitor now shows quite a few events:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sql_r_services_7_procmon_capured_events.png&quot; width=&quot;576&quot; height=&quot;380&quot;  &gt;
&lt;strong&gt;Figure 9:&lt;/strong&gt; &lt;em&gt;Captured Create File Events&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Let's go back to the user account and find the backing directory for the process, as - at the moment - we are only interested in what happens in that directory. In my case it is &lt;code&gt;1EB243A4-AE41-4DBD-A315-44B52EECF4B9&lt;/code&gt;. To make it easier to see what happens in Process Monitor, we can change the filter somewhat:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;In the &lt;em&gt;Path&lt;/em&gt; column in Process Monitor right click on the first occurrence of the path including the process directory, and click &lt;em&gt;Copy&lt;/em&gt;:&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sql_r_services_7_procmon_find_path.png&quot; width=&quot;650&quot; height=&quot;323&quot;  &gt;
&lt;strong&gt;Figure 10:&lt;/strong&gt; &lt;em&gt;Copying the Path&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Then open the Filter dialog and:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Remove the filter condition for the &lt;em&gt;Path&lt;/em&gt;. That will cause the condition to be entered into the condition fields:&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sql_r_services_7_procmon_remove_filter.png&quot; width=&quot;650&quot; height=&quot;181&quot;  &gt;
&lt;strong&gt;Figure 11:&lt;/strong&gt; &lt;em&gt;After Remove Condition&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;In the conditions field enter the path to your process directory (the one you copied above).&lt;/li&gt;
&lt;li&gt;Click &lt;em&gt;Add&lt;/em&gt;, &lt;em&gt;Apply&lt;/em&gt;, and &lt;em&gt;OK&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The number of events displayed should now have been reduced significantly. For me it went from 265 events captured to 53.&lt;/p&gt;

&lt;p&gt;Now we can see how the launchpad service creates the &lt;code&gt;stdout0.txt&lt;/code&gt;, and &lt;code&gt;stderr0.txt&lt;/code&gt; files together with the &lt;code&gt;.R&lt;/code&gt; file (the image is cropped):&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sql_r_services_7_procmon_launchpad_create_file2.png&quot; width=&quot;650&quot; height=&quot;65&quot;  &gt;
&lt;strong&gt;Figure 12:&lt;/strong&gt; **&lt;/p&gt;

&lt;p&gt;However, the &lt;code&gt;Rscriptxxx&lt;/code&gt; file is not created by the launchpad service, but by &lt;code&gt;RTerm.exe&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sql_r_services_7_procmon_rterm.png&quot; width=&quot;558&quot; height=&quot;80&quot;  &gt;
&lt;strong&gt;Figure 13:&lt;/strong&gt; &lt;em&gt;RTerm Creating Files and Directories&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In &lt;em&gt;Figure 13&lt;/em&gt; we also see how - in addition to the Rscript file - a directory &lt;code&gt;Rtmp0AHI82&lt;/code&gt; is created, and inside that directory a file &lt;code&gt;file5f446ae7ae6&lt;/code&gt; is created. That particular file is not persisted regardless of the setting of &lt;code&gt;JOB_CLEANUP_ON_EXIT&lt;/code&gt;. I have not been able to figure out - yet - what that file contains, so if anyone out there knows, please let me know.&lt;/p&gt;

&lt;h2&gt;Summary&lt;/h2&gt;

&lt;p&gt;In this post we have seen how:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Output from R script (errors and print) are written to files in the processing directory by the launchpad service.&lt;/li&gt;
&lt;li&gt;The launchpad service also writes a script to establish a named piped connection to the SQL Satellite dll.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;Rterm.exe&lt;/code&gt; writes a script that starts a session, and &lt;code&gt;source&lt;/code&gt;:s the script file mentioned above.&lt;/li&gt;
&lt;li&gt;In addition to the session script, &lt;code&gt;Rterm.exe&lt;/code&gt; also creates a sub directory together with a file. The file is not persisted.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;~ Finally&lt;/h2&gt;

&lt;p&gt;First of all, if you have any insight in the files &lt;code&gt;Rterm.exe&lt;/code&gt; creates, please get in touch! Otherwise, if you have comments, questions etc., please comment on this post or &lt;a href=&quot;mailto:niels.it.berglund@gmail.com&quot;&gt;ping&lt;/a&gt; me.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Interesting Stuff - Week 27</title>
   <link href="http://nielsberglund.com/2017/07/09/interesting-stuff-week-27/"/>
   <updated>2017-07-09T19:15:08+02:00</updated>
   <id>http://nielsberglund.com/2017/07/09/interesting-stuff---week-27</id>
   <content type="html">&lt;p&gt;Throughout the week, I read a lot of blog-posts, articles, etc., that has to do with things that interest me&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;data science&lt;/li&gt;
&lt;li&gt;data in general&lt;/li&gt;
&lt;li&gt;distributed computing&lt;/li&gt;
&lt;li&gt;SQL Server&lt;/li&gt;
&lt;li&gt;transactions (both db as well as non db)&lt;/li&gt;
&lt;li&gt;and other &quot;stuff&quot;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This is the &quot;roundup&quot; of the posts that has been most interesting to me, for the week just gone by.&lt;/p&gt;

&lt;!--more--&gt;


&lt;h2&gt;.NET&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.infoq.com/articles/high-performance-dotnet&quot;&gt;Virtual Panel: High Performance Application in .NET&lt;/a&gt;. An &lt;a href=&quot;https://www.infoq.com/&quot;&gt;InfoQ&lt;/a&gt; panel discussion about performance in .NET. It's a very interesting read and it led me to the item below.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blogs.msdn.microsoft.com/dotnet/2017/06/07/performance-improvements-in-net-core/&quot;&gt;Performance Improvements in .NET Core&lt;/a&gt;. As the name says, a look at performance improvements in .NET Core. Having read this post as well as the post above, I'll make sure we'll start to look into .NET Core at &lt;a href=&quot;/derivco&quot;&gt;Derivco&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Streaming&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/@jaykreps/exactly-once-support-in-apache-kafka-55e1fdd0a35f&quot;&gt;Exactly-once Support in Apache Kafka&lt;/a&gt;. Woooo! This is so cool! A post about exactly-once support in Apache Kafka. I know I have said this before, but ... now we &lt;strong&gt;REALLY&lt;/strong&gt; need to start looking at Kafka.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Cloud&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.acolyer.org/2017/07/04/azure-data-lake-store-a-hyperscale-distributed-file-service-for-big-data-analytics/&quot;&gt;Azure Data Lake Store: a hyperscale distributed file service for big data analytics&lt;/a&gt;. &lt;a href=&quot;https://blog.acolyer.org&quot;&gt;Andrew&lt;/a&gt; takes a deep, deep look into the plumbing of Azure Data Lake.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.acolyer.org/2017/07/03/spanner-becoming-a-sql-system/&quot;&gt;Spanner: becoming a SQL system&lt;/a&gt;. Another post by &lt;a href=&quot;https://blog.acolyer.org&quot;&gt;Andrew&lt;/a&gt;. Here he looks into how Google's Spanner becomes more SQL like.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/azure/cosmos-db/change-feed&quot;&gt;Working with the change feed support in Azure Cosmos DB&lt;/a&gt;. The Azure Cosmos DB, becomes more and more &quot;juicy&quot;! This is how it supports a real-time feed of changes: the Change Feed Support.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Data Science&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.infoq.com/presentations/tensorflow-concepts&quot;&gt;In Depth TensorFlow&lt;/a&gt;. An &lt;a href=&quot;https://www.infoq.com/&quot;&gt;InfoQ&lt;/a&gt; presentation about Google's Tensorflow by one of the developers.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://buckwoody.wordpress.com/2017/07/06/quick-start-for-data-science/&quot;&gt;Quick Start for Data Science&lt;/a&gt;. &lt;a href=&quot;https://buckwoody.wordpress.com&quot;&gt;Buck Woody&lt;/a&gt; posts a quick introduction to Data Science. A must read for any &quot;budding&quot; data scientist out there.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;SQL Server R Services&lt;/h2&gt;

&lt;p&gt;I know, I know, I know - I have said this before, but I am nearly finished with part 7 of my &lt;a href=&quot;/2017/03/04/microsoft-sql-server-2016-r-services-installation/&quot;&gt;SQL Server R Services&lt;/a&gt; series. I have had a severe case of writers block for part 7, but 80% of it is done now. I promise!!&lt;/p&gt;

&lt;h2&gt;~ Finally&lt;/h2&gt;

&lt;p&gt;That's all for this week. I hope you enjoy what I did put together. If you have ideas for what to cover, please comment on this post or &lt;a href=&quot;mailto:niels.it.berglund@gmail.com&quot;&gt;ping&lt;/a&gt; me.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Interesting Stuff - Week 26</title>
   <link href="http://nielsberglund.com/2017/07/02/interesting-stuff-week-26/"/>
   <updated>2017-07-02T19:23:56+02:00</updated>
   <id>http://nielsberglund.com/2017/07/02/interesting-stuff---week-26</id>
   <content type="html">&lt;p&gt;Throughout the week, I read a lot of blog-posts, articles, etc., that has to do with things that interest me&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;data science&lt;/li&gt;
&lt;li&gt;data in general&lt;/li&gt;
&lt;li&gt;distributed computing&lt;/li&gt;
&lt;li&gt;SQL Server&lt;/li&gt;
&lt;li&gt;transactions (both db as well as non db)&lt;/li&gt;
&lt;li&gt;and other &quot;stuff&quot;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This is the &quot;roundup&quot; of the posts that has been most interesting to me, for the week just gone by.&lt;/p&gt;

&lt;!--more--&gt;


&lt;h2&gt;SQL Server&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://tomaztsql.wordpress.com/2017/06/28/graph-database-with-t-sql/&quot;&gt;Graph Database with T-SQL&lt;/a&gt;. &lt;a href=&quot;https://tomaztsql.wordpress.com&quot;&gt;Tomaz&lt;/a&gt; takes us through the new graph database functionality in SQL Server 2017. I so wanted to look into the graph capabilities of SQL Server 2017, but haven't had time, sigh!&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/sql/relational-databases/in-memory-oltp/faster-temp-table-and-table-variable-by-using-memory-optimization&quot;&gt;Faster temp table and table variable by using memory optimization&lt;/a&gt;. Oh, this is cool! The post talks about increasing performance for temp tables and table variables by using in-memory optimizations.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2017/07/01/sqlclr-certificates/&quot;&gt;SQLCLR and Certificates&lt;/a&gt;. A post by myself, discussing how to authorize SQLCLR assemblies for permissions other than &lt;code&gt;SAFE&lt;/code&gt;. In this post I probably also offend some people by saying I don't think that &lt;code&gt;TRUSTWORTHY&lt;/code&gt; is that bad.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2017/07/02/sql-server-2017-sqlclr-and-permissions/&quot;&gt;SQL Server 2017, SQLCLR and Permissions&lt;/a&gt;. Geez, I have been productive this week - a second post by me. While investigating the post above, I came across some changes in SQL Server 2017, regarding SQLCLR and permissions. This post is the result.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Data Science&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blogs.technet.microsoft.com/machinelearning/2017/06/28/using-azure-data-lake-and-r-for-fraud-detection/&quot;&gt;Using Azure Data Lake and R for Fraud Detection&lt;/a&gt;. A post about peta-scale fraud detection using R and Azure Data Lake.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blogs.technet.microsoft.com/machinelearning/2017/06/27/saving-snow-leopards-with-deep-learning-and-computer-vision-on-spark/&quot;&gt;Saving Snow Leopards with Deep Learning and Computer Vision on Spark&lt;/a&gt;. This is soooo cute! Using image analysis and Apache Spark to save Snow Leopards!!!&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blogs.msdn.microsoft.com/rserver/2017/06/29/end-to-end-loan-chargeoff-prediction-built-using-azure-hdinsight-spark-clusters-and-sql-server-2016-r-service/&quot;&gt;End to End Loan ChargeOff Prediction Built Using Azure HDInsight Spark Clusters and SQL Server 2016 R Service&lt;/a&gt;. Monitoring loan charge-off using either R and Apache Spark, or SQL Server 2016 R Services.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Streaming&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://data-artisans.com/blog/bettercloud-dynamic-alerting-apache-flink&quot;&gt;Dynamically Configured Stream Processing: How BetterCloud Built an Alerting System with Apache Flink&lt;/a&gt;. Building a real-time alerting system using Apache Flink.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Misc.&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blogs.msdn.microsoft.com/ericgu/2017/06/22/notdd/&quot;&gt;#NoTDD&lt;/a&gt;. A very thought provoking post regarding the advantages/disadvantages of TDD.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;~ Finally&lt;/h2&gt;

&lt;p&gt;That's all for this week. I hope you enjoy what I did put together. If you have ideas for what to cover, please comment on this post or &lt;a href=&quot;mailto:niels.it.berglund@gmail.com&quot;&gt;ping&lt;/a&gt; me.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>SQL Server 2017, SQLCLR and Permissions</title>
   <link href="http://nielsberglund.com/2017/07/02/sql-server-2017-sqlclr-and-permissions/"/>
   <updated>2017-07-02T08:18:48+02:00</updated>
   <id>http://nielsberglund.com/2017/07/02/sql-server-2017-sqlclr-and-permissions</id>
   <content type="html">&lt;p&gt;While I was writing the post about &lt;a href=&quot;/2017/07/01/sqlclr-certificates/&quot;&gt;SQLCLR and Certificates&lt;/a&gt;, I came across some strange behavior when I accidentally ran my code on an SQL Server 2017 instance. I quickly connected back to my SQL Server 2016 instance and continued. However, afterwards I started to look into the differences between SQLCLR in SQL Server 2017 and SQL Server 2016, and this post is the result of me &lt;del&gt;playing around&lt;/del&gt; investigating the changes.&lt;/p&gt;

&lt;!--more--&gt;


&lt;p&gt;&lt;strong&gt;UPDATE&lt;/strong&gt; 2017-07-23. This post has a &lt;a href=&quot;/2017/07/23/sql-server-2017-sqlclr-white-listing-assemblies/&quot;&gt;follow up post&lt;/a&gt; based on changes in SQL Server 2017 RC1.&lt;/p&gt;

&lt;p&gt;Let's start with a recap and an example&lt;/p&gt;

&lt;h2&gt;Recap&lt;/h2&gt;

&lt;p&gt;In all versions of SQL Server from 2005 (where SQLCLR was introduced) up to 2016; when you deploy assemblies to the database and you want the assemblies to be able to execute outside of the database it is deployed to, you assign a permission set to the assembly. There are three permission sets available, ranging from not allowing you to shoot yourself in the foot to blow your head off:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;SAFE&lt;/code&gt; - the code is not doing anything that you cannot do in T-SQL. You cannot shoot yourself in the foot any more than what you can do with T-SQL. This is the default.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;EXTERNAL_ACCESS&lt;/code&gt; - you can get outside of the local database, but only via &quot;approved&quot; assemblies, such as &lt;code&gt;ADO.NET&lt;/code&gt;, etc. You can definitely shoot yourself in the foot.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;UNSAFE&lt;/code&gt; - You can do pretty much what you want. You are free to blow your head off.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The permission set is assigned when you create the assembly:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Create Assembly&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ASSEMBLY&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;some_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'F:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;some_path&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;somedll.dll'&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;WITH&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PERMISSION_SET&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SAFE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EXTERNAL_ACCESS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UNSAFE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;GO&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 1:&lt;/strong&gt; &lt;em&gt;Creating an Assembly from Absolute Path&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In order to create an assembly with anything else than &lt;code&gt;SAFE&lt;/code&gt;, the database or assembly need to have additional authorizations, and that was what my &lt;a href=&quot;/2017/07/01/sqlclr-certificates/&quot;&gt;SQLCLR and Certificates&lt;/a&gt; post covered.&lt;/p&gt;

&lt;p&gt;To see what has changed in SQL Server 2017, let's look at some sample code. In &lt;em&gt;Code Snippet 1&lt;/em&gt; you see some C# code that we want to deploy to a SQL Server 2017 database:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Safe&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Sql2k17SqlClr&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;p&quot;&gt;&amp;#x7b;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Functions&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;p&quot;&gt;&amp;#x7b;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fn_clr_Adder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='6' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;p&quot;&gt;&amp;#x7b;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='7' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='8' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;p&quot;&gt;&amp;#x7d;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='9' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;p&quot;&gt;&amp;#x7d;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='10' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;p&quot;&gt;&amp;#x7d;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 1:&lt;/strong&gt; &lt;em&gt;Safe Code to be Deployed&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;After having built the project with the code in &lt;em&gt;Code Snippet 1&lt;/em&gt;, you would deploy it to a specific database in your SQL Server instance like so (the dll is named &lt;code&gt;Sql2k17SqlClr1.dll&lt;/code&gt;):&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Assembly Creation&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ASSEMBLY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Sql2k17SqlClr&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'W:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;lt;path_to_dll&amp;gt;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Sql2k17SqlClr1.dll'&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;GO&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 2:&lt;/strong&gt; &lt;em&gt;Create Safe Assembly&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The assembly we want to create in the database is definitely a safe assembly, as it is just doing some internal calculation, and in SQL Server (pre 2017), this would deploy just fine. In SQL Server 2017 however things are different. When you run the code in &lt;em&gt;Code Snippet 2&lt;/em&gt;, you will get following error:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sql2k17_safe.png&quot; width=&quot;430&quot; height=&quot;209&quot;  &gt;
&lt;strong&gt;Figure 1:&lt;/strong&gt; &lt;em&gt;Error Deploying Safe Assembly&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The error you see is more or less the same you'd receive if you - in SQL Server pre 2017 - tried to deploy an assembly as &lt;code&gt;EXTERNAL_ACCESS&lt;/code&gt; or &lt;code&gt;UNSAFE&lt;/code&gt;. You can read more about that particular issue in my &lt;a href=&quot;/2017/07/01/sqlclr-certificates/&quot;&gt;SQLCLR and Certificates&lt;/a&gt; post.&lt;/p&gt;

&lt;p&gt;One difference in the error message you see in &lt;em&gt;Figure 1&lt;/em&gt;, and what you would have received in pre SQL Server 2017 versions, is: &quot;&lt;em&gt;the 'clr strict security' option of sp_configure is set to 1&lt;/em&gt;&quot;. You may think; &quot;what is this, I have never seen that in other SQL Server versions&quot;. You are absolutely correct, so let's look at that  - and we'll start with &lt;strong&gt;Code Access Security&lt;/strong&gt; (&lt;strong&gt;CAS&lt;/strong&gt;)&lt;/p&gt;

&lt;h2&gt;Code Access Security&lt;/h2&gt;

&lt;p&gt;CAS is a security technology developed to provide the ability to protect system resources when a .NET assembly is executed. Such system resources could be: local files, files on a remote file system, registry keys, databases, printers and so on. CAS, in essence, was used to enforce security boundaries based on code origination or other identity aspects, and SQL Server's &lt;code&gt;PERMISSION_SET&lt;/code&gt; relied on the CAS security boundaries. That was how SQLCLR assemblies which only performed &quot;safe&quot; operations did not need any further authorizations.&lt;/p&gt;

&lt;p&gt;In recent versions of the .NET framework (around version 4.5), Microsoft has changed the relation between CAS and security boundaries, and CAS is no longer supported as a boundary! From a SQLCLR perspective that is a real &quot;bummer&quot;, as theoretically there is no control over what an assembly can and cannot do (whereas before &lt;code&gt;PERMISSION_SET&lt;/code&gt; controlled the abilities).&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; The above statement about no control what an assembly can and cannot do is not entirely correct as we will see further down.&lt;/p&gt;&lt;/blockquote&gt;

&lt;h3&gt;&lt;code&gt;clr strict security&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;With the changes of the implications of CAS, and in order to enhance the security of CLR assemblies, Microsoft has in SQL Server 2017 introduced an &lt;code&gt;sp_configure&lt;/code&gt; option called &lt;code&gt;clr strict security&lt;/code&gt;, which by default is set to 1 (on). When the setting is on, SQL Server treats all assemblies (&lt;code&gt;SAFE&lt;/code&gt;, &lt;code&gt;EXTERNAL_ACCESS&lt;/code&gt;, &lt;code&gt;UNSAFE&lt;/code&gt;) as if they were marked &lt;code&gt;UNSAFE&lt;/code&gt;. The implication of this is that you must either:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Set the database to be &lt;code&gt;TRUSTWORTHY&lt;/code&gt;, &lt;em&gt;OR&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Sign the assembly with a certificate that has a corresponding login with &lt;code&gt;UNSAFE ASSEMBLY&lt;/code&gt; permission, &lt;em&gt;OR&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Sign the assembly with an asymmetric key that has a corresponding login with &lt;code&gt;UNSAFE ASSEMBLY&lt;/code&gt; permission.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;If you changed the &lt;code&gt;clr strict security&lt;/code&gt; option to 0, the code in &lt;em&gt;Code Snippet 2&lt;/em&gt;, would work just fine. Likewise, if you didn't change the option, but instead set &lt;code&gt;TRUSTWORTHY ON&lt;/code&gt; on the database, it would also work.&lt;/p&gt;

&lt;h2&gt;Assembly Authorization&lt;/h2&gt;

&lt;p&gt;So, where are we? In order to create a safe assembly we now need to authorize it as we would an &lt;code&gt;EXTERNAL_ACCESS&lt;/code&gt; or &lt;code&gt;UNSAFE&lt;/code&gt;, so let's do that to the assembly that the code in &lt;em&gt;Code Snippet 2&lt;/em&gt; represents. We could do it by setting &lt;code&gt;TRUSTWORTHY&lt;/code&gt; to &lt;code&gt;ON&lt;/code&gt; for the database, and you who read my &lt;a href=&quot;/2017/07/01/sqlclr-certificates/&quot;&gt;SQLCLR and Certificates&lt;/a&gt; post know that I do not think that setting &lt;code&gt;TRUSTWORTHY&lt;/code&gt; to &lt;code&gt;ON&lt;/code&gt; is like &quot;opening the gates to hell&quot;, so I would not have an issue with doing that - even on a production database. That is however a discussion for another day, so let us do it by using a certificate.&lt;/p&gt;

&lt;p&gt;To recap from the &lt;a href=&quot;/2017/07/01/sqlclr-certificates/&quot;&gt;SQLCLR and Certificates&lt;/a&gt; post, to use a certificate you'd:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create a certificate, if you don't already have one.&lt;/li&gt;
&lt;li&gt;Create a &lt;code&gt;.pfx&lt;/code&gt; file from the certificate. Pfx stands for Personal Information Exchange, and we'll use it to sign your assembly.&lt;/li&gt;
&lt;li&gt;Sign the dll with the &lt;code&gt;.pfx&lt;/code&gt; file.&lt;/li&gt;
&lt;li&gt;In the database create a SQL Server certificate from the original certificate.&lt;/li&gt;
&lt;li&gt;In the database create login from the certificate.&lt;/li&gt;
&lt;li&gt;Grant the login &lt;code&gt;UNSAFE ASSEMBLY&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Create the dll in the database.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I already have a certificate and a &lt;code&gt;.pfx&lt;/code&gt; file created from when I wrote the &lt;a href=&quot;/2017/07/01/sqlclr-certificates/&quot;&gt;SQLCLR and Certificates&lt;/a&gt; post, so I'll re-use those and go ahead and sign the assembly with the &lt;code&gt;.pfx&lt;/code&gt; file:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Signing&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;signtool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sign&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NielsTestPfx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pfx&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;              &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;testPwd&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Sql2k17SqlClr1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dll&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 3:&lt;/strong&gt; &lt;em&gt;Sign the dll Using signtool.exe&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;/p&lt;/code&gt; flag in &lt;em&gt;Code Snippet 3&lt;/em&gt; defines the password of your &lt;code&gt;.pfx&lt;/code&gt; file. After having signed the dll, I create the SQL Server certificate, from the original certificate:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Certificate&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;USE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;master&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;GO&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CERTIFICATE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NielsTestCert&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FILE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'W:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;lt;path_to_cert&amp;gt;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;NielsTestCert.cer'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;GO&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 4:&lt;/strong&gt; &lt;em&gt;Create a SQL Server Certificate&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;When the certificate is created we can create a login from the certificate, and &lt;code&gt;GRANT&lt;/code&gt; the login &lt;code&gt;UNSAFE&lt;/code&gt; assembly permissions:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Login&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LOGIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;login_NielsTestCert&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CERTIFICATE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NielsTestCert&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;GO&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;GRANT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UNSAFE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ASSEMBLY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;login_NielsTestCert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='6' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;GO&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 5:&lt;/strong&gt; &lt;em&gt;Create a SQL Server Login and Grant Permissions&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;After the login has been created and the &lt;code&gt;UNSAFE ASSEMBLY&lt;/code&gt; permission granted to the login, the code in &lt;em&gt;Code Snippet 2&lt;/em&gt;, should just work. Oh, don't forget to switch back from &lt;code&gt;master&lt;/code&gt; to the database where you want to create the assembly.&lt;/p&gt;

&lt;p&gt;We can then finally create a T-SQL wrapper function against the &lt;code&gt;fn_clr_Adder&lt;/code&gt; method:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Function&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FUNCTION&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dbo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fn_clr_Adder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;RETURNS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;EXTERNAL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NAME&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Sql2k17SqlClr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Sql2k17SqlClr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Functions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fn_clr_Adder&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;GO&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 6:&lt;/strong&gt; &lt;em&gt;Create T-SQL Wrapper Function&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;To check that it all works, run: &lt;code&gt;SELECT dbo.fn_clr_Adder(21,21)&lt;/code&gt; and the &lt;a href=&quot;https://en.wikipedia.org/wiki/42_(number)&quot;&gt;&lt;em&gt;Answer to the Ultimate Question of Life, the Universe, and Everything&lt;/em&gt;&lt;/a&gt; should be returned to you.&lt;/p&gt;

&lt;p&gt;So far this does not seem too bad, OK - so for a &lt;code&gt;SAFE&lt;/code&gt; assembly we need to sign the assembly and have a login with &lt;code&gt;UNSAFE ASSEMBLY&lt;/code&gt; permissions granted (or have &lt;code&gt;TRUSTWORTHY&lt;/code&gt; on).&lt;/p&gt;

&lt;h2&gt;Confusion About &lt;code&gt;SAFE&lt;/code&gt; Assemblies&lt;/h2&gt;

&lt;p&gt;Since the introduction of &lt;code&gt;clr strict security&lt;/code&gt; there has been some confusion about how &lt;code&gt;SAFE&lt;/code&gt; assemblies will behave, and part of this confusion can be attributed to the &lt;a href=&quot;https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/clr-strict-security&quot;&gt;documentation&lt;/a&gt; around &lt;code&gt;clr strict security&lt;/code&gt;. Specifically this statement: &lt;em&gt;A CLR assembly created with PERMISSION_SET = SAFE may be able to access external system resources, call unmanaged code, and acquire sysadmin privileges.&lt;/em&gt;. When reading that statement, my understanding is that if I create an assembly as &lt;code&gt;SAFE&lt;/code&gt; I could potentially do &lt;code&gt;UNSAFE&lt;/code&gt; operations.&lt;/p&gt;

&lt;p&gt;Let us test this out, and create a second dll &lt;code&gt;Sql2k17SqlClr2.dll&lt;/code&gt;, where the code looks like so:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Sql2k17SqlClr2.dll&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Threading&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Threading.Tasks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Sql2k17SqlClr&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;p&quot;&gt;&amp;#x7b;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='6' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Functions&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='7' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;p&quot;&gt;&amp;#x7b;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='8' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fn_clr_Adder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='9' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;p&quot;&gt;&amp;#x7b;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='10' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='11' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;p&quot;&gt;&amp;#x7d;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='12' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line='13' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fn_clr_LongRunningAdder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='14' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;p&quot;&gt;&amp;#x7b;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='15' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line='16' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;      &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Task&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Factory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;StartNew&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LongRunning&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='17' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='18' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;p&quot;&gt;&amp;#x7d;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='19' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line='20' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LongRunning&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='21' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;p&quot;&gt;&amp;#x7b;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='22' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;      &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wait&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='23' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;      &lt;span class=&quot;n&quot;&gt;Thread&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wait&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='24' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='25' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line='26' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;p&quot;&gt;&amp;#x7d;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='27' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;p&quot;&gt;&amp;#x7d;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='28' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;p&quot;&gt;&amp;#x7d;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 7:&lt;/strong&gt; &lt;em&gt;Safe and Unsafe Behavior&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;As you see in &lt;em&gt;Code Snippet 7&lt;/em&gt;, we have our trusted &lt;code&gt;fn_clr_Adder&lt;/code&gt; method, which is as safe as you can get. But, we also have the &lt;code&gt;fn_clr_LongRunningAdder&lt;/code&gt; method which uses a &lt;code&gt;Task&lt;/code&gt; for calling into another method and this is definitely &lt;code&gt;UNSAFE&lt;/code&gt;. So what will happen here if we, after having built and signed the dll, create the assembly as &lt;code&gt;SAFE&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Assembly Creation&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ASSEMBLY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Sql2k17SqlClr2&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'W:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;lt;path_to_dll&amp;gt;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Sql2k17SqlClr2.dll'&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;WITH&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PERMISSION_SET&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SAFE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;GO&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 8:&lt;/strong&gt; &lt;em&gt;Create Safe Assembly with Unsafe Method&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Running the code in &lt;em&gt;Code Snippet 8&lt;/em&gt; should work, and it would also have worked in previous versions of SQL Server. We can now create a T-SQL wrapper function around the &lt;code&gt;fn_clr_LongRunningAdder&lt;/code&gt; method (the method using &lt;code&gt;UNSAFE&lt;/code&gt; resources):&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Unsafe Function&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FUNCTION&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dbo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fn_clr_LongRunningAdder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;RETURNS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;EXTERNAL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NAME&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Sql2k17SqlClr2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Sql2k17SqlClr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Functions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fn_clr_LongRunningAdder&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;GO&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 9:&lt;/strong&gt; &lt;em&gt;Create an Unsafe T-SQL Wrapper Function&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;When I execute &lt;code&gt;SELECT dbo.fn_clr_LongRunningAdder(21, 21)&lt;/code&gt; I would expect - having read the statement above - that this would work. However, on my SQL Server 2017 instance (CTP 2.1), I receive an error:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sql2k17_safe_unsafe.png&quot; width=&quot;530&quot; height=&quot;201&quot;  &gt;
&lt;strong&gt;Figure 2:&lt;/strong&gt; &lt;em&gt;Error Executing UNSAFE Function in SAFE Assembly&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;So, &lt;code&gt;HostProtection&lt;/code&gt; kicks in and says that I do not have necessary permissions to do the operation. In previous SQL Server versions this would happen if you hadn't assigned the correct &lt;code&gt;PERMISSION_SET&lt;/code&gt; to the assembly when it was created. So, let us drop the function and the assembly, and recreate the assembly with &lt;code&gt;PERMISSION_SET = UNSAFE&lt;/code&gt;, and recreate the wrapper function:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Recreate Assembly&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;DROP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FUNCTION&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dbo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fn_clr_LongRunningAdder&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;DROP&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ASSEMBLY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Sql2k17SqlClr2&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;GO&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ASSEMBLY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Sql2k17SqlClr2&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='6' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'W:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;lt;path_to_dll&amp;gt;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Sql2k17SqlClr2.dll'&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='7' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;WITH&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PERMISSION_SET&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UNSAFE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='8' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;GO&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='9' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line='10' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FUNCTION&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dbo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fn_clr_LongRunningAdder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='11' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;RETURNS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='12' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;EXTERNAL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NAME&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Sql2k17SqlClr2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Sql2k17SqlClr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Functions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fn_clr_LongRunningAdder&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='13' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;GO&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 10:&lt;/strong&gt; &lt;em&gt;Create the Assembly as UNSAFE&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Now when I execute &lt;code&gt;SELECT dbo.fn_clr_LongRunningAdder(21, 21)&lt;/code&gt;, it all works as expected. So it seems that &lt;code&gt;PERMISSION_SET&lt;/code&gt; still has a role to play, at least in this scenario.&lt;/p&gt;

&lt;h3&gt;Referenced Assemblies&lt;/h3&gt;

&lt;p&gt;So what about if I have a &lt;code&gt;SAFE&lt;/code&gt; assembly which references an &lt;code&gt;UNSAFE&lt;/code&gt; assembly, and calls into an &lt;code&gt;UNSAFE&lt;/code&gt; method?&lt;/p&gt;

&lt;p&gt;I created a third dll: &lt;code&gt;Sql2k17SqlClr3.dll&lt;/code&gt;, which has a method that calls into the &lt;code&gt;fn_clr_LongRunningAdder&lt;/code&gt; method in the &lt;code&gt;UNSAFE&lt;/code&gt; assembly &lt;code&gt;Sql2k17SqlClr2.dll&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Function&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Sql2k17SqlClr3&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;p&quot;&gt;&amp;#x7b;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Functions&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;p&quot;&gt;&amp;#x7b;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fn_clr_Adder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='6' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;p&quot;&gt;&amp;#x7b;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='7' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Sql2k17SqlClr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Functions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;fn_clr_LongRunningAdder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='8' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;p&quot;&gt;&amp;#x7d;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='9' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;p&quot;&gt;&amp;#x7d;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='10' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;p&quot;&gt;&amp;#x7d;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 11:&lt;/strong&gt; &lt;em&gt;Method Calling Into UNSAFE Method&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;After having built and signed the dll, I deployed it to the database with &lt;code&gt;PERMISSION_SET = SAFE&lt;/code&gt;, and created a T-SQL wrapper function around the &lt;code&gt;fn_clr_Adder&lt;/code&gt; method. This is what was returned when executing the function:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sql2k17_safe_unsafe.png&quot; width=&quot;530&quot; height=&quot;201&quot;  &gt;
&lt;strong&gt;Figure 3:&lt;/strong&gt; &lt;em&gt;Error Calling Into UNSAFE Assembly From SAFE&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Also in the case of referenced assemblies, it seems that &lt;code&gt;PERMISSION_SET&lt;/code&gt; plays a role. This was confirmed when I dropped and recreated the &lt;code&gt;Sql2k17SqlClr3.dll&lt;/code&gt; with &lt;code&gt;PERMISSION_SET = UNSAFE&lt;/code&gt;. When I at that stage executed the wrapper function, all worked OK!&lt;/p&gt;

&lt;h2&gt;Summary&lt;/h2&gt;

&lt;p&gt;In SQL Server 2017, Microsoft now by default requires that all type of assemblies (&lt;code&gt;SAFE&lt;/code&gt;, &lt;code&gt;EXTERNAL_ACCESS&lt;/code&gt;, &lt;code&gt;UNSAFE&lt;/code&gt;) are authorized for &lt;code&gt;UNSAFE&lt;/code&gt; access, by:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The database is set to be &lt;code&gt;TRUSTWORTHY&lt;/code&gt;, &lt;em&gt;OR&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;The assembly is signed with a certificate that has a corresponding login with &lt;code&gt;UNSAFE ASSEMBLY&lt;/code&gt; permission, &lt;em&gt;OR&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;The assembly is signed with an asymmetric key that has a corresponding login with &lt;code&gt;UNSAFE ASSEMBLY&lt;/code&gt; permission.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The above requirement is handled by a new configure option: &lt;code&gt;clr strict security&lt;/code&gt;. The documentation around this option is, at least at the moment, somewhat mis-leading as it implies that &lt;code&gt;PERMISSION_SET&lt;/code&gt; no longer has an impact on the behavior of an assembly.&lt;/p&gt;

&lt;p&gt;The tests above shows however that if you want to do an &lt;code&gt;UNSAFE&lt;/code&gt; operation, the assembly has to be created with &lt;code&gt;PERMISSION_SET = UNSAFE&lt;/code&gt;. So what I wrote in the beginning of this post: &lt;em&gt;&quot;From a SQLCLR perspective that is a real &quot;bummer&quot;, as theoretically there is no control over what an assembly can and cannot do (whereas before &lt;code&gt;PERMISSION_SET&lt;/code&gt; controlled the abilities).&quot;&lt;/em&gt;, does not seem to be correct.&lt;/p&gt;

&lt;p&gt;Bear in mind that I am running SQL Server 2017 CTP 2.1, and things may change. I'll try and dig in some more in this, and if I find out something I will edit this post.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;EDIT:&lt;/strong&gt; Things changed in SQL Server 2017 RC1. I have written about the changes in the &lt;a href=&quot;/2017/07/23/sql-server-2017-sqlclr-white-listing-assemblies/&quot;&gt;SQL Server 2017 SQLCLR - Whitelisting Assemblies&lt;/a&gt; post.&lt;/p&gt;

&lt;h2&gt;~ Finally&lt;/h2&gt;

&lt;p&gt;If you have comments, questions etc., please comment on this post or &lt;a href=&quot;mailto:niels.it.berglund@gmail.com&quot;&gt;ping&lt;/a&gt; me.&lt;/p&gt;
</content>
 </entry>
 

</feed>
