<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xml" href="http://nielsberglund.com//feed.xslt.xml"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.3.1">Jekyll</generator><link href="http://nielsberglund.com//atom.xml" rel="self" type="application/atom+xml" /><link href="http://nielsberglund.com//" rel="alternate" type="text/html" /><updated>2016-12-28T10:02:12+02:00</updated><id>http://nielsberglund.com///</id><title type="html">MANAGED DATA</title><subtitle>Technology musings about coding and data. Topics covered are - amongst others - .NET, SQL Server, Data Science, R, Windows Azure and a lot more.</subtitle><author><name>Niels Berglund</name></author><entry><title type="html">SQL Saturday Presentations</title><link href="http://nielsberglund.com//2013/10/29/sql-saturday-presentations/" rel="alternate" type="text/html" title="SQL Saturday Presentations" /><published>2013-10-29T20:13:56+02:00</published><updated>2013-10-29T20:13:56+02:00</updated><id>http://nielsberglund.com//2013/10/29/sql-saturday-presentations</id><content type="html" xml:base="http://nielsberglund.com//2013/10/29/sql-saturday-presentations/">&lt;p&gt;The two first weekends in August I were in Cape Town and Johannesburg respectively presenting at &lt;strong&gt;SQL Saturday&lt;/strong&gt; events. I had a great time, and the audience were terrific. My employer &lt;a href=&quot;/derivco&quot;&gt;&lt;strong&gt;Derivco&lt;/strong&gt;&lt;/a&gt; graciously gave me some &quot;swag&quot; to hand out, and that went down a treat. Thanks Derivco!!&lt;/p&gt;

&lt;!--more--&gt;


&lt;p&gt;After the events some people have emailed me and asked for the presentations, so I thought I'd upload them to &lt;a href=&quot;http://www.slideshare.net/nielsb_11/&quot;&gt;&lt;strong&gt;SlideShare&lt;/strong&gt;&lt;/a&gt;, so anyone that are interested can get to them. Seeing that I recently switched to a new &lt;a href=&quot;/2013/10/02/moving-to-a-new-blog-engine/&quot;&gt;blog platform&lt;/a&gt;, &lt;a href=&quot;http://octopress.org/&quot;&gt;&lt;strong&gt;Octopress&lt;/strong&gt;&lt;/a&gt;, and I a couple of days ago came across a &lt;strong&gt;SlideShare&lt;/strong&gt; plugin for Octopress - I decided to test it out by posting the presentations here on my blog.&lt;/p&gt;

&lt;p&gt;The two presentations I did were based about the &quot;weird/wonderful (or not so wonderful)&quot; things we have experienced at Derivco in our live production environments:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;SQL Real World Error Handling&lt;/strong&gt; - Gotcha's when doing error-handling in SQL Server&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Message Queues in SQL Server&lt;/strong&gt; - Enhance performance by using queues in SQL Server&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;SQL Real World Error Handling&lt;/h2&gt;

&lt;p&gt;This presentation talks about strange scenarios that can catch unaware developers out when mixing the new way of handling errors introduced in SQL Server 2005, with what we used to do before:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;New Style SQL Server Error Handling&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;BEGIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TRY&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;c1&quot;&gt;-- do some stuff that may cause an error&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;END&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TRY&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;BEGIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CATCH&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;c1&quot;&gt;--handle error, and perhaps re-raise&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='6' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;END&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CATCH&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Old Style SQL Server Error Handling&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;DECLARE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;EXEC&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dbo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Some_Proc&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ERROR&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;IF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;BEGIN&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='6' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;c1&quot;&gt;--do error &quot;stuff&quot;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='7' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;END&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;The actual presentation:&lt;/p&gt;

&lt;iframe src=&quot;http://www.slideshare.net/slideshow/embed_code/27662106 &quot; width=&quot;595&quot; height=&quot;446&quot; frameborder=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; style=&quot;border:1px solid #CCC;border-width:1px 1px 0;margin-bottom:5px&quot; allowfullscreen&gt;&lt;/iframe&gt;


&lt;p&gt;&lt;/p&gt;

&lt;h2&gt;Message Queues in SQL Server&lt;/h2&gt;

&lt;p&gt;Here I discussed the findings from research at Derivco about the most efficient implementations of queues inside SQL Server.&lt;/p&gt;

&lt;iframe src=&quot;http://www.slideshare.net/slideshow/embed_code/27662272 &quot; width=&quot;595&quot; height=&quot;446&quot; frameborder=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; style=&quot;border:1px solid #CCC;border-width:1px 1px 0;margin-bottom:5px&quot; allowfullscreen&gt;&lt;/iframe&gt;


&lt;p&gt;&lt;/p&gt;

&lt;p&gt;If anyone are interested in discussing this more, please post a comment.&lt;/p&gt;</content><author><name>nielsb</name></author><category term="SQL Saturday" /><category term="Derivco" /><category term="SQL Server" /><summary type="html">The two first weekends in August I were in Cape Town and Johannesburg respectively presenting at **SQL Saturday** events. I had a great time, and the audience were terrific. My employer [**Derivco**](/derivco) graciously gave me some &quot;swag&quot; to hand out, and that went down a treat. Thanks Derivco!!</summary></entry><entry><title type="html">Installing Octopress on Windows</title><link href="http://nielsberglund.com//2013/10/23/install-octopress-on-windows/" rel="alternate" type="text/html" title="Installing Octopress on Windows" /><published>2013-10-23T09:27:56+02:00</published><updated>2013-10-23T09:27:56+02:00</updated><id>http://nielsberglund.com//2013/10/23/install-octopress-on-windows</id><content type="html" xml:base="http://nielsberglund.com//2013/10/23/install-octopress-on-windows/">&lt;p&gt;In an earlier &lt;a href=&quot;/2013/10/02/moving-to-a-new-blog-engine/&quot;&gt;post&lt;/a&gt;, I wrote how I had changed blog-engine from WordPress to &lt;a href=&quot;http://octopress.org/&quot;&gt;&lt;strong&gt;OctoPress&lt;/strong&gt;&lt;/a&gt;. At the moment I am running Windows as my main OS (mostly due to work related requirements), and - as OctoPress is very much Ruby and Python based - there are certain things to be aware of when installing this on Windows. Furthermore, my blog is now hosted on &lt;strong&gt;Windows Azure&lt;/strong&gt; - so, with all this in mind, I thought I'd put together a blog post about the set-up of OctoPress on Windows, running on Windows Azure.&lt;/p&gt;

&lt;!--more--&gt;


&lt;h2&gt;Pre-Reqs&lt;/h2&gt;

&lt;p&gt;Before you begin the installation there are some pre-req's:&lt;/p&gt;

&lt;h3&gt;Git and GitHub&lt;/h3&gt;

&lt;p&gt;Octopress is a developers blog engine, and central to everything Octopress is &lt;strong&gt;Git&lt;/strong&gt;. Make sure you have the latest version of &lt;a href=&quot;http://git-scm.com/&quot;&gt;Git&lt;/a&gt; for Windows installed. You also need a &lt;strong&gt;GitHub&lt;/strong&gt; account, so if you don't have a GitHub account, you should &lt;a href=&quot;https://github.com/&quot;&gt;sign up&lt;/a&gt; for one. While you probably will do most of the Octopress Git and GitHub related tasks from command-line, it will not hurt to have the &lt;a href=&quot;http://windows.github.com/&quot;&gt;GitHub for Windows UI application&lt;/a&gt; installed as well.&lt;/p&gt;

&lt;h3&gt;Ruby&lt;/h3&gt;

&lt;p&gt;Octopress is built on Ruby, and when you eventually create blog-posts you will execute Ruby commands, so you need to install &lt;a href=&quot;http://rubyinstaller.org/&quot;&gt;Ruby&lt;/a&gt; and the Ruby Development Kit. Octopress seems somewhat &quot;picky&quot; about what Ruby version to use, personally I am running version 1.9.3-p448, and it works fine.&lt;/p&gt;

&lt;p&gt;You also need to install the Ruby Development Kit (DevKit) so you can use some of the native C/C++ extensions. Which version to download is dependent on the Ruby version, but I am running 4.5.2, &lt;a href=&quot;https://github.com/downloads/oneclick/rubyinstaller/DevKit-tdm-32-4.5.2-20111229-1559-sfx.exe&quot;&gt;DevKit-tdm-32-4.5.2-20111229-1559-sfx.exe&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;After you have downloaded and installed both Ruby as well as the DevKit, you need to run two installation scripts for the DevKit:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;change to the directory where the devkit is installed, and run: &lt;code&gt;ruby dk.rb init&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;then - still in the same directory - run &lt;code&gt;ruby dk.rb install&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;For more information about the installation of Ruby and the DevKit, GitHub has a great &lt;a href=&quot;https://github.com/oneclick/rubyinstaller/wiki/Development-Kit&quot;&gt;wiki page&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;Python&lt;/h3&gt;

&lt;p&gt;In addition to Ruby you need Python (this mostly for syntax highlighting). When installing Python, the version is &lt;strong&gt;very&lt;/strong&gt; important. Download and install Python 2.7 from &lt;a href=&quot;http://www.python.org/download/releases/2.7.5/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Having installed all the above you should now be set for the actual installation of Octopress!!&lt;/p&gt;

&lt;h2&gt;Install Octopress&lt;/h2&gt;

&lt;p&gt;To install Octopress you need to clone the &quot;original&quot; Octopress repo from GitHub. From command-line you &lt;code&gt;cd&lt;/code&gt; to the directory where you want clone the Octopress repo into, alternatively you create a directory for this and &lt;code&gt;cd&lt;/code&gt; into it.&lt;/p&gt;

&lt;p&gt;In the code below the assumption is that the directory exists and it is named &lt;strong&gt;MyGitHubRepos&lt;/strong&gt;. As you can see from the code, after you have changed into that directory you &lt;code&gt;clone&lt;/code&gt; the original Octopress directory into a new directory with a name of your choice. In the example below, the name is &lt;code&gt;myoctopressblog&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;$ cd MyGitHubRepos
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;$ git clone git://github.com/imathis/octopress.git myoctopressblog&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;After having cloned the original GitHub repo, you need to install a Ruby bundler. The Bundler maintains a consistent environment for Ruby applications, and you install it into the directory you cloned Octopress into (in the case above: myoctopressblog). BTW, &lt;code&gt;gem&lt;/code&gt; is like a package installer:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;$ cd .\myoctopressblog
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;$ gem install bundler
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;$ bundle install&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;By now your blog is almost 100% complete. What remains is an Octopress theme. For the initial setup, the default theme will do. To install this you run the equivalent of a &lt;code&gt;MAKE&lt;/code&gt; file, a &lt;code&gt;rake&lt;/code&gt; file:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;$ rake install&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Congratulations&lt;/strong&gt; you now have an Octopress blog!! If you are curious what it looks like you can now run &lt;code&gt;rake&lt;/code&gt; commands to generate and preview the blog pages:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;$ rake generate
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;$ rake preview&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;After you have executed the &lt;code&gt;rake preview&lt;/code&gt; command you can browse to &lt;code&gt;localhost:4000&lt;/code&gt; and see the blog in all its glory. If you did browse to &lt;code&gt;localhost:4000&lt;/code&gt;, you can see that you have a very basic blog. By now you definitely want to configure the blog, and maybe also write - at least - a &lt;strong&gt;Hello World&lt;/strong&gt; post.&lt;/p&gt;

&lt;h2&gt;Configuring Octopress and writing an initial post&lt;/h2&gt;

&lt;p&gt;The official &lt;a href=&quot;http://octopress.org/&quot;&gt;Octopress&lt;/a&gt; site has very good &lt;a href=&quot;http://octopress.org/docs/&quot;&gt;documentation&lt;/a&gt; about all things Octopress. So, instead of me re-iterating everything about configuration and using Octopress for blogging, I rather point to the official documentation for &lt;a href=&quot;http://octopress.org/docs/configuring/&quot;&gt;configuration&lt;/a&gt; and basics about &lt;a href=&quot;http://octopress.org/docs/blogging/&quot;&gt;blogging&lt;/a&gt; with Octopress.&lt;/p&gt;

&lt;p&gt;Right, by now you should have  fairly good idea how to use Octopress - it's awesome, right?! But ... hang on a second, we are missing something - right; as awesome it is, the blog is still only on your local machine. So what do we do if we want to host the blog somewhere out on the interwebz?&lt;/p&gt;

&lt;h2&gt;Deploying Octopress&lt;/h2&gt;

&lt;p&gt;In order to get a fully functional blog, we need to host it somewhere, and with Octopress there are some nice and easy ways to deploy and host the blog. As with the secion about configuring the blog, I'll let the official documentation do the talking for some of the ways Octopress can be deployed:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://octopress.org/docs/deploying/github/&quot;&gt;GitHub pages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://octopress.org/docs/deploying/heroku/&quot;&gt;Heroku&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://octopress.org/docs/deploying/rsync/&quot;&gt;Rsync&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;In order to publish posts to all of the options above you need to run &lt;code&gt;rake generate&lt;/code&gt; followed by &lt;code&gt;rake deploy&lt;/code&gt; after having written a post(s).&lt;/p&gt;

&lt;p&gt;I mentioned up at the top how I was hosting this blog on Windows Azure, how is that done?&lt;/p&gt;

&lt;h2&gt;Hosting Octopress on Windows Azure&lt;/h2&gt;

&lt;p&gt;I initially thought I would host the blog on GitHub pages, and I did set up the blog to be deployed to my GitHub pages. Then, somehow, I thought that maybe I should check out Windows Azure - seeing that I have - through my work at &lt;a href=&quot;/derivco&quot;&gt;&lt;strong&gt;Derivco&lt;/strong&gt;&lt;/a&gt; - an MSDN subscription (Derivco rocks!), and the subscription gives me Windows Azure credits.&lt;/p&gt;

&lt;p&gt;So, on to the wisdom of all world (Google), and lo and behold - there were quite a few posts / articles how to link a blog to Windows Azure. Seeing that I already published / deployed to GitHub pages it was extremely easy to push this to Windows Azure:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Set up a web-site through the Windows Azure portal&lt;/li&gt;
&lt;li&gt;Configure the &lt;code&gt;deployments&lt;/code&gt; to point to the GitHub pages&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;That's all there is to it. Now after you have run &lt;code&gt;rake generate&lt;/code&gt; and &lt;code&gt;rake deploy&lt;/code&gt;, when you commit, the changes will be published to Windows Azure:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;$ git add .
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;$ git commit -m &quot;Some message about the commit&quot;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;$ git push origin source&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;Oh, I almost forgot - I also needed to point a CNAME for my domain to my website on Windows Azure. But, the whole Windows Azure setup took less than 10 minutes!!&lt;/p&gt;</content><author><name>nielsb</name></author><category term="Octopress" /><category term="Windows Azure" /><category term="Git" /><category term="GitHub" /><summary type="html">In an earlier post, I wrote how I had changed blog-engine from WordPress to OctoPress. At the moment I am running Windows as my main OS (mostly due to work related requirements), and - as OctoPress is very much Ruby and Python based - there are certain things to be aware of when installing this on Windows. Furthermore, my blog is now hosted on Windows Azure - so, with all this in mind, I thought I'd put together a blog post about the set-up of OctoPress on Windows, running on Windows Azure.</summary></entry><entry><title type="html">Moving to a New Blog Engine</title><link href="http://nielsberglund.com//2013/10/02/moving-to-a-new-blog-engine/" rel="alternate" type="text/html" title="Moving to a New Blog Engine" /><published>2013-10-02T09:27:56+02:00</published><updated>2013-10-02T09:27:56+02:00</updated><id>http://nielsberglund.com//2013/10/02/moving-to-a-new-blog-engine</id><content type="html" xml:base="http://nielsberglund.com//2013/10/02/moving-to-a-new-blog-engine/">&lt;p&gt;Every so often I get an itch, and I want to try out a new blog-platform. The time has now come to leave my self-hosted WordPress and move on to something &quot;geekier&quot; (I am a geek after all).&lt;/p&gt;

&lt;p&gt;I have just now finished moving my few posts from WordPress to the new engine: &lt;a href=&quot;http://octopress.org&quot;&gt;&lt;strong&gt;OctoPress&lt;/strong&gt;&lt;/a&gt;. In a future blog post on the new blog I will try to explain why I made the move, and why OctoPress. The new blog will be hosted on &lt;a href=&quot;http://www.windowsazure.com/en-us&quot;&gt;&lt;strong&gt;Windows Azure&lt;/strong&gt;&lt;/a&gt; - I do get free Azure credits together with my MSDN subscription, so I thought I'd see what all the &quot;fuss&quot; about Windows Azure is.&lt;/p&gt;

&lt;p&gt;As of a couple of minutes ago, I pointed a CNAME record for &lt;strong&gt;www.nielsberglund.com&lt;/strong&gt; to my new Windows Azure host. We'll see after a while if all worked. RSS feeds etc. should be as before - as I use feed-burner.&lt;/p&gt;

&lt;p&gt;So, see you all on the other side!&lt;/p&gt;</content><author><name>nielsb</name></author><summary type="html">Every so often I get an itch, and I want to try out a new blog-platform. The time has now come to leave my self-hosted WordPress and move on to something &quot;geekier&quot; (I am a geek after all).

I have just now finished moving my few posts from WordPress to the new engine: OctoPress. In a future blog post on the new blog I will try to explain why I made the move, and why OctoPress. The new blog will be hosted on Windows Azure - I do get free Azure credits together with my MSDN subscription, so I thought I'd see what all the &quot;fuss&quot; about Windows Azure is.

As of a couple of minutes ago, I pointed a CNAME record for www.nielsberglund.com to my new Windows Azure host. We'll see after a while if all worked. RSS feeds etc. should be as before - as I use feed-burner.

So, see you all on the other side!</summary></entry><entry><title type="html">SqlClrProject on GitHub</title><link href="http://nielsberglund.com//2012/11/03/sqlclrproject-on-github/" rel="alternate" type="text/html" title="SqlClrProject on GitHub" /><published>2012-11-03T09:27:56+02:00</published><updated>2012-11-03T09:27:56+02:00</updated><id>http://nielsberglund.com//2012/11/03/sqlclrproject-on-github</id><content type="html" xml:base="http://nielsberglund.com//2012/11/03/sqlclrproject-on-github/">&lt;p&gt;As some of you may know, I - once upon a time - developed a project (VS add-in, templates, etc) for automatic deployment of CLR assemblies to SQL Server: &lt;strong&gt;SqlClrProject&lt;/strong&gt;. That project has been dormant now for a couple of years, but I now and then get requests for where it can be downloaded from (I had it on CodePlex, but had to take it down as I didn't publish the source code).&lt;/p&gt;

&lt;!--more--&gt;


&lt;p&gt;A while ago I decided to start to use Git and GitHub as source control (I have been using SVN since forever), and as part of the &quot;getting to grips&quot; with Git, I created a repo for &lt;strong&gt;SqlClrProject&lt;/strong&gt; on GitHub. So the source for the project is now available on &lt;a href=&quot;https://github.com/nberglund/sqlclrproject&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you are interested in the  fork it, play with it. The state of it is that it &quot;should&quot; work on VS 2008 / SQL 2008. It most likely will work on VS 2010 as well. And of course the standalone deployment executable will work regardless of VS version.&lt;/p&gt;</content><author><name>nielsb</name></author><category term="SQL Server" /><category term="SQLCLR" /><category term="SQLCLRProject" /><summary type="html">As some of you may know, I - once upon a time - developed a project (VS add-in, templates, etc) for automatic deployment of CLR assemblies to SQL Server: SqlClrProject. That project has been dormant now for a couple of years, but I now and then get requests for where it can be downloaded from (I had it on CodePlex, but had to take it down as I didn't publish the source code).</summary></entry><entry><title type="html">First Impressions Microsoft BUILD - Win 8</title><link href="http://nielsberglund.com//2011/09/13/first-impressions-microsoft-build-win-8/" rel="alternate" type="text/html" title="First Impressions Microsoft BUILD - Win 8" /><published>2011-09-13T09:27:56+02:00</published><updated>2011-09-13T09:27:56+02:00</updated><id>http://nielsberglund.com//2011/09/13/first-impressions-microsoft-build-win-8</id><content type="html" xml:base="http://nielsberglund.com//2011/09/13/first-impressions-microsoft-build-win-8/">&lt;p&gt;I have a while ago just finished watching the live stream of the first keynote (yes there will be one tomorrow as well), at Microsoft BUILD. Having attended / presented, at quite a few of these kind of events - and being somewhat jaded (well OK then, a lot jaded), I must still say that I am impressed.&lt;/p&gt;

&lt;!--more--&gt;


&lt;p&gt;As quite a few other developers I have been fairly worried about what will happen when Win 8 comes; .NET/WPF/SilverLight is dead - long live HTML etc., but at least for now it seems that the fears have been un-founded. I.e, the .NET as we know and love is still there, SilverLight as well (come to think about it, nothing much was said about WPF). And it seems pretty straightforward to build the new &quot;Metro&quot; style apps using the tools we know.&lt;/p&gt;

&lt;p&gt;What do I think then: well, Win 8 promises to be really, really slick and cool - but we have been here before (Longhorn anyone?), so let's wait and see until we get to RC stages. However, the whole Win RT, i.e the underlying &quot;goo&quot; of Windows (graphics, networking, etc) being exposed to all different types of programming languages; native, .NET, HTML/JavaScript, etc., seems very, very cool. I can't wait to get my hands on some bits and start playing around with this. Speaking of that; bits will apparently be &lt;a href=&quot;http://bit.ly/nX2K3a&quot;&gt;released later&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;So at this stage I am fairly optimistic, and I would not rule out, myself running Win 8 on a couple of machines here at home. I am looking forward to the keynote tomorrow, where they will talk more about the development experience, and hopefully drill deeper into Visual Studio.Next.&lt;/p&gt;

&lt;p&gt;Having finally seen the session-list, there are some really interesting sessions during the week. I really, really hope these ones will be videoed:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http:bit.ly/n16Xyu&quot;&gt;&lt;strong&gt;F# 3.0: data, services, Web, cloud, at your fingertips, by Don &quot;Mr F#&quot; Syme&lt;/strong&gt;:&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://bit.ly/n7tUKU&quot;&gt;&lt;strong&gt;What's new in .NET Framework 4.5&lt;/strong&gt;:&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://bit.ly/pd3XZN&quot;&gt;&lt;strong&gt;Lessons learned designing the Windows Runtime&lt;/strong&gt;:&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://bit.ly/nX5czN&quot;&gt;&lt;strong&gt;Deep dive into the kernel of the .NET Framework&lt;/strong&gt;:&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://bit.ly/r8Iyq8&quot;&gt;&lt;strong&gt;Using the Windows Runtime from C++&lt;/strong&gt;:&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://bit.ly/r4Q1cT&quot;&gt;&lt;strong&gt;Using the Windows Runtime from C# and Visual Basic&lt;/strong&gt;:&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;That's all for now &quot;folks&quot;. Will hopefully post more as the week and the conference goes by.&lt;/p&gt;</content><author><name>nielsb</name></author><category term="BUILD" /><category term="F#" /><category term="Win 8" /><summary type="html">I have a while ago just finished watching the live stream of the first keynote (yes there will be one tomorrow as well), at Microsoft BUILD. Having attended / presented, at quite a few of these kind of events - and being somewhat jaded (well OK then, a lot jaded), I must still say that I am impressed.</summary></entry><entry><title type="html">Transactions in SQL Server (take 2956)</title><link href="http://nielsberglund.com//2011/09/11/transactions-in-sql-server-take-2956/" rel="alternate" type="text/html" title="Transactions in SQL Server (take 2956)" /><published>2011-09-11T09:27:56+02:00</published><updated>2011-09-11T09:27:56+02:00</updated><id>http://nielsberglund.com//2011/09/11/transactions-in-sql-server-take-2956</id><content type="html" xml:base="http://nielsberglund.com//2011/09/11/transactions-in-sql-server-take-2956/">&lt;p&gt;Transactions in SQL Server seems to be a difficult topic to grasp. This weekend I came across a blog-post where the poster showed a &quot;solution&quot; to the &quot;The ROLLBACK TRANSACTION request has no corresponding BEGIN TRANSACTION&quot; error we sometimes see when various stored procedures call each other. The solution (even though it masked out the error in question) did not get it quite right. So I thought I would make a post about the subject.&lt;/p&gt;

&lt;!--more--&gt;


&lt;h3&gt;Nested Transactions in SQL Server and the Evil @@TRANCOUNT&lt;/h3&gt;

&lt;p&gt;In SQL Server we have the @@TRANCOUNT variable which gives us the number of transactions active in the session - or that's at least what we might believe. Take this  extremely simple code:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NOCOUNT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;col1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;varchar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;PRINT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TRANCOUNT&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;BEGIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TRAN&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;PRINT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TRANCOUNT&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='6' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;VALUES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'HELLO'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='7' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;BEGIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TRAN&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='8' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;PRINT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TRANCOUNT&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='9' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;VALUES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'WORLD'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='10' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;COMMIT&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='11' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;PRINT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TRANCOUNT&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='12' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;COMMIT&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='13' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;PRINT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TRANCOUNT&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;You should see something like this:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;0
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;1
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;2
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;1
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;0&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;I.e. it seems like the transaction count is increasing for each BEGIN TRAN, and decrease with COMMIT. And if you were to &lt;code&gt;SELECT * FROM #t&lt;/code&gt; you would see two rows returned. So far so good, so what is wrong with @@TRANCOUNT then? Well, let us change the code slightly (don't forget to drop #t if you copy and paste this code):&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NOCOUNT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;col1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;varchar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;PRINT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TRANCOUNT&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;BEGIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TRAN&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;PRINT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TRANCOUNT&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='6' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;VALUES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'HELLO'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='7' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;BEGIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TRAN&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='8' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;PRINT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TRANCOUNT&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='9' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;VALUES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'WORLD'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='10' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;COMMIT&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='11' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;PRINT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TRANCOUNT&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='12' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;ROLLBACK&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='13' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;PRINT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TRANCOUNT&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;If you now were to (don't do it immediately) &lt;code&gt;SELECT * FROM #t&lt;/code&gt;, how many rows would you get back - 0, 1, or 2? Seeing how the @@TRANCOUNT is increasing with every BEGIN TRAN and decreasing with COMMIT / ROLLBACK, it is understandable if your answer is 1:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;we start a transaction and insert a row&lt;/li&gt;
&lt;li&gt;we then start another transaction and insert a second row&lt;/li&gt;
&lt;li&gt;we call commit after the second insert (the inner transaction)&lt;/li&gt;
&lt;li&gt;finally we do a rollback, on the &amp;#8220;outer&amp;#8221; transaction&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;As we after the second BEGIN TRAN can see @@TRANCOUNT being 2, we could assume that the commit would commit the second insert. However, we all know what happens when we assume  (now would be a good time to do the SELECT)  &amp;#8230;.&lt;/p&gt;

&lt;p&gt;Right, the SELECT did not return any rows at all, so it is probably fair to say that we did not have multiple transactions, even though @@TRANCOUNT showed us more than one. So, then we might assume (keep in mind what I&amp;#8217;ve said about assume) that the reason we rolled back was because ROLLBACK was the last statement. Let us switch the COMMIT on line 10 with the ROLLBACK on line 12 (we now have ROLLBACK on line 10 and COMMIT on line 12) and execute. WHOA &amp;#8211; we got a big fat exception, what happened here? To answer that, let us look a bit closer at the main parts of transaction control in your code.&lt;/p&gt;

&lt;h3&gt;BEGIN TRAN, COMMIT and ROLLBACK&lt;/h3&gt;

&lt;p&gt;When you execute BEGIN TRAN in T-SQL, SQL will look around in the execution context of your session and see if there already exists a transactional context. If not, SQL will start a new transaction. If there is a transaction already, SQL will enlist in this transaction. However in both cases SQL will increase the @@TRANCOUNT variable.&lt;/p&gt;

&lt;p&gt;Then, when you execute a COMMIT, SQL will not immediately commit the transaction but will decrease the transaction count with 1. If the transaction count has reached 0 due to the commit, a commit will take place. OK, so far so good, but this does not explain the error we received when switching the COMMIT and ROLLBACK statements, if it works as described, then we should have committed?&lt;/p&gt;

&lt;p&gt;Ah, yes &amp;#8211; however, a ROLLBACK not only decrements the transaction count &amp;#8211; it sets it to 0 immediately, and as the transaction count is now 0, a rollback will happen. So in our second example we are seeing something similar to when we &amp;#8211; in stored procs &amp;#8211; are getting the &amp;#8221;The ROLLBACK TRANSACTION request has no corresponding BEGIN TRANSACTION&amp;#8221; error.&lt;/p&gt;

&lt;h3&gt;Stored Procedures and Transactions&lt;/h3&gt;

&lt;p&gt;It is quite common to write procs something like so:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PROC&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sp2&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NOCOUNT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;BEGIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TRAN&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;BEGIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TRY&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='6' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;c1&quot;&gt;-- do some stuff&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='7' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;c1&quot;&gt;-- then if all is OK we commit&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='8' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;k&quot;&gt;COMMIT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TRAN&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='9' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;k&quot;&gt;RETURN&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='10' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;END&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TRY&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='11' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;BEGIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CATCH&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='12' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;k&quot;&gt;DECLARE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;errMSg&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;varchar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='13' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;errMSg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ERROR_MESSAGE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='14' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;k&quot;&gt;ROLLBACK&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TRAN&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='15' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;k&quot;&gt;RETURN&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;999&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;--things have gone very wrong&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='16' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;END&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CATCH&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;Then we are having a similar proc, looking almost the same, but it, in addition, calls into sp2:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PROC&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sp1&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NOCOUNT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;BEGIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TRAN&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;BEGIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TRY&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='6' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;c1&quot;&gt;-- do some stuff&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='7' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;c1&quot;&gt;-- do some more stuff by calling into sp2&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='8' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;k&quot;&gt;EXEC&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sp2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='9' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;c1&quot;&gt;-- then if all is OK we commit&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='10' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;k&quot;&gt;COMMIT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TRAN&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='11' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;k&quot;&gt;RETURN&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='12' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;END&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TRY&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='13' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;BEGIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CATCH&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='14' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;k&quot;&gt;DECLARE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;errMSg&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;varchar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='15' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;errMSg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ERROR_MESSAGE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='16' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;k&quot;&gt;ROLLBACK&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TRAN&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='17' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;k&quot;&gt;RETURN&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;999&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;--things have gone very wrong&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='18' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;END&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CATCH&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;This is now when we will potentially see the error mentioned before. We call sp1, when sp1 is called there is no transactional context around, so SQL creates a new transaction. Then we go on to call sp2 from sp1. In the BEGIN TRAN call in sp2, there exists a transactional context, so SQL enlists us in that context.&lt;/p&gt;

&lt;p&gt;If all now goes well and we call COMMIT in sp2, the commit causes the transaction count to be decreased to 1 &amp;#8211; but no &amp;#8220;real&amp;#8221; commit happens. So when we subsequently calls COMMIT in sp1, we decrement the transaction count to 0, and we are committed.&lt;/p&gt;

&lt;p&gt;In the case when things go wrong is sp2 and we call rollback, the transaction count is immediately set to 0, and a rollback happens. When we come back to sp1, SQL sees that we had a transaction in sp1, but there are no transactions around, and we will get the error discussed. If we then go on and do a rollback (as in our code) &amp;#8211; we will get additional errors.&lt;/p&gt;

&lt;h3&gt;Solution&lt;/h3&gt;

&lt;p&gt;A solution to the problem is to use the &amp;#8220;evil&amp;#8221; @@TRANCOUNT, to see if there are any transactions around. If there aren&amp;#8217;t any, we start a transaction. If there are a transaction already, we don&amp;#8217;t do anything, and we let the existing transaction handle everything:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PROC&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sp2&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;DECLARE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tranCount&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TRANCOUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;--I'm using SQL2008 here&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NOCOUNT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;IF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tranCount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;--no tx's around, we can start a new&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='6' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;k&quot;&gt;BEGIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TRAN&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='7' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;BEGIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TRY&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='8' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;c1&quot;&gt;-- do some stuff&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='9' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;c1&quot;&gt;-- then if all is OK we commit&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='10' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;c1&quot;&gt;--if the variable @tranCount is 0,&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='11' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;c1&quot;&gt;-- we have started the tx ourselves, and can commit&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='12' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;n&quot;&gt;IF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tranCount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;XACT_STATE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;--XACT_STATE - just to be on the safe side&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='13' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;k&quot;&gt;COMMIT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TRAN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='14' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line='15' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;k&quot;&gt;RETURN&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='16' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;END&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TRY&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='17' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;BEGIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CATCH&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='18' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;k&quot;&gt;DECLARE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;errMSg&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;varchar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='19' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;errMSg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ERROR_MESSAGE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='20' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;c1&quot;&gt;--if the variable @tranCount is 0,&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='21' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;c1&quot;&gt;-- we have started the tx ourselves, and can rollback&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='22' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;n&quot;&gt;IF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tranCount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;XACT_STATE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;--XACT_STATE - just to be on the safe side&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='23' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;k&quot;&gt;ROLLBACK&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TRAN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='24' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line='25' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;c1&quot;&gt;--tell an eventual calling proc that things have gone wrong&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='26' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;c1&quot;&gt;--and the calling proc should rollback&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='27' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;k&quot;&gt;RETURN&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;999&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='28' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;END&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CATCH&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;Obviously the calling proc would have similar code to decide if to start a tran or not.&lt;/p&gt;

&lt;p&gt;In the above scenario we let the &amp;#8220;outer&amp;#8221; proc handle all the transactional control. Sometimes you are in a situation where &amp;#8211; if things go wrong in the &amp;#8220;inner&amp;#8221; proc (sp2 in our case) &amp;#8211; you do not want to roll back everything done, but only what was done in the inner proc. For such a scenarion, you can use named savepoints:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PROC&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sp2&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;DECLARE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tranCount&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TRANCOUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;--I'm using SQL2008 here&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NOCOUNT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;IF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tranCount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;--no tx's around, we can start a new&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='6' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;k&quot;&gt;BEGIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TRAN&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='7' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;ELSE&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;--we are already in a tx, take a savepoint here&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='8' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;n&quot;&gt;SAVE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TRANSACTION&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sp2&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;--this is just a name&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='9' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line='10' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;BEGIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TRY&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='11' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;c1&quot;&gt;-- do some stuff&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='12' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;c1&quot;&gt;-- then if all is OK we commit&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='13' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;c1&quot;&gt;--if the variable @tranCount is 0,&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='14' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;c1&quot;&gt;-- we have started the tx ourselves, and can commit&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='15' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;n&quot;&gt;IF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tranCount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;XACT_STATE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;--XACT_STATE - just to be on the safe side&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='16' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;k&quot;&gt;COMMIT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TRAN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='17' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line='18' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;k&quot;&gt;RETURN&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='19' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;END&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TRY&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='20' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;BEGIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CATCH&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='21' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;k&quot;&gt;DECLARE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;errMSg&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;varchar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='22' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;errMSg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ERROR_MESSAGE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='23' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;c1&quot;&gt;--if the variable @tranCount is 0,&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='24' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;c1&quot;&gt;-- we have started the tx ourselves, and can rollback&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='25' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;n&quot;&gt;IF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tranCount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;XACT_STATE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;--XACT_STATE - just to be on the safe side&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='26' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;k&quot;&gt;ROLLBACK&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TRAN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='27' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;k&quot;&gt;ELSE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IF&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tranCount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;XACT_STATE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='28' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;k&quot;&gt;ROLLBACK&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TRANSACTION&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sp2&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;--we are rolling back to the save-point&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='29' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line='30' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;c1&quot;&gt;--tell an eventual calling proc that things have gone wrong&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='31' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;c1&quot;&gt;--and let the calling proc decide what to do with its parts&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='32' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;k&quot;&gt;RETURN&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;999&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='33' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;END&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CATCH&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;Personally, I do not use named save-points that much as they cannot be used together with linked servers, and we &amp;#8211; unfortunately &amp;#8211; are using linked servers a lot.&lt;/p&gt;

&lt;p&gt;A final note about named save-points; they are not the same thing as beginning / committing / rolling back a transaction with a name:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NOCOUNT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;col1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;varchar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;BEGIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TRAN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t1&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;VALUES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'HELLO'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;ROLLBACK&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TRAN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t1&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;Beginning a transaction with a name, is for most parts just a convenience. It has no effect on nesting (unless you use named save points), and SQL Server Books OnLine says this about naming of transactions:&lt;br/&gt;
&amp;#8220;Naming multiple transactions in a series of nested transactions with a transaction name has little effect on the transaction. Only the first (outermost) transaction name is registered with the system. A rollback to any other name (other than a valid savepoint name) generates an error. None of the statements executed before the rollback is, in fact, rolled back at the time this error occurs. The statements are rolled back only when the outer transaction is rolled back&amp;#8221;.&lt;/p&gt;

&lt;p&gt;If you have questions, observations etc., please feel free to leave me a comment, or drop me an email.&lt;/p&gt;</content><author><name>nielsb</name></author><category term="denali" /><category term="SQL Server" /><category term="t-sql" /><summary type="html">Transactions in SQL Server seems to be a difficult topic to grasp. This weekend I came across a blog-post where the poster showed a &quot;solution&quot; to the &quot;The ROLLBACK TRANSACTION request has no corresponding BEGIN TRANSACTION&quot; error we sometimes see when various stored procedures call each other. The solution (even though it masked out the error in question) did not get it quite right. So I thought I would make a post about the subject.</summary></entry><entry><title type="html">F#, Mono and Mac - Take II</title><link href="http://nielsberglund.com//2010/11/20/fsharp-mono-and-mac-2/" rel="alternate" type="text/html" title="F#, Mono and Mac - Take II" /><published>2010-11-20T09:27:56+02:00</published><updated>2010-11-20T09:27:56+02:00</updated><id>http://nielsberglund.com//2010/11/20/fsharp-mono-and-mac-2</id><content type="html" xml:base="http://nielsberglund.com//2010/11/20/fsharp-mono-and-mac-2/">&lt;p&gt;So yesterday &lt;a href=&quot;/2010/11/19/fsharp-mono-and-mac/&quot;&gt;I wrote&lt;/a&gt; about how I have started using F# and Mono on my MacBook.&lt;/p&gt;

&lt;p&gt;I wrote about how I downloaded the F# bits, unzipped and put them in a specific directory I had created. Today after having browsed around a bit more I realized I had done it the hard way. To install the required bits for F# for Mac, you only have to download a zip file with an install package for Mac from the &lt;a href=&quot;http://fsxplat.codeplex.com/&quot;&gt;F# Cross Platform&lt;/a&gt; site on CodePlex. The actual zip-file for the November 2010 CTP is &lt;a href=&quot;/2010/11/19/fsharp-mono-and-mac/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;After you have downloaded the file you unzip it and run the &lt;code&gt;.pkg&lt;/code&gt; file. This takes care of everything; no re-signing with the &lt;code&gt;.snk&lt;/code&gt; file etc. The added benefit of installing from the &lt;code&gt;.pkg&lt;/code&gt; file is that a couple of F# compiler dll's are automatically gac:ed (they are needed if you want to run the F# plugin for MonoDevelop), and aliases are created for the F# compiler and the F# interactive window.&lt;/p&gt;</content><author><name>nielsb</name></author><category term="F#" /><category term="Mac" /><category term="osx" /><summary type="html">So yesterday I wrote about how I have started using F# and Mono on my MacBook.

I wrote about how I downloaded the F# bits, unzipped and put them in a specific directory I had created. Today after having browsed around a bit more I realized I had done it the hard way. To install the required bits for F# for Mac, you only have to download a zip file with an install package for Mac from the F# Cross Platform site on CodePlex. The actual zip-file for the November 2010 CTP is here.

After you have downloaded the file you unzip it and run the .pkg file. This takes care of everything; no re-signing with the .snk file etc. The added benefit of installing from the .pkg file is that a couple of F# compiler dll's are automatically gac:ed (they are needed if you want to run the F# plugin for MonoDevelop), and aliases are created for the F# compiler and the F# interactive window.</summary></entry><entry><title type="html">F#, Mono and Mac</title><link href="http://nielsberglund.com//2010/11/19/fsharp-mono-and-mac/" rel="alternate" type="text/html" title="F#, Mono and Mac" /><published>2010-11-19T09:27:56+02:00</published><updated>2010-11-19T09:27:56+02:00</updated><id>http://nielsberglund.com//2010/11/19/fsharp-mono-and-mac</id><content type="html" xml:base="http://nielsberglund.com//2010/11/19/fsharp-mono-and-mac/">&lt;p&gt;This is a first post about my experiences with running F# and Mono on a Mac.&lt;/p&gt;

&lt;p&gt;In a &lt;a href=&quot;/2010/11/15/using-fsharp-in-sqlclr/&quot;&gt;previous post&lt;/a&gt; I wrote about how I have started to play with F#. As that post also covered SQLCLR it was obvious I was on Windows. Even though I make my living from development in a Windows environment, my main machine is a MacBook, and I run OSX as my main OS. I have previously also been running Linux (ArchLinux) on this machine as my main OS. Naturally I have heard about Mono (and also installed it a couple of times - and quickly un-installed again, but I have not really done anything with it. I have always run Windows in a VM on my MacBook for development etc. However after the announcement that F# was going &lt;a href=&quot;http://blogs.msdn.com/b/dsyme/archive/2010/11/04/announcing-the-f-compiler-library-source-code-drop.aspx&quot;&gt;Open Source&lt;/a&gt;, and &lt;a href=&quot;http://tomasp.net/blog&quot;&gt;Tomas P&lt;/a&gt; &lt;a href=&quot;http://tomasp.net/blog/fsharp-in-monodevelop.aspx&quot;&gt;posted&lt;/a&gt; about his F# MonoDevelop plug-in&lt;/a&gt;, I decided that I should have a look at what it would be like to do F# &quot;stuff in OSX.&lt;/p&gt;

&lt;!--more--&gt;


&lt;p&gt;This is what I did:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://www.go-mono.com/mono-downloads/download.html&quot;&gt;Downloaded Mono&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.microsoft.com/downloads/en/details.aspx?FamilyID=f8c623ae-aef6-4a06-a185-05f59be47d67&amp;amp;displaylang=en&quot;&gt;Downloaded F#&lt;/a&gt;. You want to download the zip file.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Having downloaded what I thought was necessary (I decided to hold off with MonoDevelop until I had everything running), I started the installation process. Installing Mono was straight forward, just mount the &lt;code&gt;.dmg&lt;/code&gt; and then run the &lt;code&gt;.pkg&lt;/code&gt; file. The only slight issue after installation was where it had been installed. Mostly for my own reference for later installations; Mono is located at: &lt;code&gt;/Library/Frameworks/Mono.framework&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;After I had installed Mono, I copied the bin directory from the unzipped F# file to a directory I created in the same root folder as where Mono was: &lt;code&gt;/Library/Frameworks/FSharp&lt;/code&gt;. I copied the &lt;code&gt;install-mono.sh&lt;/code&gt; file to the FSharp directory and was ready to start the installation. Fortunately before I executed the &lt;code&gt;install-mono.sh&lt;/code&gt; file, I read the comments in the file. At this stage I realised I had not downloaded everything necessary.&lt;/p&gt;

&lt;p&gt;One of the F# dll's &lt;code&gt;FSharp.Core.dll&lt;/code&gt; needs to be installed in the gac. In order to do that, the dll needs to be re-signed with the &lt;code&gt;mono.snk&lt;/code&gt; key. The installation file mentions how you can download the file using &lt;code&gt;wget&lt;/code&gt;. As I did not have &lt;code&gt;wget&lt;/code&gt; I found a link to it and downloaded it by right-clicking on the link and choose &quot;Save Link As&quot;. Once again mostly for my future reference; the file can be found &lt;a href=&quot;http://github.com/mono/mono/raw/master/mcs/class/mono.snk&quot;&gt;here&lt;/a&gt;, (just right click and choose &quot;Save Link As&quot;). I saved it into the F# root folder (the same folder where the &lt;code&gt;install-mono.sh&lt;/code&gt; is).&lt;/p&gt;

&lt;p&gt;So, now everything should be ready to go. I executed the install file and promptly got an error saying that the &lt;code&gt;FSharp.Core.dll&lt;/code&gt; could not be installed in the gac. Hmm, not good! Fortunately the error message mentioned something about a possible permission error, so I looked at the permissions on the gac folder (&lt;code&gt;../Mono.framework/Versions/2.8/lib/mono/gac&lt;/code&gt;), and sure enough - I did not have write permissions. I gave myself write permissions, and re-ran the installation and everything went OK. Cool!!&lt;/p&gt;

&lt;p&gt;After this it was time to test it out. From the F# bin directory I ran the following from a terminal window to execute the compiler: &lt;code&gt;mono fsc.exe&lt;/code&gt;. It seemed to work as I got this error back:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/fsc.exe.png&quot; width=&quot;658&quot; height=&quot;178&quot;  &gt;&lt;/p&gt;

&lt;p&gt;I then tried the interactive window: &lt;code&gt;mono fsi.exe&lt;/code&gt;. I wrote some simple test code:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/fsi-exec.png&quot; width=&quot;661&quot; height=&quot;330&quot;  &gt;&lt;/p&gt;

&lt;p&gt;As you can see, that worked as well!! So I am now well on the way of running (and learning) F# on Mono. Next step is to install MonoDevelop and Tomas P's plugin for F#. Stay tuned...&lt;/p&gt;</content><author><name>nielsb</name></author><category term="F#" /><category term="Mac" /><category term="osx" /><summary type="html">This is a first post about my experiences with running F# and Mono on a Mac.

In a previous post I wrote about how I have started to play with F#. As that post also covered SQLCLR it was obvious I was on Windows. Even though I make my living from development in a Windows environment, my main machine is a MacBook, and I run OSX as my main OS. I have previously also been running Linux (ArchLinux) on this machine as my main OS. Naturally I have heard about Mono (and also installed it a couple of times - and quickly un-installed again, but I have not really done anything with it. I have always run Windows in a VM on my MacBook for development etc. However after the announcement that F# was going Open Source, and Tomas P posted about his F# MonoDevelop plug-in, I decided that I should have a look at what it would be like to do F# &quot;stuff in OSX.</summary></entry><entry><title type="html">TPL Dataflow, Axum v.NEXT?</title><link href="http://nielsberglund.com//2010/11/18/tpl-dataflow-axum-v-next/" rel="alternate" type="text/html" title="TPL Dataflow, Axum v.NEXT?" /><published>2010-11-18T09:27:56+02:00</published><updated>2010-11-18T09:27:56+02:00</updated><id>http://nielsberglund.com//2010/11/18/tpl-dataflow-axum-v-next</id><content type="html" xml:base="http://nielsberglund.com//2010/11/18/tpl-dataflow-axum-v-next/">&lt;p&gt;At PDC 2010 Microsoft showed the new &lt;a href=&quot;http://msdn.microsoft.com/en-us/vstudio/async.aspx&quot;&gt;Async&lt;/a&gt; features of coming C# (and VB.NET) versions, and quite a lot has been written about it already. Part of the Async CTP is &lt;strong&gt;TPL Dataflow&lt;/strong&gt;, and this has gone somewhat un-noticed.&lt;/p&gt;

&lt;!--more--&gt;


&lt;p&gt;&lt;a href=&quot;http://www.microsoft.com/downloads/en/details.aspx?FamilyID=d5b3e1f8-c672-48e8-baf8-94f05b431f5c&amp;amp;displaylang=en&quot;&gt;TPL Dataflow&lt;/a&gt; is a library for building concurrent applications. It utilises an actor/agent-oriented designs via primitives for in-process message passing, dataflow, and pipelining. It looks and feels a bit like &lt;a href=&quot;http://msdn.microsoft.com/en-us/devlabs/dd795202.aspx&quot;&gt;Axum&lt;/a&gt;, and one can wonder if TPL Dataflow will be the productization (is this a word?) of Axum, especially as Axum's future seems a bit &lt;a href=&quot;http://social.msdn.microsoft.com/Forums/en-US/axum/thread/f86881de-71af-4709-b197-64a6e6dc96dd&quot;&gt;unclear&lt;/a&gt; at the moment.&lt;/p&gt;

&lt;p&gt;I am at the moment writing some test-code for TPL Dataflow, which I will post as soon as I have tidied it up a bit. In the meantime &lt;a href=&quot;http://mdavey.wordpress.com/&quot;&gt;Matt Davey&lt;/a&gt;, has quite a few &lt;a href=&quot;http://en.wordpress.com/tag/tpldataflow/&quot;&gt;posts about TPL Dataflow&lt;/a&gt; on his blog. So if you are interested, go and have a look.&lt;/p&gt;</content><author><name>nielsb</name></author><category term="Async / Parallel" /><category term="F#" /><category term="LINQ" /><category term="tpl" /><category term="tpldataflow" /><summary type="html">At PDC 2010 Microsoft showed the new Async features of coming C# (and VB.NET) versions, and quite a lot has been written about it already. Part of the Async CTP is TPL Dataflow, and this has gone somewhat un-noticed.</summary></entry><entry><title type="html">Using F# in SQLCLR</title><link href="http://nielsberglund.com//2010/11/15/using-fsharp-in-sqlclr/" rel="alternate" type="text/html" title="Using F# in SQLCLR" /><published>2010-11-15T09:27:56+02:00</published><updated>2010-11-15T09:27:56+02:00</updated><id>http://nielsberglund.com//2010/11/15/using-fsharp-in-sqlclr</id><content type="html" xml:base="http://nielsberglund.com//2010/11/15/using-fsharp-in-sqlclr/">&lt;p&gt;Recently I have become very interested in F# and I am at the moment trying to get to grips with it. It is definitely a different beast than C#, but so far I like it - a lot!&lt;/p&gt;

&lt;p&gt;Anyway, I am a SQL nerd, and many moons ago I was very heavily involved in SQLCLR (for you who don't know what that is; it is the ability to run .NET code inside the SQL Server engine. It was first introduced with SQL Server 2005). So I thought it would be a &quot;giggle&quot; to see if I could get some F# code running inside SQL Server.&lt;/p&gt;

&lt;!--more--&gt;


&lt;p&gt;I created the simplest of the simple F# dll's. SQLCLR requires you have a public class and your publicly exposed SQLCLR methods to be static, so my F# code looked like so:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Avesome Stuff&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;namespace ManagedData.Samples.FSharp
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  type SqlClr =
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    static member Adder a b = a + b
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    static member Factorial n =
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;      match n with
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='6' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;      | 0  -&gt;; 1
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='7' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;      | _ -&gt; n * (SqlClr.Factorial( n - 1))&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;As you can see my class is extremely advanced (not); it has two methods:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The canonical &lt;code&gt;Adder&lt;/code&gt; method (every SQLCLR dll has to have an &lt;code&gt;Adder&lt;/code&gt; method, it's the law - nah, I'm just kidding), which takes two integers and returns an integer.&lt;/li&gt;
&lt;li&gt;A factorial method, which takes an integer and calculates the factorial from that.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;By the way, any pointers about how to write efficient F# code are very welcome .&lt;/p&gt;

&lt;p&gt;Having written and compiled the code, it was time to deploy! When running .NET code in SQL Server, you need to deploy your assembly to the database you want to execute your code in, and SQL Server will actually load the assembly from the database. In fact most assemblies are loaded from the database, even quite a few of Microsoft's own system assemblies which normally are loaded from the GAC. There are only about 13 system assemblies that are allowed to be loaded from the GAC these are known as the &quot;blessed list&quot;. You also need to create T-SQL wrapper objects (procedures, functions, triggers, etc.) around the methods you want to publicly expose.&lt;/p&gt;

&lt;p&gt;In my SQL Server 2008R2 instance I created a database in which I wanted my F# assembly to, and then it was time to deploy. You can deploy in several ways, the easiest is something like this (in the database you want to use):&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ASSEMBLY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fsasm&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'c:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;repos&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;F#&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;testcode&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;fssqlclr&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;fslib&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\b&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;debug&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;fslib.dll'&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;WITH&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;permission_set&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SAFE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;GO&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;The problem with the code above is that F# projects have a dependency on the assembly &lt;code&gt;FSharp.Core.dll&lt;/code&gt;, so when I tried to deploy my assembly as per above, I got an exception. What I had to do was to deploy &lt;code&gt;FSharp.Core.dll&lt;/code&gt; to my database first:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ASSEMBLY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fsasm&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'C:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;path to ...&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;FSharp.Core.dll'&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;WITH&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;permission_set&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UNSAFE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;GO&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;Notice the use of &lt;code&gt;permission_set = UNSAFE&lt;/code&gt;, this is to tell SQL Server that I know what I am doing and SQL Server should keep from doing a lot if validation. When I had catalogued the &lt;code&gt;FSharp.Core.dll&lt;/code&gt; assembly I had no problems deploying my assembly to the database.&lt;/p&gt;

&lt;p&gt;All there remained to do now was to create the T-SQL wrapper object(s) around my F# methods. This is done with &quot;normal&quot; &lt;code&gt;CREATE ...&lt;/code&gt; syntax. The code for my factorial looks like so:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FUNCTION&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FsFactorial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;RETURNS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;EXTERNAL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NAME&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fsasm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ManagedData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Samples&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FSharp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SqlClr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Factorial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;GO&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;This also went without problems, so now it is &quot;crunch-time&quot;. Can I execute a F# method in SQLCLR?&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dbo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FsFactorial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;Lo and behold, it executed and I received 24 back! I had just now executed F# running inside SQL Server!!&lt;/p&gt;

&lt;p&gt;So, what does this prove? Nothing really, it was just an exercise from me to see if it could be done. However, F# is really suitable for quite a few tasks you would want to use SQLCLR for, so it now gives a database developer another tool in his tool-belt.&lt;/p&gt;

&lt;p&gt;If anyone is interested in the full code for this, please drop me a comment and I'll email it to you.&lt;/p&gt;</content><author><name>nielsb</name></author><category term="F#" /><category term="SQLCLR" /><summary type="html">Recently I have become very interested in F# and I am at the moment trying to get to grips with it. It is definitely a different beast than C#, but so far I like it - a lot!

Anyway, I am a SQL nerd, and many moons ago I was very heavily involved in SQLCLR (for you who don't know what that is; it is the ability to run .NET code inside the SQL Server engine. It was first introduced with SQL Server 2005). So I thought it would be a &quot;giggle&quot; to see if I could get some F# code running inside SQL Server.</summary></entry></feed>
