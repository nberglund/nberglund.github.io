<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>Niels Berglund</title>
 <link href="http://nielsberglund.com/atom.xml" rel="self"/>
 <link href="http://nielsberglund.com/"/>
 <updated>2018-06-01T19:53:46+02:00</updated>
 <id>http://nielsberglund.com</id>
 <author>
   <name>Niels Berglund</name>
   <email></email>
 </author>

 
 <entry>
   <title>SQL Server Machine Learning Services and SQL Server 2017 CU7</title>
   <link href="http://nielsberglund.com/2018/06/01/sql-server-machine-learning-services-and-sql-server-2017-cu-7/"/>
   <updated>2018-06-01T19:43:01+02:00</updated>
   <id>http://nielsberglund.com/2018/06/01/sql-server-machine-learning-services-and-sql-server-2017-cu-7</id>
   <content type="html">&lt;p&gt;This post is as much for you as it is for me to come back to when I wonder what to do when SQL Serer Machine Learning Services all of a sudden stops working after a SQL Server upgrade.&lt;/p&gt;

&lt;h2&gt;Background&lt;/h2&gt;

&lt;p&gt;Last week I did a complete reformat of my development box at home and installed the latest version of Windows 10: the 1803 build, also called the April 2018 update.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; I usually try to reformat my box at least twice a year, to ensure it is not too &quot;bogged&quot; down by old &quot;cruft&quot;, and that it has the latest and greatest.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;After the reformat I installed all my necessary applications, among them SQL Server 2017 with the in-database analytics components (R and Python). After installation I tested that it all worked and made sure I could execute my usual test scripts for &lt;code&gt;sp_execute_external_script&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;R Test&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;EXEC&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sp_execute_external_script&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;language&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'R'&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                                &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'d &amp;lt;- 42'&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 1:&lt;/strong&gt; &lt;em&gt;Test Script for R&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The &quot;moral&quot; equivalent to &lt;em&gt;Code Snippet 1&lt;/em&gt; in Python also worked without an issue:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Python Test&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;EXEC&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sp_execute_external_script&lt;/span&gt;   &lt;span class=&quot;nd&quot;&gt;@language&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Python'&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                                &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;@script&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'d = 42'&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 2:&lt;/strong&gt; &lt;em&gt;Test Script for Python&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Cool, all is &quot;A-OK&quot;! A couple of days go by, and I see that there is a Cumulative Update (CU) for SQL Server 2017 - CU7. I install it and does not think much about it. I mean: &quot;what can go wrong, how hard can it be?&quot;. A couple of days later and I am busy writing the follow-up post to &lt;a href=&quot;/2018/05/20/sp-execute-external-script-and-sql-compute-context/&quot;&gt;sp_execute_external_script and SQL Compute Context - I&lt;/a&gt; when I try to execute &lt;code&gt;sp_execute_external_script&lt;/code&gt;, and it falls over!&lt;/p&gt;

&lt;!--more--&gt;


&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; If you do not know what CU's are, you can read more about them &lt;a href=&quot;https://blogs.msdn.microsoft.com/sqlreleaseservices/announcing-the-modern-servicing-model-for-sql-server/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;

&lt;h2&gt;Exception&lt;/h2&gt;

&lt;p&gt;The exception I received when I tried to execute &lt;code&gt;sp_execute_external_script&lt;/code&gt; looked like so:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sql_ml_sql_cu7_error1.png&quot; width=&quot;405&quot; height=&quot;105&quot;  &gt;
&lt;strong&gt;Figure 1:&lt;/strong&gt; &lt;em&gt;Exception when Executing&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;As we see in &lt;em&gt;Figure 1&lt;/em&gt; the exception has something to do with not being able to create a directory, which points to permission issues. This, kind of, resonated with me as I had in the back of my mind that something similar happened in the early days of SQL Server 2016 R Services when R stopped working after service packs were applied. Regardless I did some investigation around the issue (read I Googled) and found &lt;a href=&quot;http://jonculp.com/2017/01/resolve-sql-server-fatal-error-cannot-create-r_tempdir/&quot;&gt;this&lt;/a&gt; post by Jon Culp and also a post by my old friend &lt;a href=&quot;https://blog.greglow.com/2018/05/16/machine-learning-testing-your-installation-of-r-and-python-in-sql-server-2017/&quot;&gt;Greg Low&lt;/a&gt;. Both posts mention the 8.3 file naming convention as the primary culprit for the error. However, seeing that this worked fine before I applied CU7, I did not believe that the 8.3 file names were the case.  Having said that, I did (to be sure) enable the 8.3 notation as per &lt;a href=&quot;http://jonculp.com/2017/01/resolve-sql-server-fatal-error-cannot-create-r_tempdir/&quot;&gt;Jon Culp's&lt;/a&gt; post: &lt;code&gt;fsutil.exe behaviour set disable8dot3 0&lt;/code&gt;. Unfortunately, that did not change anything because when I executed the code in &lt;em&gt;Code Snippet 1&lt;/em&gt; it still errored out with the error in &lt;em&gt;Figure 1&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;All this pointed me back to the error being due to permission issues.&lt;/p&gt;

&lt;h2&gt;Permissions&lt;/h2&gt;

&lt;p&gt;Ok, so above we said permission issues, but permissions on what?&lt;/p&gt;

&lt;p&gt;If you read my series about &lt;a href=&quot;/series/sql_server_2k16_r_services&quot;&gt;SQL Server 2016 R Services&lt;/a&gt; you may remember that in &lt;a href=&quot;/2017/05/16/microsoft-sql-server-r-services-internals-vi/&quot;&gt;Internals - VI&lt;/a&gt; and &lt;a href=&quot;/2017/07/11/microsoft-sql-server-r-services-internals-vii/&quot;&gt;Internals - VII&lt;/a&gt; we discussed how the Launchpad service and the RTerm processes create files and directories in the &lt;code&gt;ExtensibilityData&lt;/code&gt; directory and its sub directories. This directory is where the permissions are supposed to be or, as in this case, are not.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; In a default installation of SQL Server on a Windows box, the &lt;code&gt;ExtensibilityData&lt;/code&gt; directory is located at &lt;code&gt;C:\&amp;lt;sql_instance_path&amp;gt;\MSSQL\ExtensibilityData&lt;/code&gt;.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;When you navigate the &lt;code&gt;ExtensibilityData&lt;/code&gt; directory in &lt;em&gt;File Explorer&lt;/em&gt; and look at the &lt;em&gt;Advanced Security Settings for ExtensibilityData&lt;/em&gt; dialog you see something like so in an installation where everything works:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sql_ml_sql_cu7_permissions1.png&quot; width=&quot;755&quot; height=&quot;515&quot;  &gt;
&lt;strong&gt;Figure 2:&lt;/strong&gt; &lt;em&gt;Permissions on ExtensibilityData&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In &lt;em&gt;Figure 2&lt;/em&gt; we see the various users, groups and roles that have access to the &lt;code&gt;ExtensibilityData&lt;/code&gt; directory and the highlighted part is the group that is of interest for this discussion. What is interesting is that when you look at this dialog before CU7 (when everything works) and after you deploy CU7, it looks the same. So, something is going on behind the scenes.&lt;/p&gt;

&lt;p&gt;To further confirm that what I saw was a permission issue I used &lt;em&gt;Process Monitor&lt;/em&gt; to see what file operations happened when I tried to execute the code in &lt;em&gt;Code Snippet 1&lt;/em&gt;. After gradually filtering out events I ended up with was is shown in the figure below.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; If you are interested in how you can use &lt;em&gt;Process Monitor&lt;/em&gt; I covered that in &lt;a href=&quot;/2017/07/11/microsoft-sql-server-r-services-internals-vii/&quot;&gt;Internals - VII&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sql_ml_sql_cu7_procmon1.png&quot; width=&quot;782&quot; height=&quot;192&quot;  &gt;
&lt;strong&gt;Figure 3:&lt;/strong&gt; &lt;em&gt;Process Monitor Output&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Remember how we in the &lt;strong&gt;Internals&lt;/strong&gt; posts &lt;a href=&quot;/2017/04/23/microsoft-sql-server-r-services-internals-iv/&quot;&gt;IV&lt;/a&gt; and &lt;a href=&quot;/2017/07/11/microsoft-sql-server-r-services-internals-vii/&quot;&gt;VII&lt;/a&gt; in the &lt;a href=&quot;/series/sql_server_2k16_r_services&quot;&gt;SQL Server R Services&lt;/a&gt; series discussed how the Launchpad service creates RTerm processes. We also discussed how the RTerm processes create directories and files under the &lt;code&gt;ExtensibilityData&lt;/code&gt; directory and its sub-directories. So what we see in &lt;em&gt;Figure 3&lt;/em&gt; is how the RTerm processes cannot write to the root of the &lt;code&gt;ExtensibilityData&lt;/code&gt; directory and this is what ultimately causes the error in &lt;em&gt;Figure 1&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;What I saw when I filtered out events was that even though the RTerm processes could not write to the root of the &lt;code&gt;ExtensibilityData&lt;/code&gt; directory, they could write to subdirectories:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sql_ml_sql_cu7_procmon2.png&quot; width=&quot;801&quot; height=&quot;161&quot;  &gt;
&lt;strong&gt;Figure 4:&lt;/strong&gt; &lt;em&gt;Successful Writes&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;So based on what we see in &lt;em&gt;Figure 3&lt;/em&gt; and &lt;em&gt;Figure 4&lt;/em&gt; it seems like something has gone awry with permissions for the root of the &lt;code&gt;ExtensibilityData&lt;/code&gt; directory. How to fix this?&lt;/p&gt;

&lt;h2&gt;Fix&lt;/h2&gt;

&lt;p&gt;I must confess that I initially added &lt;em&gt;Everyone&lt;/em&gt; with &lt;em&gt;Full control&lt;/em&gt; to the security settings for the &lt;code&gt;ExtensibilityData&lt;/code&gt; directory and it all worked:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sql_ml_sql_cu7_permissions2.png&quot; width=&quot;755&quot; height=&quot;515&quot;  &gt;
&lt;strong&gt;Figure 5:&lt;/strong&gt; &lt;em&gt;Everyone Full Control&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;However that did not seem like the correct way to do it, so I started playing around with the &quot;Advanced&quot; security properties on the &lt;code&gt;ExtensibilityData&lt;/code&gt; directory:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sql_ml_sql_cu7_sec_properties.png&quot; width=&quot;360&quot; height=&quot;485&quot;  &gt;
&lt;strong&gt;Figure 6:&lt;/strong&gt; &lt;em&gt;Security Properties&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In &lt;em&gt;Figure 6&lt;/em&gt; we see how I have right clicked on the &lt;code&gt;ExtensibilityData&lt;/code&gt; directory in &lt;em&gt;File Explorer&lt;/em&gt; and chosen properties and then clicked on the &lt;em&gt;Security&lt;/em&gt; (highlighted in the figure). The group that we work with is the &lt;code&gt;MSSQLLaunchpad&lt;/code&gt;, outlined in red.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; If you work on a SQL instance other than the default the group name is &lt;code&gt;MSSQLLaunchpad$instance_name&lt;/code&gt;.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;When I click on the &quot;Advanced&quot; button (also outlined in red in &lt;em&gt;Figure 6&lt;/em&gt;) I see something like so:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sql_ml_sql_cu7_enable_inh.png&quot; width=&quot;765&quot; height=&quot;515&quot;  &gt;
&lt;strong&gt;Figure 7:&lt;/strong&gt; &lt;em&gt;Advanced Security Settings&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In the &quot;Advanced Security Settings&quot; dialog in &lt;em&gt;Figure 7&lt;/em&gt; I clicked on &quot;Enable inheritance&quot; (outlined in red) followed by &quot;Apply&quot;, which showed an error dialog:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sql_ml_sql_cu7_enable_inh_1.png&quot; width=&quot;395&quot; height=&quot;220&quot;  &gt;
&lt;strong&gt;Figure 8:&lt;/strong&gt; &lt;em&gt;Error Dialog&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I clicked on &quot;Continue&quot; and the error repeated for each subdirectory in the &lt;code&gt;ExtensibilityData&lt;/code&gt; directory. After last error I was back in the &quot;Advanced Security Settings&quot; dialog where I saw something strange:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sql_ml_sql_cu7_enable_inh_2.png&quot; width=&quot;800&quot; height=&quot;580&quot;  &gt;
&lt;strong&gt;Figure 9:&lt;/strong&gt; &lt;em&gt;Additional Security Principals&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;What I saw was quite a few new security principals added to the security settings for the directory, and we see them outlined in red in &lt;em&gt;Figure 9&lt;/em&gt;. I clicked OK until I exited all dialogs. Now, when I tried to execute the R code, it succeeded. However, I was not happy with the added principals, so I went back into the &quot;Advanced Security Settings&quot; dialog:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sql_ml_sql_cu7_disable_inh_1.png&quot; width=&quot;750&quot; height=&quot;515&quot;  &gt;
&lt;strong&gt;Figure 10:&lt;/strong&gt; &lt;em&gt;Disable Inheritance&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In the dialog as we see in &lt;em&gt;Figure 10&lt;/em&gt; I clicked on the &quot;Disable inheritance&quot; button. When I clicked &quot;Apply&quot; the &quot;Block Inheritance&quot; dialog &quot;popped up&quot;:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sql_ml_sql_cu7_convert_inh_1.png&quot; width=&quot;510&quot; height=&quot;275&quot;  &gt;
&lt;strong&gt;Figure 10:&lt;/strong&gt; &lt;em&gt;Block Inheritance&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In the &quot;Block Inheritance&quot; dialog I clicked on the outlined part in &lt;em&gt;Figure 10&lt;/em&gt;: &quot;Convert inherited permissions ...&quot;, and the same error dialog as we see in &lt;em&gt;Figure 8&lt;/em&gt; came up. As I did above, I clicked through the errors through the &quot;Continue&quot; button, and when I was back in the &quot;Advanced Security Settings&quot; dialog I saw that the added security principals were no longer there. That is not true, one principal from the added ones was still there, and that was &lt;code&gt;MSSQLSERVER&lt;/code&gt;. I removed it and clicked OK out of the remaining dialogs. When I executed the code, it all worked, Yay!&lt;/p&gt;

&lt;h2&gt;Summary&lt;/h2&gt;

&lt;p&gt;Above we see how I managed to fix the issue how R did not work in SQL Server 2017 after I had applied CU7. The steps I took:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Right-click on the &lt;code&gt;ExtensibilityData&lt;/code&gt; directory and choose properties.&lt;/li&gt;
&lt;li&gt;In properties click on the &quot;Security&quot; tab and then the &quot;Advanced&quot; button.&lt;/li&gt;
&lt;li&gt;In the &quot;Advanced Security Settings&quot; dialog click &quot;Enable inheritance&quot; followed by &quot;Apply&quot;.&lt;/li&gt;
&lt;li&gt;In the error dialogs that appear click continue until you are back in the &quot;Advanced Security Settings&quot; dialog, and there you click OK out of all dialogs.&lt;/li&gt;
&lt;li&gt;At this stage, you can execute the R code without any exceptions.&lt;/li&gt;
&lt;li&gt;Go back into the &quot;Advanced Security Settings&quot; dialog and click &quot;Disable inheritance&quot; and &quot;Apply&quot;.&lt;/li&gt;
&lt;li&gt;In the &quot;Block Inheritance&quot; dialog chose &quot;Convert inherited permissions ...&quot;.&lt;/li&gt;
&lt;li&gt;&quot;Continue&quot; through the error dialogs until you are back in the &quot;Advanced Security Settings&quot; dialog.&lt;/li&gt;
&lt;li&gt;In the &quot;Advanced Security Settings&quot; dialog &quot;Remove&quot; the &lt;code&gt;MSSQLSERVER&lt;/code&gt; principal.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Oh, and I can warmly recommend the blogs I mention above by &lt;a href=&quot;http://jonculp.com/&quot;&gt;Jon Culp&lt;/a&gt; and &lt;a href=&quot;https://blog.greglow.com/&quot;&gt;Greg Low&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;~ Finally&lt;/h2&gt;

&lt;p&gt;If you have comments, questions etc., please comment on this post or &lt;a href=&quot;mailto:niels.it.berglund@gmail.com&quot;&gt;ping&lt;/a&gt; me.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Interesting Stuff - Week 21</title>
   <link href="http://nielsberglund.com/2018/05/27/interesting-stuff-week-21/"/>
   <updated>2018-05-27T11:06:31+02:00</updated>
   <id>http://nielsberglund.com/2018/05/27/interesting-stuff---week-21</id>
   <content type="html">&lt;p&gt;Throughout the week, I read a lot of blog-posts, articles, and so forth, that has to do with things that interest me:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;data science&lt;/li&gt;
&lt;li&gt;data in general&lt;/li&gt;
&lt;li&gt;distributed computing&lt;/li&gt;
&lt;li&gt;SQL Server&lt;/li&gt;
&lt;li&gt;transactions (both db as well as non db)&lt;/li&gt;
&lt;li&gt;and other &quot;stuff&quot;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This blog-post is the &quot;roundup&quot; of the things that have been most interesting to me, for the week just ending.&lt;/p&gt;

&lt;!--more--&gt;


&lt;h2&gt;SQL Server &amp;amp; Other Database Systems&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blogs.msdn.microsoft.com/bobsql/2018/05/20/sql-server-on-linux-quick-performance-monitoring/&quot;&gt;SQL Server on Linux: Quick Performance Monitoring&lt;/a&gt;. A blog post by &lt;a href=&quot;https://blogs.msdn.microsoft.com/bobsql/&quot;&gt;Bob Dorr&lt;/a&gt; where he talks about how we can get a Performance Monitor like view on Linux for SQL Server.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.infoq.com/news/2018/05/mysql8&quot;&gt;MySQL Version 8 Adds Document Store, Performance and Security Improvements&lt;/a&gt;. An &lt;a href=&quot;https://www.infoq.com/&quot;&gt;InfoQ&lt;/a&gt; article about new functionality in the latest version of MySQL. What caught my eye was the support for document store. I guess, depending on how it is done, having a combination of Document Store and a relational database can be very powerful.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Streaming&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://data-artisans.com/blog/apache-flink-1-5-0-release-announcement&quot;&gt;Apache Flink 1.5.0 Release Announcement&lt;/a&gt;. This post announces the release of Flink version 1.5.0. There are quite a few new exciting features, among them: broadcast state, task-local state recovery and support for windowed outer equi-joins in the SQL and Table API's. I have just set up a new CentOS 7 virtual machine so I can check this out.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.confluent.io/blog/confluent-cloud-pro-gcp/&quot;&gt;New Confluent Cloud Professional, and Ecosystem Expansion to Google Cloud Platform&lt;/a&gt;. I do not know if you knew this - but there is a rule saying that if there is an announcement from Flink, there also has to be an announcement from Kafka (and visa versa). So, the Kafka announcement is that the Confluent Cloud is now also available on the Google Cloud (in addition to AWS). I really hope to see Azure being in the mix in a not too distant future.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;.NET&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.infoq.com/articles/future-of-net-core&quot;&gt;Discussions on the Future of .NET Core&lt;/a&gt;. An [InfoQ] article where five industry veterans discuss the .NET Core platform. Some takeaways:

&lt;ul&gt;
&lt;li&gt;The .NET Core platform provides significant performance benefits as compared to the traditional .NET Framework.&lt;/li&gt;
&lt;li&gt;.NET Core benefits from a server-centric design that is not Windows-focused.&lt;/li&gt;
&lt;li&gt;.NET Core is now a stable platform suitable for new application development.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Distributed Computing&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/netflix-techblog/open-sourcing-zuul-2-82ea476cb2b3&quot;&gt;Open Sourcing Zuul 2&lt;/a&gt;. An announcement from Netflix, how they are now open-sourcing their cloud gateway: &lt;strong&gt;Zuul 2&lt;/strong&gt;. A very interesting point in the post was where it discussed anomaly detection and contextual alerting.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Data Science&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.infoq.com/presentations/paypal-data-service-fraud&quot;&gt;Data Pipelines for Real-time Fraud Prevention at Scale&lt;/a&gt;. An &lt;a href=&quot;https://www.infoq.com/&quot;&gt;InfoQ&lt;/a&gt; presentation about the architecture of PayPal’s data service which combines a Big Data approach with providing data in real time for decision making in fraud detection.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.acolyer.org/2018/05/23/pixie-a-system-for-recommending-3-billion-items-to-200-million-users-in-real-time/&quot;&gt;Pixie: a system for recommending 3+ billion items to 200+ million users in real-time&lt;/a&gt;. A white paper dissected by &lt;a href=&quot;https://twitter.com/adriancolyer&quot;&gt;Adrian&lt;/a&gt; describing how Pinterest has built a system for recommending 3+ billion items to 200+ million users in real-time!&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blogs.technet.microsoft.com/machinelearning/2018/05/21/enterprise-deployment-tips-for-azure-data-science-virtual-machine-dsvm&quot;&gt;Enterprise Deployment Tips for Azure Data Science Virtual Machine (DSVM)&lt;/a&gt;. I came across this post thanks to &lt;a href=&quot;https://twitter.com/luis_de_sousa&quot;&gt;Luis&lt;/a&gt; and his weekly &lt;a href=&quot;https://www.getrevue.co/profile/datascienceweekly/&quot;&gt;newsletter&lt;/a&gt;. The post he pointed to is about the Azure Data Science Virtual Machine (DSVM) and how to use and deploy in an enterprise environment. This topic is especially interesting right now as we at &lt;a href=&quot;/derivco&quot;&gt;Derivco&lt;/a&gt; is looking at the DSVM. Thanks &lt;a href=&quot;https://twitter.com/luis_de_sousa&quot;&gt;Luis&lt;/a&gt;!&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;SQL Server Machine Learning Services&lt;/h2&gt;

&lt;p&gt;In lasts week &lt;a href=&quot;/2018/05/20/interesting-stuff-week-20/&quot;&gt;roundup&lt;/a&gt; I mentioned how I probably have to write some follow up posts to the &lt;a href=&quot;/2018/05/20/sp-execute-external-script-and-sql-compute-context/&quot;&gt;sp_execute_external_script and SQL Compute Context - I&lt;/a&gt; post I published a week ago. I have now started with the first follow up post, and I hope I can publish it in a week or two.&lt;/p&gt;

&lt;h2&gt;~ Finally&lt;/h2&gt;

&lt;p&gt;That's all for this week. I hope you enjoy what I did put together. If you have ideas for what to cover, please comment on this post or &lt;a href=&quot;mailto:niels.it.berglund@gmail.com&quot;&gt;ping&lt;/a&gt; me.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Interesting Stuff - Week 20</title>
   <link href="http://nielsberglund.com/2018/05/20/interesting-stuff-week-20/"/>
   <updated>2018-05-20T18:33:35+02:00</updated>
   <id>http://nielsberglund.com/2018/05/20/interesting-stuff---week-20</id>
   <content type="html">&lt;p&gt;Throughout the week, I read a lot of blog-posts, articles, and so forth, that has to do with things that interest me:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;data science&lt;/li&gt;
&lt;li&gt;data in general&lt;/li&gt;
&lt;li&gt;distributed computing&lt;/li&gt;
&lt;li&gt;SQL Server&lt;/li&gt;
&lt;li&gt;transactions (both db as well as non db)&lt;/li&gt;
&lt;li&gt;and other &quot;stuff&quot;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This blog-post is the &quot;roundup&quot; of the things that have been most interesting to me, for the week just ending.&lt;/p&gt;

&lt;!--more--&gt;


&lt;h2&gt;Streaming&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.confluent.io/blog/visualizations-on-apache-kafka-made-easy-with-ksql/&quot;&gt;Visualizations on Apache Kafka Made Easy with KSQL&lt;/a&gt;. Not a week without one or more Kafka related posts. This blog-post is about how to get started with processing streaming data with Confluent KSQL and visualizing it using the &lt;a href=&quot;https://www.arcadiadata.com/&quot;&gt;Arcadia Data&lt;/a&gt; platform. The post contains quite a few links to interesting demos.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Cloud / Big Data&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://azure.microsoft.com/en-us/blog/enhance-productivity-using-azure-data-factory-visual-tools/&quot;&gt;Enhance productivity using Azure Data Factory Visual Tools&lt;/a&gt;. A blog-post about ADF Visual Tools where the primary goal of the ADF visual tools is to allow you to be productive with ADF by getting pipelines up and running quickly without requiring to write a single line of code. It looks quite impressive, and this is another thing I really need to have a look at.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.infoq.com/news/2018/05/azure-signalr-preview&quot;&gt;Microsoft Announces Preview of Azure SignalR Service&lt;/a&gt;. An &lt;a href=&quot;https://www.infoq.com/&quot;&gt;InfoQ&lt;/a&gt; article about how Microsoft recently announced a public preview of the Azure SignalR Service. SignalR has been available for download as a separate ASP.NET library, but this is the first time it has been available as a fully-managed service. Exciting stuff!&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Data Science&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.infoq.com/presentations/data-ml-pipelines-stitchfix&quot;&gt;Developing Data and ML Pipelines at Stitch Fix&lt;/a&gt;. An &lt;a href=&quot;https://www.infoq.com/presentations/data-ml-pipelines-stitchfix&quot;&gt;InfoQ&lt;/a&gt; presentation about how Stitch Fix develops, schedules, and maintains their data and ML pipelines. Very interesting, it sure gave me some ideas!&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.infoq.com/news/2018/05/PyTorch-AI&quot;&gt;PyTorch 1.0 Announced for Research and Production AI Projects&lt;/a&gt;. This links to another &lt;a href=&quot;https://www.infoq.com/&quot;&gt;InfoQ&lt;/a&gt; article. This article is about the introduction of PyTorch 1.0 and its new capabilities.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blogs.msdn.microsoft.com/mlserver/2018/05/18/getting-started-with-machine-learning-services-in-sql-server/&quot;&gt;Getting Started with Machine Learning Services in SQL Server&lt;/a&gt;. A blog-post which serves as an introduction to SQL Server Machine Learning Services. It looks somewhat like my &lt;a href=&quot;/series/sql_server_2k16_r_services&quot;&gt;SQL Server R Services&lt;/a&gt;, but this post has links to videos. Awesome!&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;SQL Server Machine Learning Services&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/2018/05/20/sp-execute-external-script-and-sql-compute-context/&quot;&gt;sp_execute_external_script and SQL Compute Context - I&lt;/a&gt;. I finally managed to finish the post about &lt;code&gt;sp_execute_external_script&lt;/code&gt; and &lt;strong&gt;SQL Server Compute Context&lt;/strong&gt; (SQLCC). That is the good news; the bad news is that I realised that there are quite a few things I do not understand about SQLCC, so I need to investigate more and also write more posts about SQLCC. Sigh - that is life!&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;~ Finally&lt;/h2&gt;

&lt;p&gt;That's all for this week. I hope you enjoy what I did put together. If you have ideas for what to cover, please comment on this post or &lt;a href=&quot;mailto:niels.it.berglund@gmail.com&quot;&gt;ping&lt;/a&gt; me.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>sp_execute_external_script and SQL Compute Context - I</title>
   <link href="http://nielsberglund.com/2018/05/20/sp-execute-external-script-and-sql-compute-context/"/>
   <updated>2018-05-20T10:46:52+02:00</updated>
   <id>http://nielsberglund.com/2018/05/20/sp-execute-external-script-and-sql-compute-context</id>
   <content type="html">&lt;p&gt;The last &lt;a href=&quot;/2018/03/21/microsoft-sql-server-r-services-sp-execute-external-script-iii/&quot;&gt;blog post&lt;/a&gt; in the &lt;a href=&quot;/series/sql_server_2k16_r_services&quot;&gt;Microsoft SQL Server R Services&lt;/a&gt; series covered some performance related parameters of &lt;code&gt;sp_execute_external_script&lt;/code&gt;, (&lt;code&gt;@parallel&lt;/code&gt; and &lt;code&gt;@r_rowsPerRead&lt;/code&gt;), and it touched a little bit on &lt;strong&gt;SQL Server Compute Context&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;After I published the post, I received an email from &lt;a href=&quot;https://www.linkedin.com/in/umachandarjayachandran/&quot;&gt;Umachandar Jayachandran&lt;/a&gt; who is a Principal Program Manager in the SQL Server team and is working on integration of R, Python and other runtimes into SQL Server (basically, he knows this &quot;stuff&quot;). In the mail, he said that I was somewhat incorrect in what I said about how the &lt;strong&gt;SQL Server Compute Context&lt;/strong&gt; (SQLCC) works.&lt;/p&gt;

&lt;p&gt;So I decided to write a post to correct my mistakes, and this is it. While I wrote this post I realized that there are more to the SQL compute context that meets ones eye, so I will - in all likelihood - write more posts about SQLCC.&lt;/p&gt;

&lt;p&gt;Before I begin I want to say a very big &lt;strong&gt;THANK YOU&lt;/strong&gt; to &lt;a href=&quot;https://www.linkedin.com/in/umachandarjayachandran/&quot;&gt;Umachandar&lt;/a&gt; as well as &lt;a href=&quot;https://twitter.com/nelliegson&quot;&gt;Nellie Gustafsson&lt;/a&gt; who also is a SQL Server Program Manager at Microsoft. Without them making me see the &quot;errors of my way&quot; I would not have been able to write this post.&lt;/p&gt;

&lt;!--more--&gt;


&lt;p&gt;A little bit of background first.&lt;/p&gt;

&lt;h2&gt;Background&lt;/h2&gt;

&lt;p&gt;We all know how SQL Server supports parallelism, whereby it decides whether to execute a statement in parallel or not, and the &lt;code&gt;MAXDOP&lt;/code&gt; setting defines the number of processors executing the statement. Parallel execution is also supported when executing &lt;code&gt;sp_execute_external_script&lt;/code&gt; by setting the &lt;code&gt;@parallel&lt;/code&gt; parameter to &lt;code&gt;1&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; You are not guaranteed to execute in parallel even if you set the parameter. SQL Server decides whether the statement you want to execute should be executed in parallel or not.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;So, if SQL decides that it can execute in parallel, what happens is that multiple SqlSatellite instances and connections are created. Multiple &lt;code&gt;BxlServer.exe&lt;/code&gt; processes host the SqlSatellites, and SQL Server acts as a coordinator and sends data to the various SqlSatellites:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sql_r_services_ext_scriptIII_multi_process.png&quot; width=&quot;800&quot; height=&quot;522&quot;  &gt;
&lt;strong&gt;Figure 1:&lt;/strong&gt; &lt;em&gt;Parallel Execution&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Figure 1&lt;/em&gt; tries to illustrate executing external script in parallel with a &lt;code&gt;MAXDOP&lt;/code&gt; setting of 6 (6 processes used). The numbers in the figure are:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;We call &lt;code&gt;sp_execute_external_script&lt;/code&gt; and SQL Server calls into the launchpad service.&lt;/li&gt;
&lt;li&gt;The launchpad service creates RTerm processes which in turn creates BxlServer processes. Based on &lt;code&gt;MAXDOP&lt;/code&gt;, multiple executing processes &quot;spin up&quot;.&lt;/li&gt;
&lt;li&gt;TCP connections from the SqlSatellite in the executing processes get established.&lt;/li&gt;
&lt;li&gt;SQL server sends input data to the SqlSatellites.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;BxlServer.exe&lt;/code&gt; processes the data.&lt;/li&gt;
&lt;li&gt;SQL Server receives data back from the individual SqlSatellite.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;In &lt;em&gt;Figure 1&lt;/em&gt; you see how the execution is in parallel and how SQL Server acts as a coordinator. What I mean with that is that the SqlSatellites make connections to SQL Server, SQL Server sends batches of data to the SqlSatellites, the BxlServer processes handle the data, and finally, SQL receives results back from the SqlSatellites. The good thing about how this works is that it does not matter whether you use &lt;strong&gt;RevoScaleR&lt;/strong&gt; or &lt;strong&gt;CRANR&lt;/strong&gt; functions, they execute in parallel regardless.&lt;/p&gt;

&lt;p&gt;The downside with this type of parallel execution (&lt;code&gt;@parallel = 1&lt;/code&gt;) is that the processes are independent of each other:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;SqlSatellite makes independent connections to SQL Server.&lt;/li&gt;
&lt;li&gt;SQL Server sends individual batches of data to the SqlSatellite.&lt;/li&gt;
&lt;li&gt;The BxlServer processes hosting the SqlSatellites processes the data.&lt;/li&gt;
&lt;li&gt;SQL Server receives results back from the SqlSatellites.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Why this is a downside is that, as the data is processed independently, if your data has dependencies between different rows (like creating models), there is a high risk that different processes process the dependent rows. We saw that in &lt;a href=&quot;/2018/03/21/microsoft-sql-server-r-services-sp-execute-external-script-iii/&quot;&gt;sp_execute_external_script - III&lt;/a&gt; where we had code like so:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Model in Parallel&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;EXEC&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sp_execute_external_script&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;      &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;language&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'R'&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;        pid &amp;lt;- Sys.getpid()
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;        myModel &amp;lt;- rxLinMod(y ~ rand1 + rand2 + rand3 + rand4 + rand5,
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='6' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                      data=InputDataSet)
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='7' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;        model &amp;lt;- serialize(myModel, NULL);
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='8' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;        modelbinstr = paste(model, collapse = &quot;&quot;)
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='9' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;        OutputDataSet &amp;lt;- data.frame(ProcessId = pid,
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='10' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                                    nRows=myModel$nValidObs,
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='11' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                                    theModel = modelbinstr)'&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='12' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;   &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;input_data_1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'SELECT TOP(2400000) y, rand1, rand2, rand3,
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='13' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                                           rand4, rand5
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='14' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                       FROM dbo.tb_Rand_3M
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='15' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                       WHERE  rand5 &amp;gt;= 10         &lt;br/&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='16' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                       OPTION(querytraceon 8649, MAXDOP 4)'&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='17' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;   &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parallel&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='18' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;WITH&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;RESULT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SETS&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ProcessId&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;Rows&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='19' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                   &lt;span class=&quot;n&quot;&gt;ModelAsVarchar&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nvarchar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 1:&lt;/strong&gt; &lt;em&gt;Model Creation in Parallel&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The code in &lt;em&gt;Code Snippet1&lt;/em&gt; is supposed to create a model from some random data and then it outputs the serialized model as a string. However when we execute the code in &lt;em&gt;Code Snippet 1&lt;/em&gt; we get a result looking like so:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sql_r_services_ext_scriptIII_ssms4.png&quot; width=&quot;796&quot; height=&quot;130&quot;  &gt;
&lt;strong&gt;Figure 2:&lt;/strong&gt; &lt;em&gt;Parallel Model Creation&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Oh, that was probably not what we wanted - four different models from four different process id's. We see that the models are different based on the outlined, in red, part of &lt;em&gt;Figure 2&lt;/em&gt;. So what we have seen right now should tell us that executing in parallel is not always a good thing.&lt;/p&gt;

&lt;p&gt;At this stage, you may wonder if everything you have read about &lt;strong&gt;RevoScaleR&lt;/strong&gt; being optimised for Big Data and parallel processing if that is just a marketing ploy? No, it is not, it is correct that the  &lt;strong&gt;RevoScaleR&lt;/strong&gt; functions are optimised, and have parallel capabilities. However, for parallel processing, they need the help of the &lt;strong&gt;SQL Server Compute Context&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;Housekeeping&lt;/h2&gt;

&lt;p&gt;Before we &quot;dive&quot; into today's topics let us look at the code and the tools we use today. This section is here for those who want to follow along in what we are doing in the post.&lt;/p&gt;

&lt;h4&gt;Helper Tools&lt;/h4&gt;

&lt;p&gt;To help us figure out the things we want, we use &lt;em&gt;Process Explorer&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Process Explorer&lt;/em&gt; is used to look at running processes.&lt;/li&gt;
&lt;/ul&gt;


&lt;h4&gt;Code&lt;/h4&gt;

&lt;p&gt;This is the database objects we use in this post:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Setup&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;USE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;master&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;GO&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NOCOUNT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;GO&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='6' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line='7' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;DROP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DATABASE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IF&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;EXISTS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TestParallel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='8' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;GO&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='9' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line='10' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DATABASE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TestParallel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='11' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;GO&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='12' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line='13' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;USE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TestParallel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='14' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;GO&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='15' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line='16' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;DROP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IF&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;EXISTS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dbo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tb_Rand_50M&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='17' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;GO&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='18' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dbo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tb_Rand_50M&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='19' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='20' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;n&quot;&gt;RowID&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bigint&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;identity&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;PRIMARY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;KEY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='21' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rand1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='22' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;n&quot;&gt;rand2&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rand3&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='23' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;n&quot;&gt;rand4&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rand5&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='24' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='25' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;GO&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='26' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line='27' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dbo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tb_Rand_50M&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rand1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rand2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rand3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rand4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rand5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='28' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TOP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50000000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;CAST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;ABS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CHECKSUM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NEWID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;14&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='29' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;CAST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;ABS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CHECKSUM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NEWID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='30' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;CAST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;ABS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CHECKSUM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NEWID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='31' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;CAST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;ABS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CHECKSUM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NEWID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;14&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='32' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;CAST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;ABS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CHECKSUM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NEWID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='33' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;  &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;CAST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;ABS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CHECKSUM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NEWID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='34' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;objects&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;o1&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='35' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;CROSS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;objects&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;o2&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='36' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;CROSS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;objects&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;o3&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='37' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;CROSS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;objects&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;o4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='38' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;GO&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='39' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 2:&lt;/strong&gt; &lt;em&gt;Setup of Database, Table and Data&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The code above, (&lt;em&gt;Code Snippet 2&lt;/em&gt;), creates a database - &lt;code&gt;TestParallel&lt;/code&gt; and one table:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;dbo.tb_Rand_50M&lt;/code&gt; - This table contains the data we want to analyse. Yes, I know - the data is completely useless, but it is a lot of it, and it helps to illustrate what we want to do.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;In &lt;em&gt;Code Snippet 2&lt;/em&gt; we also see how we load 50 million records into the &lt;code&gt;dbo.tb_Rand_50M&lt;/code&gt;. Be aware that when you run the code in &lt;em&gt;Code Snippet 2&lt;/em&gt; it may take some time to finish due to the loading of the data.&lt;/p&gt;

&lt;h2&gt;SQL Server Compute Context&lt;/h2&gt;

&lt;p&gt;In &lt;a href=&quot;/2018/03/21/microsoft-sql-server-r-services-sp-execute-external-script-iii/&quot;&gt;sp_execute_external_script - III&lt;/a&gt; we spoke about as part of the functionality in RevoScaleR is the ability to define where a workload executes. By default, it executes on your local machine, but you can also set it to execute in context of somewhere else: Hadoop, Spark and also SQL Server. For this post it is the the SQLCC that interests us.&lt;/p&gt;

&lt;p&gt;The SQLCC is not only available from within SQL Server, but also from desktop applications, like Visual Studio, RStudio and so forth. To demonstrate the ability to execute in a separate context we use Visual Studio and some R code:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Open &lt;em&gt;Visual Studio&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Create a new R project.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;In the editor you now have an empty &lt;code&gt;.R&lt;/code&gt; file.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; You do not have to use R, you can if you want to use Python as well.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;In the &lt;code&gt;.R&lt;/code&gt; file enter following code:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;R Code&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;c1&quot;&gt;# set up the connection string&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;sqlServerConnString&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Driver=SQL Server;server=.\\inst2k17;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                        database=testParallel;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                        uid=&amp;lt;the user id&amp;gt;;pwd=&amp;lt;the password&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='6' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;mydata&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RxSqlServerData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sqlQuery&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;SELECT y, rand1, rand2,
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='7' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                                      rand3, rand4, rand5
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='8' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                                      FROM dbo.tb_Rand_50M&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='9' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                          &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connectionString&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sqlServerConnString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='10' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='11' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;system.time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='12' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;myModel&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rxLinMod&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rand1&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rand2&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rand3&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rand4&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rand5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='13' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mydata&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)));&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 3:&lt;/strong&gt; &lt;em&gt;R Code - Local Compute Context&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;As we see in &lt;em&gt;Code Snippet 3&lt;/em&gt;, we create a linear regression model over the 50 million rows in the &lt;code&gt;dbo.tb_Rand_50M&lt;/code&gt; table and we measure the time it takes (&lt;code&gt;system.time()&lt;/code&gt;). As no compute context is defined the code runs under the local context in one thread.&lt;/p&gt;

&lt;p&gt;Before we execute the code we should start up &lt;em&gt;Process Explorer&lt;/em&gt; to see what processes are involved when running the code:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Run &lt;em&gt;Process Explorer&lt;/em&gt; as admin.&lt;/li&gt;
&lt;li&gt;Navigate to the &lt;code&gt;devenv.exe&lt;/code&gt; process in &lt;em&gt;Process Explorer&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Notice how, under the &lt;code&gt;devenv.exe&lt;/code&gt; process, there is a node for &lt;code&gt;Microsoft.R.Host.Broker.exe&lt;/code&gt;. Under that node are two &lt;code&gt;Microsoft.R.Host.exe&lt;/code&gt; nodes which in turn hosts &lt;code&gt;BxlServer.exe&lt;/code&gt;. This is in line with what we discussed in &lt;a href=&quot;/2017/07/22/microsoft-sql-server-r-services-internals-viii/&quot;&gt;Internals - VIII&lt;/a&gt; about hosting of R processes.&lt;/p&gt;

&lt;p&gt;When you execute the code in &lt;em&gt;Code Snippet 3&lt;/em&gt; the output in &lt;em&gt;Process Explorer&lt;/em&gt; looks something like so:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sql_ml_services_comp_ctx1.png&quot; width=&quot;435&quot; height=&quot;309&quot;  &gt;
&lt;strong&gt;Figure 3:&lt;/strong&gt; &lt;em&gt;Local Context Execution&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In &lt;em&gt;Figure 3&lt;/em&gt; we see the &lt;code&gt;devenv.exe&lt;/code&gt; process outlined in red and the two &lt;code&gt;Microsoft.R.Host.exe&lt;/code&gt; processes outlined in blue. The second &lt;code&gt;Microsoft.R.Host.exe&lt;/code&gt; process shows how the local &lt;code&gt;BxlServer.exe&lt;/code&gt; process (highlighted in red) handles the execution of the code. We see this as the &lt;code&gt;CPU&lt;/code&gt; value is greater than 0.01. As the process is local, it also means that the process retrieves all data it needs from wherever the data resides. So this is what executing in the local context looks like, oh and before we go any further, please make a note of the output from the &lt;code&gt;system.time()&lt;/code&gt; call. On my machine, it is ~40 seconds.&lt;/p&gt;

&lt;p&gt;Let us now see what it looks like when we execute in the SQL Server compute context. To enable the SQL Server compute context we only need to add a couple of lines of code from what we saw in &lt;em&gt;Code Snippet 3&lt;/em&gt;:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;R SQL Compute Context Code&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;c1&quot;&gt;# set up the connection string&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;sqlServerConnString&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Driver=SQL Server;server=.\\inst2k17;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                        database=testParallel;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                        uid=&amp;lt;the user id&amp;gt;;pwd=&amp;lt;the password&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='6' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;c1&quot;&gt;# set up a compute context&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='7' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;sqlCtx&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RxInSqlServer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connectionString&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sqlServerConnString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='8' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                        &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;numTasks&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='9' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;c1&quot;&gt;# set the compute context to be the sql context&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='10' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;rxSetComputeContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sqlCtx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='11' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='12' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;mydata&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RxSqlServerData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sqlQuery&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;SELECT y, rand1, rand2,
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='13' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                                      rand3, rand4, rand5
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='14' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                                      FROM dbo.tb_Rand_50M&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='15' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                          &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connectionString&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sqlServerConnString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='16' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='17' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;system.time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='18' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;myModel&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rxLinMod&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rand1&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rand2&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rand3&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rand4&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rand5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='19' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mydata&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)));&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 4:&lt;/strong&gt; &lt;em&gt;R Code - SQL Server Compute Context&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In the code above we use the &lt;code&gt;RxInSqlServer()&lt;/code&gt; function to indicate we want to execute in a SQL context. The &lt;code&gt;connectionString&lt;/code&gt; property defines where we execute, and the &lt;code&gt;numTasks&lt;/code&gt; property sets the number of tasks (processes) to run for each computation, in &lt;em&gt;Code Snippet 4&lt;/em&gt; it is set to 1 which from a processing perspective should match what we do in &lt;em&gt;Code Snippet 3&lt;/em&gt;. Before we execute the code in &lt;em&gt;Code Snippet 4&lt;/em&gt; we do what we did before we ran the code in &lt;em&gt;Code Snippet 3&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Run &lt;em&gt;Process Explorer&lt;/em&gt; as admin.&lt;/li&gt;
&lt;li&gt;Navigate to the &lt;code&gt;devenv.exe&lt;/code&gt; process in &lt;em&gt;Process Explorer&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;In addition, also look at the &lt;code&gt;Launchpad.exe&lt;/code&gt; process in &lt;em&gt;Process Explorer&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;When we execute we see that the &lt;code&gt;BxlServer.exe&lt;/code&gt; processes under the &lt;code&gt;Microsoft.R.Host.exe&lt;/code&gt; processes are idling, but when we look at the &lt;code&gt;Launchpad.exe&lt;/code&gt; process we see this:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sql_ml_services_comp_ctx2.png&quot; width=&quot;425&quot; height=&quot;340&quot;  &gt;
&lt;strong&gt;Figure 4:&lt;/strong&gt; &lt;em&gt;SQL Server Compute Context Execution&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Interesting, we see that one of the &lt;code&gt;BxlServer.exe&lt;/code&gt; processes under &lt;code&gt;Launchpad.exe&lt;/code&gt; is busy (highlighted in yellow). So we see that the code executes in the context of SQL Server. What also is interesting is that the output from &lt;code&gt;system.time()&lt;/code&gt;, is on my machine, around 32 seconds - 8 seconds less than when the execution happened in the local compute context! The fact that the execution time is shorter when executing in the SQL Server compute context than when executing in the local context is interesting since we do not do anything different - no more tasks, nothing. Later in this post, we come back to this, but now let us look at using the SQLCC when executing inside SQL Server - like when executing &lt;code&gt;sp_execute_external_script&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;SQL Server and SQL Server Compute Context&lt;/h2&gt;

&lt;p&gt;So the question is now that if we execute from inside of SQL Server, is that not automatically within a SQLCC? It is a valid question since what we see in &lt;em&gt;Figure 4&lt;/em&gt; looks exactly what we saw in quite a few of the posts in the &lt;a href=&quot;/series/sql_server_2k16_r_services&quot;&gt;Internals&lt;/a&gt; series. In there we saw how the &lt;code&gt;Launchpad.exe&lt;/code&gt; process is hosting, via &lt;code&gt;RTerm.exe&lt;/code&gt;, a &lt;code&gt;BxlServer.exe&lt;/code&gt; server process which processes the data. So let us switch over to SQL Server and &lt;em&gt;SQL Server Management Studio&lt;/em&gt; &lt;em&gt;SSMS&lt;/em&gt; and try to see if we execute in the SQLCC or not.&lt;/p&gt;

&lt;p&gt;You see in &lt;em&gt;Code Snippet 4&lt;/em&gt; how we use the function &lt;code&gt;rxSetComputeContext()&lt;/code&gt; to set the compute context. There is also a function to retrieve the compute context you are in: &lt;code&gt;rxGetComputeContext()&lt;/code&gt; (in Python it is &lt;code&gt;rx_get_compute_context&lt;/code&gt;) which we now use:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Get Compute Context&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;EXEC&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sp_execute_external_script&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;      &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'R'&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;            ctx &amp;lt;- rxGetComputeContext();
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;            show(ctx);'&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 5:&lt;/strong&gt; &lt;em&gt;Use rxGetComputeContext()&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;So in &lt;em&gt;Code Snippet 5&lt;/em&gt; we call the &lt;code&gt;rxGetComputeContext()&lt;/code&gt; function and assign the context to a variable for which we then print out the information from the metadata columns of the variable. This is what we see when we execute the code:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sql_ml_services_comp_local_ctx.png&quot; width=&quot;350&quot; height=&quot;65&quot;  &gt;
&lt;strong&gt;Figure 5:&lt;/strong&gt; &lt;em&gt;SQL Server Local Compute Context&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The highlighted part in &lt;em&gt;Figure 5&lt;/em&gt; says that we do run in the local compute context (&lt;code&gt;RxLocalSeq&lt;/code&gt;). So, even when executing in SQL Server we need to explicitly set the SQL Server compute context via &lt;code&gt;RxInSqlServer()&lt;/code&gt; and &lt;code&gt;rxSetComputeContext()&lt;/code&gt; as we did in &lt;em&gt;Code Snippet 4&lt;/em&gt;.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; The local compute context is named &lt;code&gt;RxLocalSeq&lt;/code&gt; (local sequential) and there is also another context &lt;code&gt;RxLocalParallel&lt;/code&gt; (local parallel), which you can use if you manually manage distributed processing in Hadoop or Spark.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt; Let us now take a closer look at &lt;code&gt;RxInSqlServer()&lt;/code&gt;.&lt;/p&gt;

&lt;h4&gt;RxInSqlServer()&lt;/h4&gt;

&lt;p&gt;When setting up a SQL Server Compute Context we use the &lt;code&gt;RxInSqlServer&lt;/code&gt; function. The function name is the same for both R and Python and the signatures look like so:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;R&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;RxInSqlServer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connectionString&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;              &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;numTasks&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rxGetOption&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;numTasks&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;              &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;autoCleanup&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;TRUE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;consoleOutput&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;FALSE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;              &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;executionTimeoutSeconds&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wait&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;TRUE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;              &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;packagesToLoad&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shareDir&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='6' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;              &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;server&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;databaseName&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='7' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;              &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;   &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 6:&lt;/strong&gt; &lt;em&gt;R Signature&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;Python&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;n&quot;&gt;revoscalepy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RxInSqlServer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connection_string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                          &lt;span class=&quot;n&quot;&gt;num_tasks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                          &lt;span class=&quot;n&quot;&gt;auto_cleanup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                          &lt;span class=&quot;n&quot;&gt;console_output&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                          &lt;span class=&quot;n&quot;&gt;execution_timeout_seconds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='6' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                          &lt;span class=&quot;n&quot;&gt;wait&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='7' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                          &lt;span class=&quot;n&quot;&gt;packages_to_load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 7:&lt;/strong&gt; &lt;em&gt;Python Signature&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;When we compare the signatures in &lt;em&gt;Code Snippet 6&lt;/em&gt; and &lt;em&gt;Code Snippet 7&lt;/em&gt; we see they differ somewhat, the reason for this I am not sure about but for now let us look at the parameters that are useful/important when executing &lt;code&gt;sp_execute_external_script&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;connectionString&lt;/strong&gt;/&lt;strong&gt;connection_string&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;The ODBC connection string to the SQL Server where you want the computations to take place and you can use both Windows authentication mode as well as mixed mode.&lt;/p&gt;

&lt;p&gt;Please keep in mind that the connection string for the data source (where you get the data to process from) does not need to be the same as the connection string for the context and the context connection string does not have to point to a different database than the one you execute in.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;numTasks&lt;/strong&gt;/&lt;strong&gt;num_tasks&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;This parameter is where you set the number of tasks (processes) to run for each computation. The parameter defines the maximum number of tasks SQL Server can use. SQL Server can, however, decide to start fewer processes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Dependent on the volume of data (small dataset lower number of processes).&lt;/li&gt;
&lt;li&gt;If other jobs are already using too many resources.&lt;/li&gt;
&lt;li&gt;If num_tasks exceeds the MAXDOP (maximum degree of parallelism) configuration option in SQL Server.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Each of the tasks is given data in parallel and does computations in parallel, and so computation time may decrease as num_tasks increases.&lt;/p&gt;

&lt;h4&gt;Set the Context&lt;/h4&gt;

&lt;p&gt;To set the compute context we do the same as in &lt;em&gt;Code Snippet 4&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Set the connection string which defines where the computations take place.&lt;/li&gt;
&lt;li&gt;Call &lt;code&gt;RxInSqlServer()&lt;/code&gt; to create the context.&lt;/li&gt;
&lt;li&gt;Set the context via &lt;code&gt;rxSetComputeContext()&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Computations using RevoScaleR/revoscalepy functionality is now &quot;automagically&quot; processed in the defined compute context whereas non RevoScaleR/revoscalepy functions run in the local context.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;To see what it looks like we edit the code in &lt;em&gt;Code Snippet 4&lt;/em&gt; somewhat:&lt;/p&gt;

&lt;p&gt;&lt;figure class='code-highlight-figure'&gt;&lt;figcaption class='code-highlight-caption'&gt;&lt;span class='code-highlight-caption-title'&gt;SQL Compute Context&lt;/span&gt;&lt;/figcaption&gt;&lt;div class='code-highlight'&gt;&lt;pre class='code-highlight-pre'&gt;&lt;div data-line='1' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;DECLARE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;start&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datetime2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SYSUTCDATETIME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='2' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;EXEC&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sp_execute_external_script&lt;/span&gt;&lt;br/&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='3' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;      &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;language&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'R'&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='4' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;    &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='5' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;      # set up the connection string
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='6' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;      sqlServerConnString &amp;lt;- &quot;Driver=SQL Server;server=.&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;inst2k17;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='7' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                              database=testParallel;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='8' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                              uid=&amp;lt;the user id&amp;gt;;pwd=&amp;lt;the password&amp;gt;&quot;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='9' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line='10' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;      # set up a compute context
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='11' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;      sqlCtx &amp;lt;- RxInSqlServer(connectionString = sqlServerConnString,
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='12' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                              numTasks = 1)
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='13' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;      # set the compute context to be the sql context
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='14' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;      rxSetComputeContext(sqlCtx)
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='15' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line='16' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;      mydata &amp;lt;- RxSqlServerData(sqlQuery = &quot;SELECT y, rand1, rand2,
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='17' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                                           rand3, rand4, rand5
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='18' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                                           FROM dbo.tb_Rand_50M&quot;,
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='19' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                                connectionString = sqlServerConnString);
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='20' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line='21' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;      myModel &amp;lt;- rxLinMod(y ~ rand1 + rand2 + rand3 + rand4 + rand5,
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='22' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;                          data = mydata);
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='23' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line='24' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;      ctx &amp;lt;- rxGetComputeContext();
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='25' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;      show(ctx);'&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line='26' class='code-highlight-row numbered'&gt;&lt;div class='code-highlight-line'&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DATEDIFF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ss&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SYSUTCDATETIME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Snippet 8:&lt;/strong&gt; &lt;em&gt;SQL Compute Context from sp_execute_external_script&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The only difference between the code in &lt;em&gt;Code Snippet 8&lt;/em&gt; and &lt;em&gt;Code Snippet 4&lt;/em&gt; is that we do not use &lt;code&gt;system.time&lt;/code&gt; anymore, but instead do a&lt;code&gt;DATEDIFF&lt;/code&gt;. We also print out the context at the very end, and when we execute we see that we are in the SQLCC:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sql_ml_services_comp_sql_ctx.png&quot; width=&quot;440&quot; height=&quot;295&quot;  &gt;
&lt;strong&gt;Figure 5:&lt;/strong&gt; &lt;em&gt;Compute Context Output&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The two highlighted parts in &lt;em&gt;Figure 5&lt;/em&gt; shows that we indeed executed inside the SQLCC. As for the execution time; I see in the &lt;em&gt;Results&lt;/em&gt; tab in &lt;em&gt;SSMS&lt;/em&gt; that the execution took ~30 seconds. If you were to comment out the &lt;code&gt;RxInSqlServer&lt;/code&gt; and &lt;code&gt;rxSetComputeContext&lt;/code&gt; statements and re-run the code, you'd see the same as we saw above when we used Visual Studio. E.g. executing inside the SQLCC is faster than in the local context, even though it runs in the same database and with the same number of tasks (1). As mentioned in the part where we looked at executing from Visual Studio, something is &quot;going on&quot;, and that is a topic for a future post.&lt;/p&gt;

&lt;h2&gt;Under the Covers&lt;/h2&gt;

&lt;p&gt;Now it is time to see how it works when we execute code running in a SQL Server compute context set up with multiple tasks. Remember what we saw in &lt;a href=&quot;/2018/03/21/microsoft-sql-server-r-services-sp-execute-external-script-iii/&quot;&gt;sp_execute_external_script - III&lt;/a&gt; when we executed code that ran in parallel:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sql_r_services_ext_scriptIII_proc_exp2.png&quot; width=&quot;720&quot; height=&quot;575&quot;  &gt;
&lt;strong&gt;Figure 6:&lt;/strong&gt; &lt;em&gt;Parallel Execution&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;What we see in &lt;em&gt;Figure 6&lt;/em&gt; is what we discussed in the Recap; how multiple RTerm and &lt;code&gt;BxlServer.exe&lt;/code&gt; processes ran and handled the data independently. So what does it look like when we use the SQLCC, and we execute the code in &lt;em&gt;Code Snippet 8&lt;/em&gt;, but the compute context's number of tasks is set to 4: &lt;code&gt;numTasks = 4&lt;/code&gt;?&lt;/p&gt;

&lt;p&gt;So to investigate, let us do the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Run &lt;em&gt;Process Explorer&lt;/em&gt; as admin.&lt;/li&gt;
&lt;li&gt;Restart the Launchpad service for the SQL Server compute context's instance  (this is to clean-up any RTerm processes).&lt;/li&gt;
&lt;li&gt;Navigate to the &lt;code&gt;Launchpad.exe&lt;/code&gt; process in &lt;em&gt;Process Explorer&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Execute the code in &lt;em&gt;Code Snippet 8&lt;/em&gt;, but ensure you have changed &lt;code&gt;numTasks&lt;/code&gt; to 4.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;While the code is executing, look under the &lt;code&gt;Launchpad.exe&lt;/code&gt; process in &lt;em&gt;Process Explorer&lt;/em&gt; and you see something like so:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/sql_ml_services_comp_mpi.png&quot; width=&quot;620&quot; height=&quot;500&quot;  &gt;
&lt;strong&gt;Figure 7:&lt;/strong&gt; &lt;em&gt;Parallel Execution in Compute Context&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Well, that is interesting! In &lt;em&gt;Figure 7&lt;/em&gt; we now see not only the &quot;usual&quot; RTerm and &lt;code&gt;BxlServer.exe&lt;/code&gt; processes but also a new hosting process, outlined in red, &lt;code&gt;mpiexec.exe&lt;/code&gt;. Underneath the &lt;code&gt;mpiexec.exe&lt;/code&gt; process we see the &lt;code&gt;smpd.exe&lt;/code&gt; process (outlined in green) and then four RTerm processes with &lt;code&gt;BxlServer.exe&lt;/code&gt; processes which handle the workload. So, &lt;code&gt;mpiexec.exe&lt;/code&gt; and &lt;code&gt;smpd.exe&lt;/code&gt; are parts of &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/bb524831%28v=vs.85%29.aspx?f=255&amp;amp;MSPPError=-2147217396&quot;&gt;&lt;strong&gt;Microsoft MPI&lt;/strong&gt;&lt;/a&gt; which is an implementation of MPI which is a communication protocol for programming parallel computers. We talk briefly about MPI a bit later in this post, but first, let us understand the flow.&lt;/p&gt;

&lt;h4&gt;Flow&lt;/h4&gt;

&lt;p&gt;We execute &lt;code&gt;sp_execute_external_script&lt;/code&gt; and that &quot;spins up&quot; the usual RTerm and BxlServer process which we discussed in quite a few &lt;a href=&quot;/series/sql_server_2k16_r_services&quot;&gt;Internals&lt;/a&gt; posts. SQL Server creates the compute context via another &lt;code&gt;sp_execute_external_script&lt;/code&gt; call to the Launchpad service.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; Above I say &lt;em&gt;another &lt;code&gt;sp_execute_external_script&lt;/code&gt; call&lt;/em&gt;, it is in fact two calls. Hopefully a future post covers why and how there are multiple calls&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The Launchpad service creates the &lt;code&gt;mpiexec.exe&lt;/code&gt; process which in turns creates the &lt;code&gt;smpd.exe&lt;/code&gt; process and the Rterm/BxlServer pairs. If &lt;code&gt;numTasks&lt;/code&gt; is set to 1, the Launchpad service does not create a &lt;code&gt;mpiexec.exe&lt;/code&gt; process, but instead, it creates a Rterm/BxlServer pair.&lt;/p&gt;

&lt;h2&gt;MPI&lt;/h2&gt;

&lt;p&gt;As I mentioned above Microsoft MPI is a Microsoft implementation of the Message Passing Interface standard for developing and running parallel applications on the Windows platform, and it is an integral part of Microsoft HPC (High Performance Computing).&lt;/p&gt;

&lt;h4&gt;mpiexec &amp;amp; smpd&lt;/h4&gt;

&lt;p&gt;The &lt;code&gt;mpiexec&lt;/code&gt; is called from the launchpad service to start the parallel job. The &lt;code&gt;mpiexec&lt;/code&gt; process in turn calls &lt;code&gt;smpd&lt;/code&gt; which is a parallel process manager and it launches/monitors RTerm/BxlServer processes.&lt;/p&gt;

&lt;h2&gt;Summary&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;The compute context defines where/what executes a workload.&lt;/li&gt;
&lt;li&gt;RevoScaleR exposes multiple contexts, where SQL Server is one of them.&lt;/li&gt;
&lt;li&gt;You create the SQL Server compute-context by calling &lt;code&gt;RxInSqlServer&lt;/code&gt; followed by &lt;code&gt;rxSetComputeContext&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;You define how many processes to tun by the &lt;code&gt;RxInSqlServer&lt;/code&gt;'s &lt;code&gt;numTasks&lt;/code&gt; parameter.&lt;/li&gt;
&lt;li&gt;The execution of the code inside the SQLCC is initiated via two &quot;extra&quot; &lt;code&gt;sp_execute_external_script&lt;/code&gt; calls.&lt;/li&gt;
&lt;li&gt;The compute context pushes fragments of the data to the tasks, which processes the data.&lt;/li&gt;
&lt;li&gt;The results are merged back into one result.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;~ Finally&lt;/h2&gt;

&lt;p&gt;If you have comments, questions etc., please comment on this post or &lt;a href=&quot;mailto:niels.it.berglund@gmail.com&quot;&gt;ping&lt;/a&gt; me.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Interesting Stuff - Week 19</title>
   <link href="http://nielsberglund.com/2018/05/13/interesting-stuff-week-19/"/>
   <updated>2018-05-13T20:09:52+02:00</updated>
   <id>http://nielsberglund.com/2018/05/13/interesting-stuff---week-19</id>
   <content type="html">&lt;p&gt;Throughout the week, I read a lot of blog-posts, articles, and so forth, that has to do with things that interest me:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;data science&lt;/li&gt;
&lt;li&gt;data in general&lt;/li&gt;
&lt;li&gt;distributed computing&lt;/li&gt;
&lt;li&gt;SQL Server&lt;/li&gt;
&lt;li&gt;transactions (both db as well as non db)&lt;/li&gt;
&lt;li&gt;and other &quot;stuff&quot;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This blog-post is the &quot;roundup&quot; of the things that have been most interesting to me, for the week just ending.&lt;/p&gt;

&lt;!--more--&gt;


&lt;h2&gt;Distributed Computing&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://engineering.skybettingandgaming.com/2018/05/04/firedrills-in-core/&quot;&gt;Crash! Bang! Wallop! Practice makes perfect&lt;/a&gt;. A very interesting blog post about how &lt;strong&gt;Sky Betting &amp;amp; Gaming&lt;/strong&gt; conducts &lt;em&gt;Chaos&lt;/em&gt; and &lt;em&gt;Disaster Recovery&lt;/em&gt; testing.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.infoq.com/articles/microservices-and-containers-book-review&quot;&gt;Book Review and Q&amp;amp;A: Microservices and Containers by Parminder Singh Kocher&lt;/a&gt;. An &lt;a href=&quot;https://www.infoq.com/&quot;&gt;InfoQ&lt;/a&gt; book review of &lt;strong&gt;Microservices and Containers&lt;/strong&gt;. The book provides a deep dive into the central concepts, patterns and technologies used to implement modern, highly available, highly scalable cloud-native applications.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Streaming&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.confluent.io/blog/level-up-your-ksql/&quot;&gt;Level Up Your KSQL&lt;/a&gt;. A blog post announcing a video series to skill up on KSQL. This is a must watch if you are interested Kafka!&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://azure.microsoft.com/en-us/blog/4-new-features-now-available-in-azure-stream-analytics/&quot;&gt;4 new features now available in Azure Stream Analytics&lt;/a&gt;. This post announces four new features in Azure Stream Analytics. Of the new features, I am most excited about the &lt;code&gt;SessionWindow&lt;/code&gt; feature. The &lt;code&gt;SessionWindow&lt;/code&gt; allows users to filter out periods of time where there is no data. The new feature does this by creating dynamic temporal windows of variable sizes based on the batches of incoming data.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.confluent.io/blog/rounding-up-kafka-summit-london-2018/&quot;&gt;Rounding Up Kafka Summit London 2018&lt;/a&gt;. This post is not so much a roundup as an announcement that videos are now available for the recently concluded Kafka 2018 summit. Now I know what to do with all the free time I have - watch Kafka videos!&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://azure.microsoft.com/en-us/blog/azure-event-hubs-for-kafka-ecosystems-in-public-preview/&quot;&gt;Azure Event Hubs for Kafka Ecosystems in public preview&lt;/a&gt;. This is so very exciting! The ability to integrate Kafka with Azure Event Hubs.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Data Science&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blogs.msdn.microsoft.com/dotnet/2018/05/07/introducing-ml-net-cross-platform-proven-and-open-source-machine-learning-framework/&quot;&gt;Introducing ML.NET: Cross-platform, Proven and Open Source Machine Learning Framework&lt;/a&gt;. A blog post announcing ML.NET: a cross-platform, open source machine learning framework. ML.NET allows .NET developers to develop their models and infuse custom ML into their applications without prior expertise in developing or tuning machine learning models.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.revolutionanalytics.com/2018/05/open-source-machine-learning-in-azure.html&quot;&gt;Open-Source Machine Learning in Azure&lt;/a&gt;. This post by &lt;a href=&quot;https://twitter.com/revodavid&quot;&gt;David&lt;/a&gt; is about a presentation he gave at Microsoft Build 2018 about how you can take your open-source tools and workflows you already use for machine learning and data science and easily transition them to the Azure cloud to take advantage of its capacity and scale.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://simplystatistics.org/2018/04/30/relationships-in-data-analysis/&quot;&gt;Relationships in Data Analysis&lt;/a&gt;.  A thought-provoking post about how data analysis is very much dependent upon human relationships.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.infoq.com/news/2018/05/Azure-Machine-Learning-New&quot;&gt;What’s New in Azure Machine Learning?&lt;/a&gt;. An &lt;a href=&quot;https://www.infoq.com/&quot;&gt;InfoQ&lt;/a&gt; summary from Microsoft Build 2018 about new features in Azure Machine Learning. There are quite a few new cool things coming.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.infoq.com/presentations/uber-ml-architecture-models&quot;&gt;Machine Learning Pipeline for Real-time Forecasting @Uber Marketplace&lt;/a&gt;. An &lt;a href=&quot;https://www.infoq.com/&quot;&gt;InfoQ&lt;/a&gt; presentation where [Danny Yuan]  discusses how Uber is using ML to improve their forecasting models, the architecture of their ML platform and lessons learned running it in production. I got so many cool ideas seeing this presentation.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Durban Azure User Group&lt;/h2&gt;

&lt;p&gt;Last Wednesday (May 9) The Durban Azure User Group had its monthly meetup, and I did a presentation:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.meetup.com/Azure-Transformation-Labs/events/250299101&quot;&gt;Get Insight Into and Analyze Your Data with Azure EventHubs &amp;amp; Stream Analytics&lt;/a&gt;. As the title says, the presentation was bout Azure Event Hubs and Azure Stream Analytics. For you who attended (and everyone else as well), there is a zip file to download &lt;a href=&quot;/downloads/presentations/azureusergroup/azureusergroup_2018-05-09.zip&quot;&gt;here&lt;/a&gt;, which contains the slide deck in pdf format and a text file with various resource links.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;SQL Server Machine Learning Services&lt;/h2&gt;

&lt;p&gt;I am still working on the post to correct the errors I had in the post; [sp_execute_external_script - III][sext3] in the &lt;a href=&quot;/series/sql_server_2k16_r_services&quot;&gt;SQL Server R Services&lt;/a&gt; series. Please, bear with me!&lt;/p&gt;

&lt;h2&gt;~ Finally&lt;/h2&gt;

&lt;p&gt;That's all for this week. I hope you enjoy what I did put together. If you have ideas for what to cover, please comment on this post or &lt;a href=&quot;mailto:niels.it.berglund@gmail.com&quot;&gt;ping&lt;/a&gt; me.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Interesting Stuff - Week 18</title>
   <link href="http://nielsberglund.com/2018/05/06/interesting-stuff-week-18/"/>
   <updated>2018-05-06T19:27:40+02:00</updated>
   <id>http://nielsberglund.com/2018/05/06/interesting-stuff---week-18</id>
   <content type="html">&lt;p&gt;Throughout the week, I read a lot of blog-posts, articles, and so forth, that has to do with things that interest me:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;data science&lt;/li&gt;
&lt;li&gt;data in general&lt;/li&gt;
&lt;li&gt;distributed computing&lt;/li&gt;
&lt;li&gt;SQL Server&lt;/li&gt;
&lt;li&gt;transactions (both db as well as non db)&lt;/li&gt;
&lt;li&gt;and other &quot;stuff&quot;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This blog-post is the &quot;roundup&quot; of the things that have been most interesting to me, for the week just ending.&lt;/p&gt;

&lt;!--more--&gt;


&lt;h2&gt;Misc.&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://muratbuffalo.blogspot.co.za/2018/04/book-review-how-to-write-lot-practical.html&quot;&gt;Book review. How to write a lot: A practical guide to productive academic writing&lt;/a&gt;. Yes I know, this has nothing to do with computing at all. However, it touches on what I try to do - write &quot;stuff&quot;. In the blog post &lt;a href=&quot;https://twitter.com/muratdemirbas&quot;&gt;Murat&lt;/a&gt; reviews a book which provides excellent suggestions to enable academics to write more. Sure, god knows I am not an academic, but I had a quick look at the book - and the suggestions work for anyone that is interested in writing. Thanks &lt;a href=&quot;https://twitter.com/muratdemirbas&quot;&gt;Murat&lt;/a&gt;!&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Streaming&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.confluent.io/blog/introducing-confluent-platform-preview-releases/&quot;&gt;Introducing Confluent Platform Preview Releases&lt;/a&gt;. A blog post announcing Confluent adding preview releases of their &lt;strong&gt;Confluent Platform&lt;/strong&gt; beside the three times a year release cycle. The first preview release looks very interesting with a lot of KSQL &quot;goodies&quot;!&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.infoq.com/presentations/flink-stateful-streaming&quot;&gt;Next Steps in Stateful Streaming with Apache Flink&lt;/a&gt;. An &lt;a href=&quot;https://www.infoq.com/&quot;&gt;InfoQ&lt;/a&gt; presentation about how Apache Flink is making stateful stream processing even more expressive and flexible to support applications in streaming that were previously not considered streamable.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Data Science&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blogs.msdn.microsoft.com/mlserver/2018/04/27/on-prem-or-on-the-cloud/&quot;&gt;On-Prem or On the Cloud&lt;/a&gt;. A blog post how you can utilise what you do in &lt;a href=&quot;https://azure.microsoft.com/en-us/services/virtual-machines/data-science-virtual-machines/&quot;&gt;Azure Data Science VM&lt;/a&gt; on-prem and &lt;strong&gt;SQL Server Machine Learning Services&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Conferences / User Groups&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.meetup.com/Azure-Transformation-Labs/events/250299101/?_xtd=gatlbWFpbF9jbGlja9oAJGUwMDZmMzI5LTVhM2QtNDVhYS05OGRiLWM4ZmM2NDZiOGNjMw&quot;&gt;Get Insight Into and Analyze Your Data with Azure EventHubs &amp;amp; Stream Analytics&lt;/a&gt;. I have the privilege to present at the upcoming Durban Azure User Group get together on May 9 about Azure Event Hubs and Azure Stream Analytics. If you are in the &quot;hood&quot;, please join. &lt;a href=&quot;https://twitter.com/bytezn&quot;&gt;Lawrance&lt;/a&gt; who is the driving force behind the user group says that there is awesome SWAG to be had, thanks to Microsoft.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;SQL Server Machine Learning Services&lt;/h2&gt;

&lt;p&gt;Sigh! In last weeks roundup I wrote how I was about to publish a new post to correct some errors I had in the post; &lt;a href=&quot;/2018/03/21/microsoft-sql-server-r-services-sp-execute-external-script-iii/&quot;&gt;sp_execute_external_script - III&lt;/a&gt; in the &lt;a href=&quot;/series/sql_server_2k16_r_services&quot;&gt;SQL Server R Services&lt;/a&gt; series. Well, it seems the post may take somewhat longer to get finished as I have realised there are quite a few things I do not understand as well as I would like to do. So please, bear with me!&lt;/p&gt;

&lt;h2&gt;~ Finally&lt;/h2&gt;

&lt;p&gt;That's all for this week. I hope you enjoy what I did put together. If you have ideas for what to cover, please comment on this post or &lt;a href=&quot;mailto:niels.it.berglund@gmail.com&quot;&gt;ping&lt;/a&gt; me.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Interesting Stuff - Week 17</title>
   <link href="http://nielsberglund.com/2018/04/29/interesting-stuff-week-17/"/>
   <updated>2018-04-29T19:17:32+02:00</updated>
   <id>http://nielsberglund.com/2018/04/29/interesting-stuff---week-17</id>
   <content type="html">&lt;p&gt;Throughout the week, I read a lot of blog-posts, articles, and so forth, that has to do with things that interest me:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;data science&lt;/li&gt;
&lt;li&gt;data in general&lt;/li&gt;
&lt;li&gt;distributed computing&lt;/li&gt;
&lt;li&gt;SQL Server&lt;/li&gt;
&lt;li&gt;transactions (both db as well as non db)&lt;/li&gt;
&lt;li&gt;and other &quot;stuff&quot;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This blog-post is the &quot;roundup&quot; of the things that have been most interesting to me, for the week just ending.&lt;/p&gt;

&lt;!--more--&gt;


&lt;h2&gt;Distributed Computing&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://bravenewgeek.com/more-environments-will-not-make-things-easier/&quot;&gt;More Environments Will Not Make Things Easier&lt;/a&gt;. I found this blog-post - and &lt;a href=&quot;https://twitter.com/tyler_treat&quot;&gt;Tyler&lt;/a&gt;'s excellent blog - by &quot;accident&quot; . In the post &lt;a href=&quot;https://twitter.com/tyler_treat&quot;&gt;Tyler&lt;/a&gt; discusses microservices and the challenges we have in an enterprise with development environments. This is a topic close to my heart as we struggle with this at &lt;a href=&quot;/derivco&quot;&gt;Derivco&lt;/a&gt;. Oh and BTW, when you read this post - do yourself a favour and browse the other posts on the &lt;a href=&quot;https://bravenewgeek.com/&quot;&gt;site&lt;/a&gt;, they are worth their weight in gold!&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/netflix-techblog/titus-the-netflix-container-management-platform-is-now-open-source-f868c9fb5436&quot;&gt;Titus, the Netflix container management platform, is now open source&lt;/a&gt;. A blog post announcing Netflix open sourcing its container management platform: &lt;a href=&quot;https://github.com/Netflix/titus&quot;&gt;Titus&lt;/a&gt;. From the post: &lt;em&gt;Titus offers a convenient model for managing compute resources, allows developers to maintain just their application artifacts, and provides a consistent developer experience from a developer’s laptop to production by leveraging Netflix container-focused engineering tools.&lt;/em&gt; Very interesting!&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.acolyer.org/2018/04/26/skyway-connecting-managed-heaps-in-distributed-big-data-systems/&quot;&gt;Skyway: connecting managed heaps in distributed big data systems&lt;/a&gt;. In this post &lt;a href=&quot;https://twitter.com/adriancolyer&quot;&gt;Adrian&lt;/a&gt; dissects a white paper about how to create a cluster of JVMs, and efficiently copy objects across remote heaps in the cluster.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Streaming&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.confluent.io/designing-event-driven-systems&quot;&gt;Concepts and Patterns for Streaming Services with Apache Kafka&lt;/a&gt;. Back in the &lt;a href=&quot;/2018/03/25/interesting-stuff-week-12/&quot;&gt;Interesting Stuff - Week 12&lt;/a&gt; post, I linked to a presentation by &lt;a href=&quot;https://twitter.com/benstopford&quot;&gt;Ben Stopford&lt;/a&gt; discussing microservices and streaming using Kafka. It turns out &lt;a href=&quot;https://twitter.com/benstopford&quot;&gt;Ben&lt;/a&gt; has authored a book about how service-based architectures and stream processing tools such as Apache Kafka can help you build business-critical systems. The link is for a free download of that book. I can warmly recommend the book!&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://kafka-summit.org/events/kafka-summit-london-2018/&quot;&gt;Kafka Summit London&lt;/a&gt;. The Kafka summit in London just ended. This post is to a page where you find links to the keynote presentations. They are well worth watching!&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Data Science&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blogs.technet.microsoft.com/machinelearning/2018/04/25/transfer-learning-for-text-using-deep-learning-virtual-machine-dlvm/&quot;&gt;Transfer Learning for Text using Deep Learning Virtual Machine (DLVM)&lt;/a&gt;. A blog post which compares multiple Machine Reading Comprehension models with each other. For the model creation as well as the comparison, the &lt;a href=&quot;https://docs.microsoft.com/en-us/azure/machine-learning/data-science-virtual-machine/deep-learning-dsvm-overview&quot;&gt;Deep Learning Virtual Machine&lt;/a&gt; was used.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.mlyearning.org/&quot;&gt;MACHINE LEARNING YEARNING&lt;/a&gt;. This link is to a sign-up page for a book which &lt;a href=&quot;https://en.wikipedia.org/wiki/Andrew_Ng&quot;&gt;Andrew NG&lt;/a&gt;, of deep learning fame, is in the process of writing.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;SQL Server Machine Learning Services&lt;/h2&gt;

&lt;p&gt;I am busy writing a post correcting some errors I did in the last post (&lt;a href=&quot;/2018/03/21/microsoft-sql-server-r-services-sp-execute-external-script-iii/&quot;&gt;sp_execute_external_script - III&lt;/a&gt;) in the &lt;a href=&quot;/series/sql_server_2k16_r_services&quot;&gt;SQL Server R Services&lt;/a&gt; series. I hope to publish it in a week or so.&lt;/p&gt;

&lt;h2&gt;~ Finally&lt;/h2&gt;

&lt;p&gt;That's all for this week. I hope you enjoy what I did put together. If you have ideas for what to cover, please comment on this post or &lt;a href=&quot;mailto:niels.it.berglund@gmail.com&quot;&gt;ping&lt;/a&gt; me.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Interesting Stuff - Week 16</title>
   <link href="http://nielsberglund.com/2018/04/22/interesting-stuff-week-16/"/>
   <updated>2018-04-22T16:45:06+02:00</updated>
   <id>http://nielsberglund.com/2018/04/22/interesting-stuff---week-16</id>
   <content type="html">&lt;p&gt;Throughout the week, I read a lot of blog-posts, articles, and so forth, that has to do with things that interest me:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;data science&lt;/li&gt;
&lt;li&gt;data in general&lt;/li&gt;
&lt;li&gt;distributed computing&lt;/li&gt;
&lt;li&gt;SQL Server&lt;/li&gt;
&lt;li&gt;transactions (both db as well as non db)&lt;/li&gt;
&lt;li&gt;and other &quot;stuff&quot;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This blog-post is the &quot;roundup&quot; of the things that have been most interesting to me, for the week just ending.&lt;/p&gt;

&lt;!--more--&gt;


&lt;h2&gt;SQL Server&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blogs.msdn.microsoft.com/sqlserverstorageengine/2018/04/17/calling-http-endpoints-in-t-sql-using-curl-extension/&quot;&gt;Calling Http endpoints in T-SQL using CURL extension&lt;/a&gt;. Seeing that I think SQLCLR is the best thing (almost) since sliced bread, it is cool to read this blog-post by &lt;a href=&quot;https://twitter.com/JovanPop_MSFT&quot;&gt;Jovan&lt;/a&gt; about how you can use &lt;code&gt;CURL&lt;/code&gt; from SQLCLR. I do however have a couple of comments about the post, but I will save them for a post of my own.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Distributed Computing&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.infoq.com/articles/managing-data-microservices&quot;&gt;Managing Data in Microservices&lt;/a&gt;. An article based on a presentation at QCon in San Francisco 2017. The article is about how to separate out monolithic databases into individual data sources for microservices.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;.NET&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blogs.msdn.microsoft.com/dotnet/2018/04/18/performance-improvements-in-net-core-2-1/&quot;&gt;Performance Improvements in .NET Core 2.1&lt;/a&gt;. .NET Core 2.1 is about to be released, and this post looks at some of the performance improvements in this release.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Streaming&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.confluent.io/blog/confluent-platform-4-1-with-production-ready-ksql-now-available/&quot;&gt;Confluent Platform 4.1 with Production-Ready KSQL Now Available&lt;/a&gt;. This post announces the release of &lt;strong&gt;Confluent Platform 4.1&lt;/strong&gt;. The BIG thing (for me) is the inclusion of KSQL: the ability to write SQL queries against the event data in Kafka. Very, very cool!&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Big Data&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://azure.microsoft.com/en-us/blog/iteratively-develop-and-debug-your-etl-elt-workflows-using-data-factory/&quot;&gt;Iterative development and debugging using Data Factory&lt;/a&gt;. A blog post about how &lt;strong&gt;Azure Data Factory&lt;/strong&gt; now allows you to do debugging of your data pipelines.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Azure Global Boot Camp 2018&lt;/h2&gt;

&lt;p&gt;Yesterday, April 21 2018, all Azure communities came together again in the sixth great &lt;a href=&quot;https://global.azurebootcamp.net/&quot;&gt;Global Azure Bootcamp&lt;/a&gt; event! In Durban, we had a great event arranged by, a fellow MVP, &lt;a href=&quot;https://twitter.com/bytezn&quot;&gt;Lawrance Reddy&lt;/a&gt;. The turnout was really good, and everyone seemed to have had a great time. Yours truly presented two talks (the links are for the slide decks):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/downloads/presentations/azureglobalbootcamp_2k18/azure_ml.pdf&quot;&gt;Azure Machine Learning Labs with Ninja Niels&lt;/a&gt;. Don't blame me for the title, &lt;a href=&quot;https://twitter.com/bytezn&quot;&gt;Lawrance&lt;/a&gt; insisted. Anyway, this talk was a gentle introduction to Azure Machine Learning and Azure Machine Learning Studio.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/downloads/presentations/azureglobalbootcamp_2k18/azure_datalake.pdf&quot;&gt;Go Big or Go Home: Big Data Analytics &amp;amp; Azure Data Lake&lt;/a&gt;. This presentation was a short introduction to Azure Data Lake Store and Azure Data Lake Analytics.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;If you download the slide decks from the links above, do not expect to get much out of them. The slides were there for background information, and most of the talks were demos.&lt;/p&gt;

&lt;h2&gt;~ Finally&lt;/h2&gt;

&lt;p&gt;That's all for this week. I hope you enjoy what I did put together. If you have ideas for what to cover, please comment on this post or &lt;a href=&quot;mailto:niels.it.berglund@gmail.com&quot;&gt;ping&lt;/a&gt; me.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Interesting Stuff - Week 15</title>
   <link href="http://nielsberglund.com/2018/04/15/interesting-stuff-week-15/"/>
   <updated>2018-04-15T10:20:37+02:00</updated>
   <id>http://nielsberglund.com/2018/04/15/interesting-stuff---week-15</id>
   <content type="html">&lt;p&gt;Throughout the week, I read a lot of blog-posts, articles, and so forth, that has to do with things that interest me:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;data science&lt;/li&gt;
&lt;li&gt;data in general&lt;/li&gt;
&lt;li&gt;distributed computing&lt;/li&gt;
&lt;li&gt;SQL Server&lt;/li&gt;
&lt;li&gt;transactions (both db as well as non db)&lt;/li&gt;
&lt;li&gt;and other &quot;stuff&quot;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This blog-post is the &quot;roundup&quot; of the things that have been most interesting to me, for the week just ending.&lt;/p&gt;

&lt;!--more--&gt;


&lt;h2&gt;Distributed Computing&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/azure/service-fabric/service-fabric-controlled-chaos&quot;&gt;Induce controlled Chaos in Service Fabric clusters&lt;/a&gt;. A blog-post about Service Fabric Chaos. Chaos simulates intermittent, interleaved faults (both graceful and ungraceful) throughout the cluster over extended periods of time. Service Fabric Chaos allows developers to be able to test the stability of their services while the underlying unreliable infrastructure is going through complicated state transitions due to faults.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Streaming&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.infoq.com/presentations/uber-elasticsearch-clusters&quot;&gt;Scaling Uber's Elasticsearch Clusters&lt;/a&gt;. An &lt;a href=&quot;https://www.infoq.com/&quot;&gt;InfoQ&lt;/a&gt; presentation about how Uber scaled its Elasticsearch clusters as well as its ingestion pipelines for ingestions, queries, data storage, and operations.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.infoq.com/presentations/cloud-native-kafka-netflix&quot;&gt;Cloud-native and Scalable Kafka Architecture&lt;/a&gt;. Another presentation from &lt;a href=&quot;https://www.infoq.com/&quot;&gt;InfoQ&lt;/a&gt;. This presentation is about how Netflix addresses the issues of stability and scalability in a cloud environment by having many smaller and mostly immutable Kafka clusters with limited state changes.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://highscalability.com/blog/2018/4/9/give-meaning-to-100-billion-events-a-day-the-analytics-pipel.html&quot;&gt;Give Meaning To 100 Billion Events A Day - The Analytics Pipeline At Teads&lt;/a&gt;. An article about how &lt;a href=&quot;https://teads.tv/&quot;&gt;Teads&lt;/a&gt; orchestrates Kafka, Dataflow and BigQuery together to ingest and transform a large stream of events (close to 100 billion per day). A very interesting read!&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Data Science&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blogs.msdn.microsoft.com/mlserver/2017/04/12/pleasingly-parallel-using-rxexecby/&quot;&gt;Running Pleasingly Parallel workloads using rxExecBy on Spark, SQL, Local and Localpar compute contexts&lt;/a&gt;. A blog-post about &lt;code&gt;rxExecBy&lt;/code&gt; which is a new &lt;strong&gt;RevoScaleR&lt;/strong&gt; function introduced in &lt;strong&gt;Microsoft Machine Learning Server 9.1&lt;/strong&gt;. The function can be used to partition input data source by keys and apply user-defined functions on individual partitions.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Upcoming Conferences&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.meetup.com/Azure-Transformation-Labs/events/248443776/&quot;&gt;Azure Global Boot-Camp 2018 Durban&lt;/a&gt;. On April 21, 2018, all Azure communities will come together once again in the sixth great &lt;a href=&quot;https://global.azurebootcamp.net/&quot;&gt;Global Azure Bootcamp&lt;/a&gt; event! If you are in the Durban area, please join up and come and learn about all things Azure. Here in Durban, [Lawrance][lawr], who is a fellow MVP - but in the Azure space, arranges it. Yours truly presents two talks; one about Azure ML and the other about Azure Data Lake.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;~ Finally&lt;/h2&gt;

&lt;p&gt;That's all for this week. I hope you enjoy what I did put together. If you have ideas for what to cover, please comment on this post or &lt;a href=&quot;mailto:niels.it.berglund@gmail.com&quot;&gt;ping&lt;/a&gt; me.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Interesting Stuff - Week 14</title>
   <link href="http://nielsberglund.com/2018/04/08/interesting-stuff-week-14/"/>
   <updated>2018-04-08T16:04:25+02:00</updated>
   <id>http://nielsberglund.com/2018/04/08/interesting-stuff---week-14</id>
   <content type="html">&lt;p&gt;Throughout the week, I read a lot of blog-posts, articles, and so forth, that has to do with things that interest me:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;data science&lt;/li&gt;
&lt;li&gt;data in general&lt;/li&gt;
&lt;li&gt;distributed computing&lt;/li&gt;
&lt;li&gt;SQL Server&lt;/li&gt;
&lt;li&gt;transactions (both db as well as non db)&lt;/li&gt;
&lt;li&gt;and other &quot;stuff&quot;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This blog-post is the &quot;roundup&quot; of the things that have been most interesting to me, for the week just ending.&lt;/p&gt;

&lt;!--more--&gt;


&lt;h2&gt;Misc.&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://jvns.ca/blog/2018/03/31/reverse-engineering-notability-format/&quot;&gt;Reverse engineering the Notability file format&lt;/a&gt;. I came across &lt;a href=&quot;https://twitter.com/b0rk&quot;&gt;Julia&lt;/a&gt;'s blog a couple of weeks ago, and it is awesome for a tech-nerd like myself. This particular post &quot;speaks&quot; to me after my &lt;a href=&quot;/2017/03/18/microsoft-sql-server-r-services-internals-i/&quot;&gt;&lt;strong&gt;Internals&lt;/strong&gt;&lt;/a&gt; posts where I to a small extent reversed engineered how SQL Server R Services works.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;.NET&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.infoq.com/presentations/perfview-net&quot;&gt;PerfView: The Ultimate .NET Performance Tool&lt;/a&gt;. An &lt;a href=&quot;https://www.infoq.com/&quot;&gt;InfoQ&lt;/a&gt; presentation about &lt;strong&gt;PerfView&lt;/strong&gt;. PerfView is an open source tool for .NET performance diagnosis in production environments. PerfView is ideal if you want to systematically measure and improve CPU time, wall-clock time, and memory usage.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Streaming&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://theburningmonk.com/2018/04/what-is-the-best-event-source-for-doing-pub-sub-with-aws-lambda/&quot;&gt;What is the best event source for doing pub-sub with AWS Lambda?&lt;/a&gt;. In this post, &lt;a href=&quot;https://twitter.com/theburningmonk&quot;&gt;Yan&lt;/a&gt; compares and contrasts some of the options for implementing messaging patterns such as pub-sub with AWS Lambda (server-less). A very informative read!&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.infoq.com/podcasts/Danny-Yuan-uber&quot;&gt;Streaming: Danny Yuan on Real-Time, Time Series Forecasting @Uber&lt;/a&gt;. An &lt;a href=&quot;https://www.infoq.com/&quot;&gt;InfoQ&lt;/a&gt; podcast where &lt;a href=&quot;https://twitter.com/g9yuayon&quot;&gt;Danny Yuan&lt;/a&gt; (Real-time Streaming/Forecasting Lead @Uber) talks about building a real-time streaming platform with a significant focus on forecasting. Awesome quote: &lt;em&gt;&quot;If you want to start leveraging machine learning, developers just need to start doing.&quot;&lt;/em&gt;. This is a must listen!&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Data Science&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.infoq.com/news/2018/04/booking-kubernetes-machine-learn&quot;&gt;How Booking.com Uses Kubernetes for Machine Learning&lt;/a&gt;. Another piece from &lt;a href=&quot;https://www.infoq.com/&quot;&gt;InfoQ&lt;/a&gt;. This time an article about how Booking.com scale machine learning (ML) models for recommending destinations and accommodation to their customers using Kubernetes. This post is a must-read!&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://azure.microsoft.com/en-us/blog/operationalize-azure-databricks-notebooks-using-data-factory/&quot;&gt;Ingest, prepare, and transform using Azure Databricks and Data Factory&lt;/a&gt;. A post about how to, using Azure DataBricks and Azure Data Factory, do ETL/ELT via data pipelines.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Upcoming Conferences&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.meetup.com/Azure-Transformation-Labs/events/248443776/&quot;&gt;Azure Global Boot-Camp 2018 Durban&lt;/a&gt;. On April 21, 2018, all Azure communities will come together once again in the sixth great &lt;a href=&quot;https://global.azurebootcamp.net/&quot;&gt;Global Azure Bootcamp&lt;/a&gt; event! If you are in the Durban area, please join up and come and learn about all things Azure. Here in Durban, &lt;a href=&quot;https://twitter.com/bytezn&quot;&gt;Lawrance&lt;/a&gt;, who is a fellow MVP - but in the Azure space, arranges it. Yours truly presents two talks; one about Azure ML and the other about Azure Data Lake.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;SQL Server Machine Learning Services&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/2018/04/08/sql-server-machine-learning-services-and-extended-events/&quot;&gt;SQL Server Machine Learning Services and Extended Events&lt;/a&gt;. A couple of weeks there was a post on one of the internal MVP forums discussing SQL Server XEvents. I decided to look into how XEvents worked with SQL Server Machine Learning Services, and this post is what I came up with.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;~ Finally&lt;/h2&gt;

&lt;p&gt;That's all for this week. I hope you enjoy what I did put together. If you have ideas for what to cover, please comment on this post or &lt;a href=&quot;mailto:niels.it.berglund@gmail.com&quot;&gt;ping&lt;/a&gt; me.&lt;/p&gt;
</content>
 </entry>
 

</feed>
